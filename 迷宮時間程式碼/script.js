// 遊戲配置
const config = {
    initialZoom: 1,
    minZoom: 0.1,
    maxZoom: 50,
    targetRadius: 2,
    trailOpacity: 0.5,
    zoomSpeed: 0.1
};

// 遊戲狀態
const gameState = {
    isInitialized: false,
    isLoading: true,
    error: null
};

  function drawObjects(ctx, zoomFactor, offsetX, offsetY) {
    objects.forEach(obj => {
      // 計算縮放後的坐標與大小
      const scaledX = obj.x * zoomFactor + offsetX;
      const scaledY = obj.y * zoomFactor + offsetY;
      const scaledWidth = obj.width * zoomFactor;
      const scaledHeight = obj.height * zoomFactor;
  
      // 繪製物件
      ctx.fillStyle = "blue";
      ctx.fillRect(scaledX, scaledY, scaledWidth, scaledHeight);
  
      // 繪製文字
      ctx.fillStyle = "white";
      ctx.font = `${12 * zoomFactor}px Arial`;
      ctx.fillText(obj.text, scaledX + 5, scaledY + 15);
    });
  }


class MazeGame {
    constructor(canvasId) {
        this.canvas = document.getElementById(canvasId);
        this.ctx = this.canvas.getContext('2d');
        this.initializeCanvas();
        // 添加觸控相關狀態
        this.touchStartX = 0;
        this.touchStartY = 0;
        this.lastTouchDistance = 0;
        this.isTouching = false;
        this.isMultiTouch = false;
        
        // 初始化移動端視圖
        this.initMobileView();
        // 遊戲狀態
        this.zoomFactor = config.initialZoom;
        this.offsetX = 0;
        this.offsetY = 0;
        this.isDragging = false;
        this.lastMouseX = 0;
        this.lastMouseY = 0;
        // 原有的建構函式內容
        // 加入新的變數追蹤上一個有效的滑鼠位置
        this.lastValidMouseX = null;
        this.lastValidMouseY = null;
        // 添加邊界檢測的邊距
        this.boundaryMargin = 10; // 距離邊緣多少像素時觸發
        // 修改終點屬性，加入原始座標
        this.endpoint = {
            originalX: 1445,
            originalY: 1134,
            radius: 15,
            x: 100,  // 這將被動態更新
            y: 1130,  // 這將被動態更新
        };
        this.hasReachedEnd = false;
        this.fadeAlpha = 0;
        this.congratsAlpha = 0;
        this.isTransitioning = false;
        this.congratsTimeout = null;
        this.coloredImage = new Image();
        this.coloredImage.src = './images/紫禁城平面圖上色.png';
        // 綁定觸控事件
        this.bindTouchEvents();
        this.lastFollowingStopTime = 0; // 記錄最後一次停止跟隨的時間
        this.followingCooldown = 1000; // 冷卻時間（毫秒）
        this.showRulesModal();
        
        // 目標物件
        this.target = {
            x: 80,
            y: 1130,
            radius: config.targetRadius,
            color: 'red',
            borderColor: 'blue',
            following: false,
            trail: []
        };

        // 添加搖桿狀態
        this.joystickSpeed = 5; // 調整移動速度
        this.bindJoystickEvents();

        // 添加地點物件
        this.locations1 = [
           
            { 
                x: 738, 
                y: 25, 
                width: 54, 
                height: 21, 
                text: "神武門", 
                description: "神武門是紫禁城的北門，明永樂十八年（1420年）建成，初名玄武門，取古代「四神獸」中的玄武，代表北方之意，後因避康熙皇帝玄燁名諱改名神武門。\n\n"+
"城台開有三座券門，帝后走中間正門，嬪妃、官吏、侍衛、太監及工匠等均由兩側的門出入。清代選秀女，將嬪妃迎入宮中均走此門。民國十三年（1924年），遜帝溥儀被驅逐出宮即由神武門離去。\n\n"+
"神武門總高31米，平面矩形。基部為漢白玉石須彌座，上建城樓。樓建於漢白玉基座上，面闊5間，進深1間，四周圍廊，環以漢白玉石欄杆。上簷懸藍底鎏金銅字滿漢文「神武門」華帶匾。樓頂覆黃色琉璃瓦，地面鋪墁金磚。內設鐘鼓，與鐘鼓樓相應，用以起更報時。但皇帝居宮中時，神武門上的鐘不鳴。\n\n"+
"神武門內，有東西走向的一條長街，稱為「北橫街」。北橫街東、西分別到紫禁城東、西城牆腳下。北橫街與紫禁城北城牆之間，有東長房、西長房，分別位於神武門內的東、西兩側。舊時，東長房、西長房均屬於雜房，東長房可能曾經被用作庫房、廚房等。2009年8月，經過裝修改造的東長房被闢為東長房觀眾服務區。\n\n"+
"神武門外，有神武門廣場，廣場南為神武門，向北至景山前街，通往景山公園，筒子河從廣場下的涵洞流過。舊時，廣場北部有北上門，今已拆除，北上門東、西兩側各有連房，它們均位於筒子河北岸、景山前街南側。\n\n"+
"神武門「故宮博物院」石匾為歷史學家郭沫若題寫。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 335, 
                y: 1026, 
                width: 48, 
                height: 15, 
                text: "武英殿", 
                description: "武英殿是一組建於明代永樂年間的宮殿建築，位於北京故宮外朝熙和門以西，正殿武英殿南向，面闊5間，進深3間，黃琉璃瓦歇山頂。須彌座圍以漢白玉石欄，前出月台，有甬路直通武英門。在明朝初期帝王齋居、召見大臣這些隆重的活動都是集中在武英殿的，崇禎年間皇后千秋、命婦朝賀儀也在此舉行，足見其在明朝的地位。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 1057, 
                y: 1028, 
                width: 48, 
                height: 15, 
                text: "文華殿", 
                description: "文華殿，位於紫禁城外朝東路、東華門內，原為明朝太子攝事之所、皇帝便殿，明朝及清朝為舉行經筵之禮的場所，清朝的殿試閱卷工作也在文華殿進行。\n\n"+
"文華殿始建於明朝初年（建成時間估計在永樂帝即位以後），本址位於紫禁城外朝協和門以東，與武英殿東、西相對。由於文華殿位於紫禁城東路，並且曾一度作為「太子視事之所」，根據五行說，東方屬木，其色為青，代表生長，所以太子使用的宮殿屋頂覆蓋綠琉璃瓦。文華殿起初是皇帝常御之便殿，明朝天順朝、成化朝，太子踐祚以前，首先攝事於文華殿。後來由於眾太子大多年幼，無法參與政事，嘉靖十五年（1536年）將文華殿恢復為皇帝便殿，後來作為每年春秋仲月的經筵之所，文華殿建築隨之由綠琉璃瓦頂改為黃琉璃瓦頂。嘉靖十七年（1538年），在文華殿後添建聖濟殿。\n\n"+
"明朝末年，李自成攻入紫禁城後，文華殿建築大多被毀。1683年（清康熙二十二年）才開始重建，當時明朝興建的武英殿尚存，所以「一切規橅殆依明制為之」，以武英殿作為重建文華殿的藍本。康熙二十四年(1685年)又在此殿的東面建傳心殿，乾隆三十九年(1774年)在聖濟殿的遺址建文淵閣，從而形成了文華殿區域的當今格局。\n\n"+
"這一區域宮殿的佈局簡潔緊湊、有主有從，空間處理有起有伏，使文華殿顯得較為突出。文華殿四周環繞宮牆，東西寬約90米，南北長約140米。文華門位於南牆稍偏西處，院內前殿為文華殿，後殿為主敬殿，建於工字形台基上，左有東配殿名本仁殿，右為西配殿名集義殿。前殿庭院中間有高出地面1.5米的御路和文華門直通，前殿的月臺由城磚砌成並上鋪條石，月臺上置香爐，左右出陛，形成端莊肅穆的氣氛。在清光緒年間文華殿曾作為接見各國使臣的地方。\n\n"+
"文華殿主殿平面呈工字形，分為前後兩殿，中間有穿廊相連。前殿即文華殿，坐北朝南，面闊五間，進深三間，黃琉璃瓦歇山頂。文華殿前有月臺，月臺前方有一條甬路連接文華門。\n\n"+
"每年春秋仲月，均在文華殿舉辦經筵之禮，並以大學士、尚書、左都御史、侍郎等人充經筵講官，滿漢各有8人。每年以滿漢各2人分別講「經」、「書」，皇帝則撰寫御論，闡發講習「四書五經」之心得，禮畢，賜茶賜座。\n\n"+
"明代，設有「文華殿大學士」一職。明洪武十五年（1382年）置，秩正五品，本為輔導太子之官，後侍皇帝左右，以備顧問。明仁宗時，閣職漸崇。清代沿明制設「文華殿大學士」，秩正一品。「文華殿大學士」與「中和殿大學士」（後改為「體仁閣大學士」）、「保和殿大學士」、「武英殿大學士」、「文淵閣大學士」、「東閣大學士」合稱「三殿三閣」。文華殿大學士之上本有中和殿大學生、保和殿大學士銜，乾隆十三年（1748年），省中和殿，保和殿亦不常置，文華殿大學士遂為四大學士之首，職掌變為輔助皇帝管理政務，統轄百官，權力較明代大為擴展。\n\n"+
"清朝任文華殿大學士的名臣有：張鵬翮、和珅、李鴻章、榮祿等。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 1169, 
                y: 650, 
                width: 161, 
                height: 92, 
                text: "南三所", 
                description: "明朝這一帶有端敬殿、端本宮，為東宮太子所居。清乾隆十一年（1746年）在原有遺址上興建三所院落，因其位於寧壽宮以南，故又稱「南三所」，也稱「阿哥所」或「所兒」，嘉慶朝以後多以「麋芳殿」代稱整組建築。南三所共用一座宮門，門內有一東西窄長的小廣場，廣場北側自東向西依序排列3所，每所皆為前後3進，形製完全相同。整個南三間共有房200餘間。南三所位在紫禁城東部，按陰陽五行之說，東方屬木，青色，主生長，故屋頂多覆綠琉璃瓦，並安排皇子在此居住。",
                color: "rgba(255, 165, 0, 0.5)"
            },{ 
                x: 733, 
                y: 380, 
                width: 51, 
                height: 15, 
                text: "乾清宮", 
                description: "乾清宮建築規模為內廷之首，採用黃琉璃瓦重檐五殿頂，座落於單層漢白玉玉石臺基上。乾清宮面闊9間，進深5間，高20米，建築結構為減柱造行形式，以擴大室內空間，設有寶座。明朝的十四個皇帝和清代的順治、康熙兩個皇帝，都以乾清宮為寢宮（自雍正始移居養心殿）。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 498, 
                y: 413, 
                width: 137, 
                height: 88, 
                text: "養心殿", 
                description: "養心殿位於紫禁城內廷西南方，從雍正開始，近二百年來歷代清帝均以此為休息及辦公的地方，因此，養心殿可說是紫禁城的心臟，是支配著大清王朝興衰、詔書發布的重要場所。雍正即位以後，養心殿成為皇帝日常辦公就寢之地，在此批章閱本，召對引見，宣諭籌策漸成為慣例，因而此後清的各代皇帝均以此地做為主要辦公的地方，如晚清時的慈禧太后即在養心殿垂簾聽政，而末代皇帝溥儀宣布退位的詔書，亦是從養心殿發出來的。",
                color: "rgba(255, 165, 0, 0.5)"
            },{ 
                x: 1242, 
                y: 380, 
                width: 47, 
                height: 13, 
                text: "寧壽宮", 
                description: "寧壽宮，又稱為乾隆花園，位處紫禁城東北角、寧壽宮區左側長方形的小片區，為一七七一年乾隆親自下旨改建成太上皇宮。但終其一生，乾隆並未有機會在此久住，而這處園林隨後便在他諭令下保持一切規制、不得改建，之後歷任清帝都遵循祖訓，僅將寧壽宮做為宴會祭典場所使用。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 727, 
                y: 1118, 
                width: 70, 
                height: 30, 
                text: "內金水橋", 
                description: "金水橋是明清北京金水河上的多組橋梁，分別稱內金水橋、外金水橋，始建於明朝永樂年間。內金水橋位於今北京故宮內太和門前廣場的內金水河上，為五座並列單孔拱券式漢白玉石橋。\n\n"+
"這五座橋在建築和使用上各有不同——中間的一座最為寬闊宏大並且雕有蟠龍花柱，是皇帝的專用通道，也稱為御路橋。御路橋兩側稍窄的二座橋叫做王公橋，宗室親王才能使用。而王公橋左右二邊的最窄的橋稱為品級橋，只有三品以上的文武大臣才能通過。"
,
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 733, 
                y: 672, 
                width: 50, 
                height: 36, 
                text: "中和殿", 
                description:"中和殿，是北京故宮外朝三大殿之一，位於太和殿、保和殿之間。\n\n"+
"中和殿始建於明朝永樂十八年（1420年），當時稱「華蓋殿」。明朝嘉靖年間遭火災，重修後改稱「中極殿」，如今中和殿天花內構件上仍然留有明朝「中極殿」墨跡。清朝順治二年（1645年）始改稱「中和殿」。「中和」二字取自《禮記•中庸》「中也者，天下之本也；和也者，天下之道也」。\n\n"+
"中和殿高19米，平面呈正方形，面闊、進深各為3間，建築面積580平方米，是三大殿中最小的。中和殿在明、清兩朝的使用功能基本相同，主要包括：皇帝在太和殿舉行大典前會先在中和殿小憩、皇帝親祭的前一日閱視祝文、閱視擬好的奏書、舉行玉牒(皇帝家譜)存放儀式、在此召見官員或賜食。\n\n"+
"中和殿四面開門，正面（南面）有槅扇門12扇，東面、北面、西面有槅扇門各4扇。門前石階南北各三出，東西各一出，中間是浮雕雲龍紋御路。門兩側有青磚檻牆，上有瑣窗，內外簷都飾有金龍和璽彩畫，天花採用瀝粉貼金正面龍。殿內設有地屏寶座。\n\n"+
"中和殿正中設有寶座，兩旁陳列著兩個肩輿。肩輿是皇帝乘坐的轎子中的一種，主要供皇帝在紫禁城內活動使用。寶座上方的內簷下懸掛乾隆帝御題「允執厥中」匾額，「允執厥中」源自《尚書•大禹謨》「人心惟危，道心惟微，惟精惟一，允執厥中。」兩側柱子上掛有乾隆帝御題對聯：「時乘六龍以御天所其無逸，用敷五福而錫極彰厥有常。」\n\n"+
"清順治十五年（1658年），清廷設置中和殿大學士，為諸殿閣大學士之首。清乾隆十三年（1748年），撤銷中和殿大學士一職，改為體仁閣大學士。袁世凱意圖稱帝時，以三大殿為宮殿，對內外裝潢有所改動。其中寫有殿名的匾額上面的滿文被鑿去，漢文移至中間。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 726, 
                y: 609, 
                width: 61, 
                height: 23, 
                text: "保和殿", 
                description: "保和殿，是北京故宮外朝的三大殿之一，位於中和殿以北，是故宮少數至今仍保留明代原形的建築之一。\n\n"+
"保和殿於明朝永樂十八年（1420年）建成，初名「謹身殿」。明朝嘉靖年間遭火災，重修後在嘉靖四十一年（1562年）改稱「建極殿」。清朝順治二年（1645年）始改名「保和殿」。「保和」 出自《易經》，意為「志不外馳，恬神守志」，也就是神志得專一，以保持宇宙間萬物和諧。\n\n"+
"保和殿現存主體梁架仍為明代建築。建築結構採用「減柱造」特殊法式，減去了殿內前簷六根金柱，開闊了空間。保和殿面闊9間，進深5間，建築面積1240.00㎡，高29.50m。殿內金磚鋪地，坐北向南設雕鏤金漆寶座，寶座上方懸掛有乾隆帝御題「皇建有極」匾額，意即任君建立天下最高準則。兩側柱子上懸掛乾隆帝御題對聯：「祖訓昭垂我後嗣子孫尚克欽承有永，天心降鑒惟萬方臣庶當思容保無疆。」\n\n"+
"保和殿後的階陛中間設有一塊雕刻著雲、龍、海水、江崖的御路石，稱雲龍石雕（流雲立龍），是故宮中最大的一塊石雕，長16.57米，寬3.07米，厚1.70米，重250噸，原為明代雕刻，清乾隆時期又重新雕刻。圖案是在山崖、海水和流雲之中有九條口戲寶珠的游龍。\n\n"+
"清朝初年，後三宮修復前，順治帝、康熙帝曾在此居住。順治三年（1646年）至順治十三年（1656年），順治帝居住保和殿，時稱「位育宮」，順治帝大婚也在此舉行。康熙帝自即位至康熙八年（1669年）居住保和殿，時稱「清寧宮」。這兩位皇帝居住保和殿時，均以暫居而改稱殿名。\n\n"+
"保和殿於明清兩代用途不同，明代大典前皇帝常在此更衣。清代每年除夕、正月十五，皇帝賜外藩、王公及一二品大臣宴，賜額駙之父、有官職家屬宴、及每科殿試均於保和殿舉行。且於每歲終，宗人府、吏部在保和殿填寫宗室滿、蒙、漢軍以及各省漢職外藩世職黃冊。\n\n"+
"乾隆五十四年（1789年）起，保和殿成為每科殿試的固定場所。在禮部舉行的會試中獲錄取的人（稱為貢士，其中第一名為會元）方有資格參加殿試。殿試地點原在天安門外，後在太和殿，清乾隆五十四年（1789年）始定於保和殿。因殿試由皇帝親自主持，故不設考官，只設讀卷官。由皇帝親揀大學士2人、部院大臣6人充任。殿試只考制策一場，當日交卷。試題大多在殿試前一日由讀卷官密擬，以俟欽定。有時，也由皇帝親自擬定試題。殿試時，派王、大臣監試，另有御史4人參與監試。以禮部尚書為提調，由內閣、翰林院、詹事府、光祿寺、鴻臚寺等處派出20餘人，執行受卷、彌封、收掌、印卷、填榜等具體事務。\n\n"+
"明朝初期，明太祖殺胡惟庸，罷中書省，廢除二千餘年來的丞相制度，直接由皇帝親統六部。但由於工作份量實在過於龐大，洪武十五年，朱元璋不得不設殿閣大學士，為皇帝顧問，一開始大學士並無實權，類似今日的秘書之職。明成祖靖難奪位後逐漸倚重內閣，內閣權力遂大。明仁宗即位後，升楊榮為太常卿兼謹身殿大學士，後閣職漸崇。嘉靖時，謹身殿改為建極殿；清朝改建極殿為保和殿。保和殿大學士即為所謂的「三殿三閣大學士」（保和殿、文華殿、武英殿、文淵閣、東閣、體仁閣）之一。清朝為正一品銜。掌管奉陳規誨，點檢題奏，票擬批答等職務。\n\n"+
"以下為曾擔任保和殿大學士的明清名臣：\n\n"+
"謹身殿大學士：楊榮、商輅、李東陽、楊廷和、毛紀、楊一清、張璁、嚴嵩。\n\n"+
"建極殿大學士：徐階、李春芳、高拱、張居正、申時行、王錫爵、趙志皋、沈一貫、葉向高、韓爌、周延儒、溫體仁。\n\n"+
"保和殿大學士：索額圖、衛周祚、張廷玉、鄂爾泰、傅恆。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 720, 
                y: 1028, 
                width: 80, 
                height: 17, 
                text: "太和門", 
                description: "太和門是紫禁城內最大的宮門，由紫禁城正南的午門進來，首先看到的便是這座大門。太和門的命名，是參照太和殿而來的。太和殿最初叫奉天殿，後來改稱皇極殿，最後才確定為太和殿。因此，太和門的名字，也是從最早明朝永樂十八年（1420年）的奉天門，嘉靖三十七年六月辛卯重建改稱「大朝門」，嘉靖四十一年（1562年）改稱「皇極門」。清朝順治二年（1645年），改易宮殿名號，門隨大殿改稱為「太和門」。\n\n"+
"太和門面闊9間，進深4間，建築面積1371.14平方米。正中共開三門，上覆重簷歇山頂，下為漢白玉基座，梁枋等構件施以和璽彩畫。大門的前後石階各三個，左右石階各一個，建築通高23.8米。太和門前列有銅獅一對、銅鼎四隻，是鑄造於明朝的陳設銅器。太和門前的這對銅獅子十分高大，這樣的銅獅子在皇城內只有六對。\n\n"+
"太和門兩側各設旁門一座，與太和門平排並列，左邊的叫昭德門，右邊的叫貞度門。於明朝永樂十八年（1420年）建成，初稱「東角門」及「西角門」，嘉靖四十一年（1562年）改為「弘政門」及「宣治門」。現在的名號是在清朝順治二年（1645年）改稱的。明朝時，左邊昭德門為考選鴻臚之地。清朝兩門皆為侍衛值宿處。左右門體量比較矮小，屬於陪襯性的建築物。\n\n"+
"太和門前有面積約26000㎡的廣場，內金水河自西向東蜿蜒流過。河上橫架五座石橋，習稱內金水橋。廣場兩側是排列整齊的廊廡，習稱東、西朝房，並有協和門（明代稱會極門）和熙和門（明代稱歸極門）東西對峙。東側廊廡在明代用作實錄館、玉牒館和起居注館，清代改作稽察欽奉上諭事件處和內誥敕房。西側廊廡在明代為編修《大明會典》的會典館，清代改為繙書房和起居注館。\n\n"+
"明朝時，太和門是「御門聽政」之處，皇帝在太和門接受臣下朝拜及上奏，頒佈詔令，處理政事。清朝初年，皇帝也曾在太和門聽政、賜宴，後來「御門聽政」改在乾清門進行。\n\n"+
"御門聽政前，文武官各於左右掖門外序立等待。鐘鳴後門開，百官依次進入，過金水橋，至太和門（時稱皇極門）丹墀東西相向立，等候皇帝前來。皇帝入座後，鴻臚寺官員及文武百官全部入班，行一拜三叩禮，分班侍立。鴻臚寺官唱奏事。各衙門相繼奏事，禦史維持秩序。奏事畢，鳴鞭駕歸，百官以次出。明代的御門聽政，隆慶六年時定為每旬三次，逢三、六、九日為期。\n\n"+
"清順治元年（1644年）九月，滿族統治者定鼎北京後，愛新覺羅•福臨在皇極門頒佈大赦令；十月初一，愛新覺羅•福臨在皇極門登基。\n\n"+
"清光緒十四年，十二月十五日（1889年1月16日）深夜，貞度門守軍富山、雙奎兩人將洋油燈掛在簷柱上後睡了覺，時間久後，油燈點著了柱子而失火，雖然派出了7000多人次救火，但大火依然燒了兩天，太和門及其附屬建築盡毀。但下一個月，光緒十五年，正月二十七日（1889年2月26日），為光緒帝大婚的吉日。按照清朝禮儀，大婚時皇后須經太和門進宮。假若皇后從太和門的廢墟而入，那就太失皇家體面了。僅剩42天時間，重修太和門已來不及，清廷遂令北京的棚匠紮彩工，搭成一座彩棚太和門，以假亂真，連在宮延上經驗豐富的人都不能辨別真假。而且即使高達十丈，強大的風只能造成小搖小晃。於是大婚時，皇后也就穩穩當當地被抬進了紫禁城。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 1064, 
                y: 1082, 
                width: 43, 
                height: 15, 
                text: "文華門", 
                description: "位於文華殿建築群最南端。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 1052, 
                y: 996, 
                width: 60, 
                height: 15, 
                text: "主敬殿", 
                description: "文華殿後殿為主敬殿，規制和文華殿略似，但進深稍淺。文華殿與主敬殿之間有穿廊相連。主敬殿以北便是文淵閣前的方池。",
                color: "rgba(255, 165, 0, 0.5)"
            },{ 
                x: 1063, 
                y: 938, 
                width: 42, 
                height: 18, 
                text: "文淵閣", 
                description: "文淵閣是北京故宮中最大的一座皇家藏書樓，閣制仿自浙江寧波范氏天一閣，是中國古代漢族宮殿建築之精華，反映了清代宮廷建築在工程設計和建造藝術上的高度技巧和水準，對於研究中國清代藏書文化和建築歷史具有一定的歷史價值。\n\n"+
"「文淵閣」曾經是明朝南京故宮、北京故宮及明中都鳳陽的皇家藏書樓名，庶吉士就學觀政之所。其中，明朝北京文淵閣建於永樂年間，其在宮中的位置與南京故宮的文淵閣相同，均在左順門外的東南角。即為文華殿前、內承運庫之後，面對皇城。明朝北京故宮的這座文淵閣後來無存。\n\n"+
"清朝乾隆年間，在北京紫禁城東華門內的文華殿後，明朝聖濟殿舊址，新建了一座文淵閣。這座文淵閣是清朝皇宮藏書樓，於乾隆四十一年（1776年）建成。乾隆三十八年（1773年），乾隆帝下詔開設「四庫全書館」，編纂《四庫全書》。乾隆三十九年（1774年）下詔興建藏書樓，命在文華殿後規度適宜方位，興建文淵閣，用來專貯《四庫全書》。文淵閣與國史館、經筵講官、起居注館同屬翰林院體系之從屬機構。\n\n"+
"乾隆四十一年（1776年）文淵閣建成後，皇帝每年在文淵閣舉辦經筵。乾隆四十七年（1782年）《四庫全書》完成時，乾隆帝在文淵閣設宴賞賜編纂《四庫全書》的各級官員以及參加編纂的人員。\n\n"+
"1932年，故宮博物院委託梁思成、劉敦楨維修文淵閣。此後七十多年未經修繕。自2013年4月29日起，文淵閣對外開放，以原狀陳列，但觀眾不能進入室內參觀。\n\n"+
"文淵閣坐北面南，仿照浙江寧波范氏天一閣構建。樓上為一整間，樓下則分為六間，取「天一生水，地六承之」的意境，意在防火。乾隆三十九年（1774年）乾隆作《文淵閣記》稱：「閣之制一如范氏天一閣」。\n\n"+
"文淵閣外觀為上、下兩層，面寬33米，進深14米，面闊六間，西盡間設有樓梯。兩山牆的青磚砌築至屋頂。頂覆黑琉璃瓦，在五行理論中，黑色主水，以水克火，從而可保藏書樓免受火災。文淵閣前開鑿一方池，引內金水河水流入該方池，池上中央架有一座石橋，石橋及方池四周的欄板雕有水生動物圖案。文淵閣後採用太湖石堆砌成假山，形如屏障，其間種植松柏。文淵閣一層正中朝南設寶座，上方朝南懸掛「滙流澂鑑」匾（乾隆帝題），兩旁對聯為「壁府古含今藉以學資主敬，綸扉名副實詎惟目仿崇文」（乾隆帝題）。文淵閣東側有一座碑亭，盔頂黃琉璃瓦，亭內立有一通石碑，正面刻有乾隆帝撰寫的《文淵閣記》，背面刻有文淵閣賜宴御製詩。\n\n"+
"文淵閣建築裝飾和油漆彩畫以冷色為主，陳設佈置復原乾隆時期狀態。一層在中間設皇帝寶座，為講經筵之處。二層中三間與一層相通，周圍設樓板，置書架。二層為暗層，光線極弱，只能藏書。三層除西盡間為樓梯間外，其它五間通連，每間依前後柱位列書架間隔，寬敞明亮。明間設御榻，備皇帝隨時登閣覽閱。\n\n"+
"《四庫全書》及《欽定古今圖書集成》收藏於文淵閣，按照經、史、子、集四部分架安置。以經部儒家經典為首共計22架與《四庫全書總目考證》、《欽定古今圖書集成》放置在文淵閣一層，並且在一層中間設皇帝寶座，作為講經筵之處。文淵閣二層中三間和一層相通，周圍設有樓板，放置書架，放有史部書33架。文淵閣二層是暗層，光線非常微弱，只可藏書，不便在此閱覽。文淵閣三層除了西盡間是樓梯間以外，其餘五間相互通連，每間依照前後柱位排列書架間隔，顯得十分寬敞明亮。子部書22架、集部書28架存放在三層，明間設有御榻，以備皇帝隨時可來此閱覽。乾隆帝曾作詩曰：「丙申高閣秩幹歌，今喜書成鄴架羅，……。」清宮規定，大臣官員中若有嗜古書、勤學習者，經過允許可到文淵閣內閱覽書籍，但是不得損壞書籍，且嚴禁攜書籍出文淵閣。\n\n"+
"清乾隆皇帝，即位之初就下詔搜訪遺書，並下令儒臣校勘《十三經》等經典。清乾隆三十七年（1772年），乾隆帝正式批准大學士劉統勳等人議定的輯校《永樂大典》章程，並下令將來辦理成編時，著名《四庫全書》。隨後，紀曉嵐、陸錫熊、孫士毅等三人被任命為總纂官，並從翰林中選了數人組成了四庫全書的編纂班子——四庫館。\n\n"+
"清乾隆四十七年（1782年）春，第一部《四庫全書》編撰並抄錄完成。全書共收書3461種、79309卷、36381冊，分為經、史、子、集四部分。《四庫全書》編成以後，最初用六年抄錄正本四部，除了一部收藏在文淵閣以外，其餘三部分別收藏在文源閣（位於北京圓明園）、文津閣（位於承德避暑山莊）、文溯閣（位於瀋陽故宮），這四閣又稱「北四閣」，也稱「內廷四閣」。後來又抄錄三部收藏在文宗閣、文匯閣、文瀾閣，稱為「南三閣」。 這七部《四庫全書》或已經亡失，或被各圖書館收藏。文淵閣本《四庫全書》現收藏在臺北的國立故宮博物院。\n\n"+
"文淵閣入藏《四庫全書》後，設置領閣事、提舉閣事、直閣事、校理、檢閱等職位進行各項管理工作。領閣事上傳下達，總司其責；提舉閣事直接管理一般事務，並督率所轄內務府司員具體從事看守、收發、掃除等各項雜務；直閣事、校理、檢閱各員則每日輪流入直，負責書籍的查點檢閱等事宜。\n\n"+
"文淵閣《四庫全書》從編制完成後在紫禁城內度過了130餘年。清王朝滅亡後，安放在紫禁城文淵閣內的《四庫全書》開始了書閣分家的生活。\n\n"+
"民國二十五年（1936年）8月，南京朝天宮文物庫房建成，運至上海的《四庫全書》等文物又轉運至南京新庫房儲存。民國二十七年（1938年），藏書西遷到貴陽。民國二十八年（1939年），藏書又遷到貴陽以西的安順縣，貯存于南門外的華嚴洞內。民國三十七年（1948年）9月以後，文淵閣本《四庫全書》運往臺灣，現藏臺北國立的故宮博物院。\n\n"+
"文淵閣在書籍的典藏方面，為便於使用和保存，還專門製作楠木書函，每若干冊書置入一函，襯以夾板，束之綢帶，書函的一端可以開閉，函面端楷刻寫全書名稱、書函序號以及所屬部類和具體書名，並飾以與該書所屬部類及書冊封面相同的顏色。書冊裝函後，即按部類順序放入專門製作的書架，安置閣中。計經部書20架，每架48函，凡960函，分貯下層兩側；史部書33架，每架亦48函，凡1584函，藏於中間暗層；子部書22架，每架72函，凡1584函，安放上層之中；集部書28架，每架亦72函，凡2016函，分置於上層兩旁。總計103架，6144函，36000冊。為便於查找翻閱，還另外繪製了《四庫全書排架圖》，一併庋置其中，需要時按圖索驥，循架取書。\n\n"+
"文淵閣大學士，為明朝、清朝內閣大學士名號之一。\n\n"+
"明太祖洪武十五年（1382年）設置，以翰林院官員充任，以備顧問應對，官居正五品。明成祖永樂年間，開始以殿閣大學士銜簡選入內閣參預機要。洪熙、宣德以後，內閣之權開始加重，掌管批答奏章，草擬詔命，實際行使宰相的職權。因為品秩較低，常以六部尚書兼任。清朝沿置，升為正一品。但權責不如明朝，雍正設立軍機處，文淵閣大學士只主管日常例行政務和發布文告。\n\n"+
"明朝曾任文淵閣大學士的名臣有： 解縉、黃淮、楊士奇、楊榮、商輅、徐溥、李東陽、焦芳、楊廷和、毛紀、張璁、高拱、陳以勤、趙貞吉、呂調陽、張四維、申時行、王錫爵、葉向高、方從哲、韓爌、孫承宗、周延儒、溫體仁、徐光啟等。\n\n"+
"清朝曾任文淵閣大學士的名臣有：衛周祚、張廷玉、蔣廷錫、琦善、瑞麟、榮祿等。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 981, 
                y: 1183, 
                width: 105, 
                height: 68, 
                text: "內閣大堂", 
                description: "內閣大堂位於紫禁城太和門東廡外東南，是清朝大學士直舍，又稱「大學士堂」。1990年代，中國紫禁城學會成立後，內閣大堂成為其會址。內閣大堂的主要建築包括：內閣大堂本體，坐北朝南，面闊三間，覆黃琉璃瓦，大堂前設有屏門四扇及垂花門，並以牆垣與東、西兩廂分隔。東西側各有耳房四間，東為滿票簽房，西為稽查房，均為灰瓦硬山頂。大堂後方為內閣大學士的齋宿區域，其東側設有滿票簽檔子房與典籍廳。其他附屬建築包括漢票簽房，位於內閣大堂東廂房，坐東朝西，面闊三間，為侍讀擬寫草簽、中書繕寫真簽及存放檔案之所；蒙古堂為西廂房，坐西朝東，面闊三間；漢本堂與滿本堂分別位於漢票簽房與蒙古堂南側，均面向紫禁城南城牆，面闊三間；祝版房位於滿本堂之西，是專門負責繕寫大祀祝版的場所。整體建築布局嚴謹，體現內閣辦公的重要地位與功能。",
                color: "rgba(255, 165, 0, 0.5)"
            },{ 
                x: 1096, 
                y: 1200, 
                width: 152, 
                height: 13, 
                text: "內閣大庫", 
                description: "內閣大庫位於紫禁城東南隅、內閣大堂以東，是內閣專門用於收貯文書與檔案的庫房。內閣大庫包括兩座建築，均為東西走向的排房，結構以磚石為主，牆面設窗，窗內有鐵柱，窗外加裝鐵板窗，具有較高的安全性。其中，西側建築為紅本庫，用於存放紅本、典籍、關防等文書；東側建築為實錄庫，用於存放書籍、三節表文、表匣、外藩表文等檔案。此外，內閣大庫還收存來自滿本堂的實錄、史書、錄疏、起居注，以及前代帝王功臣畫像等珍貴物品。目前，內閣大庫建築保存完好，展現出當年檔案保管的規模與嚴密性。",
                color: "rgba(255, 165, 0, 0.5)"
            },{ 
                x: 1010, 
                y: 653, 
                width: 50, 
                height: 15, 
                text: "箭亭", 
                description: "箭亭位於紫禁城東部景運門外、奉先殿以南的開闊平地上，是清朝皇帝及其子孫名義上用於練習騎馬射箭的場所。然而，清朝皇帝及其眷屬很少長時間居住於紫禁城，實際上皇子皇孫學習騎射的主要場所在圓明園山高水長樓旁的「西廠」或稱「西苑」。箭亭始建於清雍正八年（1730年），其建立旨在防止滿族因受漢化而導致祖制淹沒，乾隆帝和嘉慶帝均曾在此射箭與操演武藝。箭亭前為寬闊的平地，為皇子皇孫練習騎射及殿試武進士的閱技勇之地。箭亭四周亦為清初特許入東華門者下馬之地，為拴歇馬匹之處。箭亭為獨立大殿，坐北朝南，面闊五間，進深三間，黃琉璃瓦歇山頂，建築四面出廊，內有20根朱漆大柱承托梁架，山牆不開窗，南北設有八扇菱花槅扇門。殿內中央設寶座，東側立有乾隆十七年（1752年）上諭臥碣，內容提倡滿清貴族遵守舊制，勤於練習騎射，不效漢俗。嘉慶十三年（1808年），又立碑告誡子孫不忘祖制。箭亭至今保存完好，並於2016年隨紫禁城新增開放區域而向公眾開放，其南側現擺放著根據唐代《五牛圖》製作的銅雕五牛，作為文化展示的一部分。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 337, 
                y: 1090, 
                width: 40, 
                height: 12, 
                text: "武英門", 
                description: "面闊五間（30.4米），進深二間（11.7米），黃琉璃瓦單檐歇山頂，武英門以北有一條帶欄杆的甬路連接正殿武英殿。武英門東、西兩側各有值房（廊房），頂覆黃琉璃瓦。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 326, 
                y: 996, 
                width: 66, 
                height: 13, 
                text: "敬思殿", 
                description: "為後殿，面闊五間，進深三間，黃琉璃瓦單檐歇山頂，單翹單昂斗拱，形制與正殿相同，但進深稍淺。該殿與正殿同在一個「工」字形台基上。兩殿中間有三間的封閉的廊道相連，廊道為中華民國時期加建。",
                color: "rgba(255, 165, 0, 0.5)"
            },{ 
                x: 463, 
                y: 1070, 
                width: 50, 
                height: 20, 
                text: "斷虹橋", 
                description: "斷虹橋位於紫禁城熙和門外、武英殿以東，是一座極其精美的石拱橋，其名稱「斷虹」為俗稱，明清時期文獻中未見記載。該橋為單拱石券結構，南北向橫跨內金水河，全長18.7米，最寬處達9.20米。橋面鋪設漢白玉巨石，兩側石欄板雕刻穿花龍紋，望柱上飾有神態各異的石獅，工藝華麗精緻，是紫禁城內橋樑之冠。斷虹橋的建造年代眾說紛紜，有學者認為始建於明朝初年，也有觀點認為其起源於元朝。橋北一帶古槐成林，素有「十八棵槐」之稱，這片古樹群為紫禁城內特色景觀之一，據傳種植於元朝，現存槐樹雖不足十八棵，但其歷史風貌仍清晰可見。斷虹橋以北區域曾長期不對外開放，直至2016年9月29日，故宮博物院新開放該橋至慈寧宮的南北通道，觀眾可從斷虹橋向北經十八槐至故宮文化資產數位化應用研究所，該所設有VR演播廳供學生團體預約觀看故宮虛擬實境節目，並可繼續北行經故宮冰窖至慈寧宮與隆宗門間的小廣場，完整展現了這一區域的文化與景觀價值。",
                color: "rgba(255, 165, 0, 0.5)"
            },{ 
                x: 195, 
                y: 1024, 
                width: 54, 
                height: 59, 
                text: "寶蘊樓", 
                description: "寶蘊樓位於紫禁城西南，原為咸安宮的舊址，後來成為故宮博物院的院史館。咸安宮建於明朝嘉靖年間，曾是太子住處，清朝初年改建，並設有官學。後來，咸安宮改稱為壽安宮，成為皇太后的住所，並於乾隆時期修繕。1912年，咸安宮遭火災，並隨著古物陳列所的設立，改為寶蘊樓，作為文物收藏與展示的場所。1914年，隨著大量文物運至北京，寶蘊樓成為存放清朝及熱河行宮文物的重點倉庫，並至今保存大量歷代珍貴文物。",
                color: "rgba(255, 165, 0, 0.5)"
            },{ 
                x: 207, 
                y: 1169, 
                width: 77, 
                height: 27, 
                text: "南薰殿", 
                description: "南薰殿位於紫禁城外朝西路，武英殿西南，建於明朝，為安奉歷代帝后及賢臣圖像的場所，是故宮少數保留明代原形的建築之一。名稱來自《禮記·樂記》中的「南風」，寓意以南風熏陶。歷史上，南薰殿在唐代已有，並在南漢與明朝亦有相似建築。明朝時期，閣臣在此撰寫金寶金冊文，並在崇禎三年命武英殿畫歷代賢君圖，清朝乾隆時移至南薰殿。南薰殿為獨立院落，四周圍牆，建築為五間單檐歇山頂，內設朱紅漆木閣，安奉歷代帝王及皇后像。南薰殿的木構和彩畫均為明代遺物，並存有乾隆帝的臥碣。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 258, 
                y: 1206, 
                width: 250, 
                height: 49, 
                text: "南大庫", 
                description: "南大庫位於紫禁城西南角，原為燈庫、木庫和武器庫等多功能庫房區域，現僅保存燈庫。燈庫位於南薰殿東南側，原為儲存燈具的場所。這座廊房覆有黃琉璃瓦，在乾隆京城全圖中標註為「磁器庫」。在南大庫保護管理用房建成前，燈庫曾用作故宮武警總隊的食堂。2013年，故宮博物院啟動了南大庫保護管理用房建設工程，旨在改善武警駐守故宮的條件並騰退相關區域，以利古建築的保護。該工程占地7336平方米，計劃建築面積3966平方米，預計2015年完工。2014年，紫禁城內進行考古發掘，發現了與清朝相關的建築遺址及灰坑，出土大量御窯瓷器碎片，這些發現對研究清朝內務府的工藝生產提供了珍貴資料。",
                color: "rgba(255, 165, 0, 0.5)"
            },{ 
                x: 740, 
                y: 507, 
                width: 40, 
                height: 20, 
                text: "乾清門", 
                description: "乾清門是北京故宮內廷的正門，因乾清宮而得名，過此門便可見乾清宮。該門始建於明朝永樂十八年（1420年），清朝順治十二年（1655年）重修，是皇帝「御門聽政」的地方。順治帝首創在乾清門「御門聽政」的慣例，聽政時間通常為早上8點，奏事官員在門外跪奏，皇帝在門內作出「降旨」決定。康熙帝特別勤政，幾乎每日到此聽政，許多重大決策也在此作出；然而自雍正、乾隆以後，「避喧聽政」的時間增多，乾清門聽政次數逐漸減少，至咸豐帝時停止。乾清門也是齋戒和典禮的舉行地點。乾清門面闊5間，進深3間，建築高約16米，為單檐歇山頂設計，基座為高1.5米的漢白玉須彌座，周圍環繞雕石欄杆，門前有鎏金銅獅和御路石，整體裝飾金碧輝煌。乾清門廣場以北是內廷區域，以南是外朝區域，廣場東西側分別為景運門和隆宗門。門外兩側設有影壁和多功能廬房，分別用於大臣奏事和侍衛值班。2013年，故宮進行乾清門廣場地面翻墁工程，恢復歷史原貌，並向公眾展示傳統技藝。乾清門東側曾有星巴克分店，2007年因輿論爭議撤出，現改為故宮商店。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 568, 
                y: 522, 
                width: 70, 
                height: 18, 
                text: "軍機處", 
                description: "軍機處是清朝康熙、雍正年間創立的中央最高輔弼機構，標誌著君主專制的最高階段。始設於雍正七年（1729年），最初為臨時軍事指揮機構，處理西北用兵事務。後因準噶爾戰爭，擴展職責為常設機構，成為皇帝的秘書班子及參議機構，取代議政王大臣會議和廷議，鞏固皇權。軍機處設於隆宗門內，內部陳設簡樸，辦事效率高，保密制度嚴格。職掌包括起草諭旨、處理奏摺、參與重大政務和案件審議，並隨侍皇帝出巡等。軍機大臣為主要成員，另有軍機章京負責文書工作。此機構在清朝統治期間發揮重要作用，直至宣統三年（1911年）隨責任內閣成立而撤銷。",
                color: "rgba(255, 165, 0, 0.5)"
            },{ 
                x: 739, 
                y: 338, 
                width: 39, 
                height: 22, 
                text: "交泰殿", 
                description: "交泰殿位於北京故宮內廷，位於乾清宮與坤寧宮之間，建於明朝嘉靖年間以前，取名自《易經·泰卦》，寓意天地相交、萬物通泰。其平面為正方形，單檐四角攢尖頂，頂覆黃琉璃瓦，內部裝飾精美，設有盤龍藻井與寶座，並懸掛乾隆帝御書「無為」匾額。清朝時，交泰殿是皇后舉行慶典和管理宮務的重要場所，也是存放「二十五寶」的地方。這些印璽多用於發布詔令、軍事、司法及宗教活動，材質多樣，由宮殿監專責管理。殿內東側陳設有銅壺滴漏，西側放置大自鳴鐘，用於計時。清朝滅亡後，印璽移至故宮博物院珍寶館展出，交泰殿現作宮廷生活原狀陳列。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 731, 
                y: 294, 
                width: 56, 
                height: 16, 
                text: "坤寧宮", 
                description: "坤寧宮是北京故宮內廷後三宮之一。坤寧宮始建於明朝永樂十八年（1420年），正德九年（1514年）和萬曆二十四年（1596年）兩次遭火災，萬曆三十三年（1605年）重建。清朝順治元年（1645年）重修後，經順治十二年（1655年）再次改建成為薩滿祭祀場所，但其“中宮”地位未改變。清朝康熙四年（1665年），康熙帝大婚時，太皇太后指定大婚在坤寧宮行合卺禮。同治帝、光緒帝和溥儀的婚禮也在坤寧宮舉行，並且皇帝和皇后都在婚後短暫居住在此，然後遷入乾清宮或養心殿。雍正以後，皇帝移住養心殿，皇后則不再居住在坤寧宮，轉而選擇東六宮、西六宮之一。坤寧宮仍作為專供薩滿祭祀的場所，並且每天進行祭祀活動。坤寧宮的結構為坐北朝南，設有九間，其中包含用於皇帝大婚的東暖閣，這裡的陳設包括龍鳳喜床等婚禮用品。清朝道光至宣統年間，坤寧宮的東暖閣陳設相對穩定，只在大婚時有所調整。1959年起，坤寧宮內部被改為宮廷生活原狀陳列，並且在2003年到2006年進行了修繕，發現了歷史上的建築特徵如方形銅煙筒內襯等，並進行了保存和展示。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 733, 
                y: 255, 
                width: 52, 
                height: 15, 
                text: "坤寧門", 
                description: "坤寧門，位於北京紫禁城坤寧宮後台階下正中。坤寧門坐南朝北，南為坤寧宮，北通御花園。明朝初年，在御花園欽安殿以北設坤寧門，即如今的順貞門。如今的坤寧門及其東西兩側在明朝是一道圍廊，稱為「遊藝齋」，與御花園相接。明朝嘉靖十四年（1535年），坤寧宮後北圍廊正中的廣運門改建，同時將其改稱「坤寧門」，此名一直沿用至今。清朝順治十二年（1655年），坤寧門重修。坤寧門坐南朝北，面闊三間，單檐歇山頂，覆黃琉璃瓦。明間設有門，中一間裝有宮門兩扇。兩側間隔是值房，後檐設有兩抹頭方格檻窗，中配方格風窗，前檐是牆。坤寧門東西兩側的山牆斜出八字琉璃影壁，兩側接坤寧宮的東、西廡房。坤寧門是後三宮通向御花園的門。",
                color: "rgba(255, 165, 0, 0.5)"
            },{ 
                x: 739, 
                y: 152, 
                width: 42, 
                height: 13, 
                text: "欽安殿", 
                description: "欽安殿位於故宮御花園的正中偏北，建於明朝永樂十八年（1420年），並於嘉靖十四年（1535年）增建牆垣。殿內主要供奉玄天上帝。清朝乾隆時期，欽安殿進行了多次修繕，並在2005年恢復了乾隆年間的原貌。殿內設有五彩龍架大鐘與五彩鳳架大鼓等珍貴文物，並供奉玄天上帝的雕像。正北側有三個大龕，其中正龕的玄天上帝像為明朝永樂年間製作。此外，還有六尊「六從」神像，與五供香案一同擺放在殿內中央。欽安殿的前院有月台，四周圍繞著漢白玉欄杆，並設有天一門。每年元旦和重要節日，皇帝會在此設斗壇、拈香行禮，並設道場進行儀式。欽安殿自清代以來，成為皇家宗教儀式的重要場所。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 639, 
                y: 120, 
                width: 241, 
                height: 123, 
                text: "御花園", 
                description: "御花園，位於紫禁城中軸線上，是一座微型的皇宮後廷花園。這裡設有花石小徑、假山、池塘、古林。御花園設在皇宮中路的末端，很有意味。領略了皇宮中路一座座高大巍峨的宮殿莊嚴肅穆的感覺之後，來到御花園，會體會皇宮溫和婉約的一面。御花園原來是皇帝及后妃憩賞的園林，也兼具頤養、祭祀、讀書、藏書等功能。御花園的主體建築欽安殿是重簷盝頂式建築，處在紫禁城中軸線上，以欽安殿為中心，向南側東、西兩側佈置亭台樓閣。禦花園內的竹、柏、松之間點綴山石，形成了四季長青的景觀。",
                color: "rgba(255, 165, 0, 0.5)"
            },{ 
                x: 744, 
                y: 100, 
                width: 38, 
                height: 15, 
                text: "順貞門", 
                description: "順貞門位於紫禁城內廷中路的北端，是通往御花園的北門。始建於明朝初年，原名「坤寧門」，於嘉靖十四年（1535年）更名為「順貞門」，當時坤寧門遷至坤寧宮後北圍廊正中。順貞門為隨牆琉璃門建築，共有三座，每座均安裝有雙扇大門，並嵌有九顆門釘。門外是北橫街，與神武門相對，內部南向對承光門，左右兩側設有延和門與集福門。這些門之間以琉璃頂矮牆相連，圍成小院。順貞門是內廷通往神武門的重要通道，皇后和皇帝有時會經此出入。特別在舉辦道場或選秀等場合，順貞門的開啟受到嚴格控制。明清兩朝，宮中重大儀式或人物往來常經此門，並保持良好的保存狀態。",
                color: "rgba(255, 165, 0, 0.5)"
            },{ 
                x: 576, 
                y: 354, 
                width: 35, 
                height: 15, 
                text: "永壽宮", 
                description: "永壽宮，位於紫禁城內廷西六宮之一，為西六宮區的東南角建築。永壽宮建於明朝永樂十八年（1420年），初名「長樂宮」，歷經嘉靖十四年（1535年）更名為「毓德宮」，萬曆四十四年（1616年）改為「永壽宮」。其歷史可追溯至明清兩朝，曾為多位妃嬪及皇帝的重要活動場所，順治十二年（1655年）、康熙三十六年（1697年）、光緒二十三年（1897年）進行過多次修繕，基本保持了明代初期的格局。明代永壽宮曾是萬曆帝召見臣子的場所，崇禎帝也在此齋居。清代居住於永壽宮的妃嬪包括順治皇貴妃董鄂氏、康熙朝溫僖貴妃及乾隆朝的崇慶皇太后等，乾隆年間亦曾於此設宴為公主下嫁慶祝。光緒時期，永壽宮成為存放御用物件的大庫。建築方面，永壽宮為二進院落，主要建築包括正門永壽門、正殿永壽宮及東西配殿、後殿及院落中的井亭，正殿內懸掛乾隆帝御筆「令德淑儀」匾額，並曾於牆上陳設《班姬辭輦圖》。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 474, 
                y: 351, 
                width: 41, 
                height: 16, 
                text: "太極殿", 
                description: "太極殿位於紫禁城內廷西六宮西南角，建於明永樂十八年（1420年），初名「未央宮」，後因明嘉靖帝生父朱祐杬出生於此，更名為「啟祥宮」，清代改稱「太極殿」。該殿多次修葺，曾作為明神宗因火災暫居之所，清末慈禧太后亦曾居於此，並設置宮廷戲台演出。太極殿原為二進院，清代後期將後殿改為穿堂殿，並與長春宮相連，形成南北四進院，主要建築包括正殿太極殿、體元殿、東西配殿及清末添建的小戲台等。正殿採黃琉璃瓦歇山頂，內飾石膏堆塑天花，裝潢華麗，體元殿明間掛有「體元殿」匾，東西配殿分別名為「怡性軒」與「樂道堂」。如今，太極殿及體元殿內設有宮廷生活原狀陳列，展現清宮文化與生活特色。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 474, 
                y: 279, 
                width: 40, 
                height: 14, 
                text: "長春宮", 
                description: "長春宮，位於紫禁城內廷西六宮區域西部中間，是歷史悠久的建築之一。其始建於明朝永樂十八年（1420年），初名「長春宮」，後經嘉靖年間更名為「永寧宮」，明萬曆年間又恢復「長春宮」之名。清朝康熙二十二年重修，咸豐九年（1859年）進行改建，將啟祥宮後殿改為穿堂殿，名為「體元殿」，自此長春宮與啟祥宮連成一體。該建築具有南北四進院落的格局，前檐懸掛「長春宮」匾額，內部設有正殿、配殿、戲台等建築。長春宮歷史上曾為多位后妃居住，如明天啟年間的李成妃、清乾隆朝的孝賢皇后富察氏（死後停靈於此）、同治至光緒年間的慈禧太后，以及清宣統朝的隆裕太后等人。文獻記載中，清末遜帝溥儀的淑妃文繡亦曾居於此。長春宮內部裝飾精美，正殿「澂心正性」匾與各廂房的陳設顯示其奢華與功能性，並保存了許多清代宮廷文化的遺跡，如乾隆帝所題的匾額及紅樓夢題材的壁畫。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 576, 
                y: 280, 
                width: 41, 
                height: 12, 
                text: "翊坤宮", 
                description: "翊坤宮位於紫禁城內廷，建於明永樂十八年（1420年），最初稱為萬安宮，後來於嘉靖十四年改名為翊坤宮。它是明清時期皇帝妃嬪的居所，並且在清代多次進行修繕。翊坤宮的主要建築包括正殿，面闊五間，歇山頂上鋪設黃琉璃瓦，華麗的裝飾展現了皇室的奢華。正殿前懸掛著「翊坤宮」的匾額，宮內的陳設包括寶座、屏風及香几等，展示了清代妃嬪的生活。翊坤宮曾是許多妃嬪的住所，如康熙時期的宜妃郭絡羅氏、乾隆時期的繼皇后那拉氏等。乾隆年間，繼皇后因為失寵被囚禁於此，顯示翊坤宮在歷史上也有特殊的政治意義。光緒年間，慈禧太后也曾在此接受朝賀。今日的翊坤宮已經開放為宮廷生活的展示館，向遊客呈現清代妃嬪的日常生活與宮廷建築的精緻工藝。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 577, 
                y: 228, 
                width: 38, 
                height: 17, 
                text: "儲秀宮", 
                description: "儲秀宮是紫禁城內廷西六宮之一，位於宮殿區的東北角。建於明朝永樂十八年（1420年），最初名為「壽昌宮」，於明朝嘉靖十四年（1535年）更名為「儲秀宮」。清朝沿襲此名稱，並多次進行修葺，特別是在光緒十年（1884年），為慈禧太后五十壽辰進行了大規模整修。慈禧太后早年居住於儲秀宮後殿，並在此生下同治帝，後來隨著她的升遷，她將儲秀宮後殿定名為「麗景軒」，並興建了室內戲台。儲秀宮的建築風格典雅且具有多重意涵，尤其是其中的匾額與裝飾，大多為慈禧太后親自題寫或賜予，彰顯了宮殿的尊貴與特殊地位。如今，儲秀宮已經成為展示宮廷生活的博物館，並定期舉辦與溥儀相關的展覽，將其歷史與文化呈現給公眾。儲秀宮的建築結構包括正殿、東西配殿及多個裝飾精美的房間，每一處均能見到精緻的手工藝和象徵性匾額，反映了當時皇室的生活品味與宮廷的威嚴。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 477, 
                y: 225, 
                width: 32, 
                height: 15, 
                text: "咸福宮", 
                description: "咸福宮是紫禁城內廷西六宮之一，位於西北角，建於明永樂十八年（1420年），最初名為壽安宮，嘉靖十四年（1535年）改為現名。咸福宮曾是後宮妃嬪的住所，乾隆年間也曾作為皇帝偶爾起居之所。嘉慶四年（1799年），乾隆帝去世後，嘉慶帝曾在此守孝並主持政務。此後，咸福宮又成為後宮的住所，曾住過道光帝、咸豐帝及其母康慈皇貴太妃等人。咸豐帝時期，宮內設有同道堂，並多次以此為地方命名，特別是慈禧太后曾在此生下同治帝。咸福宮的建築風格包括琉璃瓦屋頂和傳統中式殿堂結構，正殿懸掛乾隆帝的親筆題字，並有許多貴重的文物和典籍保存其中。清朝結束後，咸福宮成為故宮博物院的一部分，並對外開放，成為展示清代宮廷生活的場所。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 525, 
                y: 150, 
                width: 50, 
                height: 40, 
                text: "崇敬殿", 
                description: "崇敬殿位於重華門內，是重華宮前院的正殿，原為乾隆帝擔任和碩寶親王時的居所，於乾隆五年（1740年）擴建而成。該殿面闊五間，進深三間，覆以黃琉璃瓦歇山頂，前檐中央新增抱廈三間，明間設有四扇古錢紋櫺花槅扇門，其他部分為檻窗。殿內明間及東、西次間合稱為樂善堂，中央懸掛乾隆帝在為親王時親筆題寫的匾額「樂善堂」，兩側楹聯則由乾隆帝撰寫、大臣張廷玉敬書，彰顯忠孝與天倫之道。殿內正中陳設寶座，後置三扇屏風，並有宮扇、香幾、太平有象、甪端等典雅陳設，這些物品為乾隆帝登基後御臨重華宮時所用。崇敬殿東暖閣位於東梢間，內供佛像，懸掛康熙帝題匾「意葉心香」，楹聯表現佛教禪意；西暖閣則在西梢間，同樣供奉佛像，掛有乾隆帝題匾「吉雲持地」，楹聯抒發禪意與滿語文化的結合。整體布局既具皇家氣派，又融入深厚的宗教意涵。",
                color: "rgba(255, 165, 0, 0.5)"
            },{ 
                x: 584, 
                y: 118, 
                width: 42, 
                height: 30, 
                text: "漱芳齋", 
                description: "漱芳齋位於紫禁城內，原是乾西五所的頭所，建於明永樂十八年（1420年）。清乾隆帝即位後，將乾西五所中的二所改建為重華宮，並將頭所改建為漱芳齋，設置戲台，作為重華宮宴集演戲之用。乾隆年間，皇帝每年新正至西苑闡福寺拈香後，會到漱芳齋開筆書福；萬壽節、聖壽節、中元節及除夕等重要節日，皇帝也常陪同皇太后在後殿進膳、看戲，並賜宴王公大臣。道光、咸豐、同治年間，皇帝仍在此侍奉太后用膳。宣統退位後，同治帝的瑜妃、瑨妃曾居於漱芳齋芝蘭室，並於太妃誕辰時在此傳戲，直到1924年溥儀被迫離宮。如今漱芳齋保存完好，為故宮博物院的貴賓接待處。漱芳齋為工字形建築，前殿、後殿及東西配殿圍合成小院，院內遊廊相連。前殿面闊五間，進深三間，黃琉璃瓦歇山頂，內部東次室額題「靜憩軒」，為乾隆帝舊時讀書處。殿前設有戲台，為亭式建築，面闊三間，進深三間，覆黃琉璃瓦攢尖頂，台面約90平方米，是紫禁城中最大的單層戲台。後殿名為「金昭玉粹」，內有方形亭式小戲台，與東室相對，供宴戲演出之用。小戲台題額「風雅存」，兩側楹聯「自喜軒窗無俗韻，聊將山水寄清音」。整座漱芳齋曾是清代皇室宴飲和觀戲的重要場所。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 412, 
                y: 130, 
                width: 38, 
                height: 17, 
                text: "靜怡軒", 
                description: "位於存性門內正北，坐北朝南。復原設計方案為：「勾連搭三卷殿。面闊五間，進深三間，周圍廊，前後四檁，中間六檁卷棚頂，外檐重拱交麻葉斗拱，裝修步步緊，支摘窗，格扇門，瓦頂綠琉璃瓦黃卷邊，彩畫為金線方心式蘇畫。」",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 412, 
                y: 117, 
                width: 38, 
                height: 12, 
                text: "慧曜樓", 
                description: "位於靜怡軒正北，處在花園東部最北端，坐北朝南。復原設計方案為：「七開間硬山樓東邊耳殿一間，西邊過橋遊廊一間。面闊七間，進深一間，四檁卷棚頂，上層檐重拱交麻葉斗拱，上下檐裝修燈籠框支摘窗，格扇門，瓦頂黃琉璃瓦綠卷邊，彩畫為金線方心式蘇畫。」",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 330, 
                y: 117, 
                width: 47, 
                height: 14, 
                text: "敬勝齋", 
                description: "位於花園西部的西北角，坐北朝南。復原設計方案為：「九開間前出廊硬山脊。面闊九間，進深一間，前出廊，東五間為明廊，西四間為暗廊，六檁硬山頂，重拱交麻葉斗拱，裝修步步緊支摘窗，格扇門，瓦頂綠琉璃瓦黃卷邊，彩畫為金線方心式蘇畫。」敬勝齋以《畫太簇始和》為準，復原設計方案定為起脊做法。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 349, 
                y: 140, 
                width: 37, 
                height: 27, 
                text: "延春閣", 
                description: "位於花園西部正中央，坐北朝南。復原設計方案為：「重檐四角攢尖周圍廊。面闊五間，進深五間，周圍廊，兩層樓閣，中間設暗層，下檐五踩重昂斗拱，平座重拱，偷心造斗拱，上檐擎檐柱下設雕刻花板，內檐柱設重拱交麻葉斗拱，裝修上下檐為步步緊支摘窗，格扇門，瓦頂黃琉璃瓦藍卷邊，圓琉璃寶頂，彩畫為金線方心式蘇畫。」",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 350, 
                y: 172, 
                width: 60, 
                height: 30, 
                text: "建福宮花園", 
                description: "建福宮花園位於紫禁城內西北隅，因隨建福宮而建而得名，亦稱「西花園」。建於清乾隆七年（1742年），占地約4,020平方米，園內有十多座形式各異的建築，布局靈活。乾隆帝十分喜愛此花園，為其作詩賦並收藏珍寶，嘉慶年間這些珍寶被封存，此後成為皇家珍藏之所。1923年6月26日，建福宮花園因火災焚毀，包括靜怡軒、延春閣、敬勝齋等建築以及大量珍寶悉數化為灰燼。據報導，火災起於敬勝齋，太監們雖然最先嘗試救火，但未能有效控制火勢。溥儀在自傳中提到，搶救出的燒熔金屬超過一萬七千兩，而眾多字畫、瓷器、佛像等珍藏無法估量損失。火災發生後，義大利使館的消防員提供協助，但由於紫禁城內缺乏自來水及消防設施，撲救困難重重。溥儀認為火災與太監盜竊珍寶有關，但也有說法指火災源於電燈房。1990年代初，香港商人陳啟宗倡議復建建福宮花園，成立香港中國文物保護基金會，並於1999年獲得國務院批准展開復建工程。該工程於2000年啟動，2005年完工，建福宮花園重新恢復昔日風貌，成為故宮博物院內重要的歷史文化景點之一。復建過程以清代文獻為依據，力求忠於原貌，並使用現代技術保證建築安全與耐久性，為中國文化遺產保護樹立了範例。",
                color: "rgba(255, 165, 0, 0.5)"
            },{ 
                x: 362, 
                y: 212, 
                width: 40, 
                height: 14, 
                text: "中正殿", 
                description: "中正殿（滿語：ᠵᡠᠩᠵᡝᠩᡩᡳᠶᠠᠨ，穆麟德轉寫：jung jeng diyan）位於紫禁城內廷外西路春華門內，是一座具有深厚歷史與宗教意涵的道教建築。該建築始建於明永樂十八年，原名欽安殿，隨後幾經更名，至崇禎朝定名為中正殿。明仁宗曾於此崩逝。清代，中正殿成為藏傳佛教活動的重要場所，康熙三十六年設立了「中正殿念經處」，負責宮廷藏傳佛教事務，並定期舉行佛事活動。1923年，建福宮花園火災波及中正殿所在院落，導致中正殿及多座建築焚毀，僅餘石台明遺跡。2005年，故宮博物院與香港中國文物保護基金會合作展開復建工程，遵循「維持現狀、恢復原狀」的原則，參照史料及照片復建中正殿、淡遠樓等建築。2012年11月27日，中正殿區復建完工並舉行竣工典禮，復建後的中正殿成為故宮博物院藏傳佛教文物研究中心，展出佛像、唐卡等珍貴文物，包括康熙帝為母親祝壽製造的四壁觀音菩薩坐像及乾隆帝紀念六世班禪所繪的肖像唐卡。同日，故宮博物院院長單霽翔宣布，未來將逐步開放故宮西路，預計2015年正式向公眾開放。作為清代宮廷宗教文化的象徵，中正殿的復建不僅延續了歷史文脈，也為故宮博物院的文物研究與展示提供了新的契機。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 363, 
                y: 275, 
                width: 36, 
                height: 13, 
                text: "寶華殿", 
                description: "寶華殿坐北朝南，面闊三間，進深一間，黃琉璃瓦歇山頂，後檐明間接有抱廈一間，和北面前檐出廈的中正殿相呼應，形成南北對稱。清朝，寶華殿的明間陳設四方銅鍍金大龕一座，龕內供奉金胎釋迦牟尼佛一尊。龕前的供案上供奉觀音菩薩及阿彌陀佛銅像。東次間、西次間沿牆的供案上陳設著佛像及供器。寶華殿內的日常佛事活動主要為喇嘛誦經、設供獻等等。清朝皇帝每年多次來寶華殿拈香引禮。寶華殿前是一個廣場式院落，院落中央的漢白玉須彌座上放置「大清乾隆乙巳年造」款三足寶鼎青銅大香爐一座，靠北的東西兩側各豎有漢白玉基座的幡杆一根。清朝，這個院落是宮內舉辦大型佛事活動的場地，例如一年舉行一次的「送歲」、「跳布扎」等等活動。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 330, 
                y: 508, 
                width: 61, 
                height: 22, 
                text: "慈寧宮", 
                description: "慈寧宮位於紫禁城內廷外西路，是明清兩代太皇太后及皇太后居所的重要建築。明朝嘉靖年間，明世宗為生母蔣太后興建慈寧宮，建成後一度成為太皇太后、皇太后及先朝嬪妃的住所。明朝時期，慈寧宮經歷數次修繕，萬曆年間更因火災重建正殿。至清朝，慈寧宮作為皇太后的正宮繼續沿用，並多次翻修。乾隆年間，慈寧宮經過大規模改建，正殿由單檐廡殿頂改為重檐廡殿頂，後殿向北移動，形成如今的格局。清初，昭聖太皇太后（孝莊文皇后）居於此宮，但其後因太后地位尊崇，後繼皇太后多不敢入居，慈寧宮逐漸成為舉辦典禮與供奉佛像的場所。清代重大慶典如太后壽辰及節慶朝賀均在此舉行，慈寧宮亦為太后薨逝後治喪之地。民國後，慈寧宮改為故宮博物院的一部分，經歷多次修繕與用途調整，部分建築被用作修復廠或文保科技部。文革期間，大佛堂內佛像被運至洛陽白馬寺以充當文物陳列，顯示當時歷史文物的命運起伏。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 340, 
                y: 568, 
                width: 41, 
                height: 24, 
                text: "慈寧門", 
                description: "慈寧門：位於廣場北側，是慈寧宮的正門。[2]慈寧門始建於明朝，清朝乾隆年間改建慈寧宮時一併拆建。慈寧門為殿宇式大門，面闊五間，進深三間，黃琉璃瓦歇山頂，下有漢白玉須彌座，四周環繞石雕望柱、欄板。慈寧門前出三階，中央設有龍鳳御路石，階前左右各陳設銅鎏金瑞獸一座。慈寧門內有高台甬道通向正殿慈寧宮的月台。慈寧門的門扉設於明間、次間後檐金柱之間，各開朱漆大門兩扇。梢間後檐金柱之間為磚牆，前檐檐柱間各安有雙交四椀菱花槅扇檻窗四扇，檐下施單翹單昂五踩斗栱，梁枋繪有金琢墨石碾玉旋子彩畫，天花採用瀝粉貼金龍鳳圖案。慈寧門的門額為滿文、蒙古文、漢文三種文字的「慈寧門」，其中漢文採用篆體。慈寧門兩側接有黃琉璃瓦頂八字琉璃影壁，壁心的琉璃盒子以及岔角為菊、蘭、牡丹等花卉圖案。影壁後面有轉角廡房與慈寧門的兩山相連接。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 335, 
                y: 464, 
                width: 53, 
                height: 12, 
                text: "大佛堂", 
                description: "大佛堂是慈寧宮的後殿，為清朝太后、太妃禮佛之所，可能由於是紫禁城各個佛堂中體量最大者，故俗稱「大佛堂」。大佛堂面闊七間，進深三間，黃琉璃瓦歇山頂。大佛堂前的月台上陳設有香爐、香筒。大佛堂內裝修十分講究，供案、佛龕、佛像、佛塔、佛經、法物、供器等陳設非常多。其中傳為元朝乾漆夾紵三世佛與十八羅漢像都是傳世塑像中的珍品。大佛堂內原來懸掛清朝康熙帝「萬壽無疆」御書匾、乾隆帝「百八牟尼現莊嚴寶相，三千薝蔔聞清淨妙音」、「人天功德三摩地，龍象威神兩足尊」御書聯兩副。大佛堂的東廡也是佛堂，其內原來懸掛康熙帝「四星客華」御書額。清朝在大佛堂設首領太監、副首領太監、太監共39名（其內充喇嘛者過半），負責大佛堂的日常灑掃、念經、上香等等事宜。如今大佛堂建築保存完好，內部的佛像、龕案等陳設於文化大革命時期借往洛陽白馬寺大雄寶殿內供奉。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 308, 
                y: 413, 
                width: 109, 
                height: 40, 
                text: "壽三宮", 
                description: "壽三宮位於大佛堂以北。是三座規制完全一樣的三合院，分別位於西、中、東。其中，中宮殿處在慈寧宮的中軸線上。壽三宮前和大佛堂之間有一條甬道，甬道東西兩端各有一門，其中的東門正對東側的慈祥門。",
                color: "rgba(255, 165, 0, 0.5)"
            },{ 
                x: 208, 
                y: 432, 
                width: 84, 
                height: 99, 
                text: "壽康宮", 
                description: "壽康宮位於紫禁城內廷外西路，毗鄰慈寧宮，是清朝太皇太后及皇太后居所，太妃與太嬪隨居於此，皇帝每隔數日便至此問安。壽康宮建於雍正十三年（1735年），乾隆元年（1736年）竣工，並於嘉慶二十五年（1820年）及光緒十六年（1890年）進行重修。乾隆朝崇慶皇太后、嘉慶朝穎貴太妃及咸豐朝康慈皇太后均曾居於此。崇慶皇太后逝世後，乾隆帝仍每年於節日前往壽康宮祭拜，以示敬仰。該建築群共有三進院落，主要由壽康門、壽康宮正殿、東西配殿、寢殿及後罩房組成。壽康門為琉璃門，正殿坐北朝南，殿內懸掛乾隆帝御書「慈壽凝禧」匾額，東暖閣為皇太后日常禮佛之處。2013年，壽康宮及周邊建築完成修繕，2015年故宮博物院建院90周年時對外開放，正殿及寢殿按照清宮原有陳設布置，展示崇慶皇太后生活場景。壽康宮正殿曾於1950年代作為青銅器館使用，2014年，為確保建築安全，故宮博物院拆除了壽康宮外的彩鋼房，並推進「平安故宮」計畫，重現宮廷原貌，讓遊客一覽壽康宮的歷史與文化價值。",
                color: "rgba(255, 165, 0, 0.5)"
            },{ 
                x: 268, 
                y: 637, 
                width: 40, 
                height: 16, 
                text: "咸若館", 
                description: "咸若館位於慈寧宮花園北部中央，為花園的主體建築，是清朝太后、太妃的禮佛場所。明朝初建時，稱「咸若亭」，萬曆十一年（1583年）更名「咸若館」。清朝乾隆年間先後經過大修、改建，形成如今的形制。咸若館坐北朝南，正殿面闊五間，前出抱廈三間，四周出圍廊。正殿是黃琉璃瓦歇山式頂，抱廈是黃琉璃瓦卷棚式頂。咸若館前有一座花壇。咸若館內裝飾極為考究，梁檁上有龍鳳和璽彩畫，頂部有海墁花卉天花。室內明間柱子的裝飾帶有藏式佛殿特點。室內還有貫通東、北、西三面牆的通連式金漆毗廬帽梯級大佛龕。咸若館內懸掛著清朝乾隆帝御書「壽國香台」匾、「證最勝因金界莊嚴歡喜地，贊無量壽寶輪擁護吉祥雲」對聯，並且陳設著佛龕、條案、佛像、法器、供物等等。咸若館東、北、西三面，分別為寶相樓、慈蔭樓、吉雲樓，三座樓的形制接近，均為兩層，綠琉璃瓦黃剪邊卷棚歇山頂，呈「┌┐」形環抱著咸若館。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 270, 
                y: 619, 
                width: 40, 
                height: 15, 
                text: "慈蔭樓", 
                description: "位於咸若館後正北，是清宮內的藏經樓，始建於清朝乾隆三十年（1765年）。慈蔭樓坐北朝南，上下兩層，面闊五間，綠琉璃瓦黃剪邊卷棚歇山頂。下層東梢間是過道，前後設有門，可通往慈寧宮前廣場，西牆開門通往室內。上層明間開門，次間、梢間安有檻窗，西梢間設有樓梯。北壁設有通壁的供經龕，曾經供放北京版藏文大藏經《甘珠爾》108部。正中為佛龕，供奉釋迦牟尼佛等金銅佛像數尊。佛龕前有長條供案，案上陳設著佛塔、供器。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 245, 
                y: 674, 
                width: 91, 
                height: 30, 
                text: "慈寧宮花園", 
                description: "慈寧宮花園位於紫禁城內廷外西路慈寧宮西南，是明清時期太皇太后、皇太后及太妃、太嬪們遊憩與禮佛之地。其始建於明朝，萬曆年間曾更名臨溪亭與咸若館，清乾隆三十四年進行大規模改建，雖經多次更動但整體規模與布局基本未變。花園布局規整，左右對稱，主次分明，主要依靠水池、山石與花木營造園林氛圍。園內多松柏，間植梧桐、玉蘭、銀杏與丁香，花壇內密植牡丹與芍藥，四季景色各具特色。花園南北長約130米，東西寬50米，總占地面積6800平方米，建築集中於北部，南部則地勢平坦、花木繁茂。中軸線自南向北依次為南入口、假山、南花壇、臨溪亭、北花壇、咸若館與慈蔭樓。2013年完成修繕，並於2015年故宮博物院建院90周年時正式對外開放。咸若館依佛堂原規制陳列佛像與法器，成為故宮首個對外開放的佛堂。同年，故宮研究院考古研究所對慈寧宮花園熱力電力管線改造工程中的明代建築遺址進行搶救性發掘，揭露多層歷史遺跡，並將考古現場開放於慈寧宮花園外東側甬道，向遊客展示紫禁城的歷史文化價值。",
                color: "rgba(255, 165, 0, 0.5)"
            },{ 
                x: 243, 
                y: 323, 
                width: 41, 
                height: 20, 
                text: "春禧殿", 
                description: "為第一進院正殿。舊建築被毀時間不詳，現有建築為1989年重建。春禧殿坐北朝南，面闊五間，黃琉璃瓦單檐歇山頂，明間開門，其他為檻窗。春禧殿左右辟有穿堂門，通往第二進院。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 244, 
                y: 130, 
                width: 42, 
                height: 15, 
                text: "英華殿", 
                description: "英華殿位於紫禁城內廷外西路西北，是明朝、清朝皇太后、太妃、太嬪禮佛之地。英華殿始建於明朝，初名「隆禧殿」，明隆慶元年（1567年）更名「英華殿」，清乾隆三十六年（1771年）重修。明朝時，每年萬壽節、元旦在此舉行佛事，並於夏曆四月初八「浴佛日」供奉糕點後分賜百官。慈聖皇太后薨後，萬曆帝奉御容於殿內。清代皇太后、皇后以英華殿為禮佛之所，並供奉滿族薩滿教神「完立媽媽」。咸豐二年（1852年），咸豐帝親至拈香禮拜。2008年報導稱故宮博物院於2009年起陸續修繕英華殿等建築。清理過程中，發現溥儀時期的家具及清代珍稀絲織品「紅色灑金方孔紗」。1970至80年代間，發現外西路英華殿到慈寧宮花園西宮牆的券洞哨所，1990年代修復時保留券洞痕跡。英華殿坐北朝南，面闊五間，黃琉璃瓦單檐廡殿頂，設有七座佛龕供奉西番佛像。殿前有月台與甬路相連，甬路旁各植菩提樹，為萬曆帝生母慈聖皇太后所種。殿左右耳殿三間，均為黃琉璃瓦硬山頂，結構與主殿一致。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 251, 
                y: 224, 
                width: 31, 
                height: 15, 
                text: "山門", 
                description: "南院中部辟有山門，山門後面為一個較寬敞的庭院。山門前有一廣場，廣場東西兩端開門，西門通往英華殿西跨院，東門通往英華殿院落東側的西筒子路。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 904, 
                y: 446,
                width: 39, 
                height: 16, 
                text: "齋宮", 
                description: "齋宮位於紫禁城東六宮以南、毓慶宮西側，是清代皇帝祭天祀地前進行齋戒的重要場所。明朝及清朝前期，皇帝祭天祀地前的齋戒儀式通常在宮外舉行。雍正九年（1731年），雍正帝因宮內鬥爭激烈，為求安全改於紫禁城內建齋宮，從此將齋戒儀式改至宮中舉行。齋戒期間，皇帝及陪祀大臣需佩戴齋戒牌，遵守齋戒規範，包括不飲酒、不作樂及忌食辛辣。2011年5月8日，齋宮內臨時展覽《交融——兩依藏珍選粹展》發生失竊案，展出的20世紀現代工藝品9件失竊。嫌疑人石柏魁於當日潛入齋宮，破壞安防系統及展櫃，盜取展品後將部分藏品遺棄於故宮及北京市內。北京市公安局迅速破案，追回其中6件，均有不同程度損壞。2012年，北京市第二中級人民法院判處石柏魁有期徒刑13年，並處罰金1.3萬元。案件後，齋宮暫時關閉進行整改，並於2012年3月重新開放繼續展出上述展覽。這起案件成為故宮安防史上的重要事件之一，促使故宮博物院進一步加強安保措施。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 904, 
                y: 416, 
                width: 39, 
                height: 15, 
                text: "誠肅殿", 
                description: "為齋宮的後寢宮，初名「孚顒殿」，後來更名「誠肅殿」。面闊七間，黃琉璃瓦歇山頂。該殿東西耳房各兩間。東西各設遊廊11間，和前殿相連接。誠肅殿明間北側上方掛「莊敬日強」匾，兩側對聯為：「慎獨謹幾，旦明懷帝載；思艱圖易，宵旰念民依。」",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 979, 
                y: 437, 
                width: 37, 
                height: 23, 
                text: "毓慶宮", 
                description: "毓慶宮位於紫禁城內廷東路奉先殿與齋宮之間，為清朝皇子居所及皇帝讀書處。毓慶宮始建於康熙十八年（1679年），建於明朝奉慈殿基址上。雍正九年，毓慶宮被改建為齋宮，乾隆八年又於齋宮東側重建，歷經乾隆、嘉慶、光緒年間多次修繕與擴建。毓慶宮內部建築由長方形院落組成，共有四進院落，包括前星門、惇本殿及後罩房等建築群。其中正殿毓慶宮平面呈「工」字形，內部分隔成數間小室，構思精巧，因而有「小迷宮」之稱。毓慶宮曾作為皇子如乾隆帝與嘉慶帝的居所，也曾是同治、光緒皇帝的讀書處。毓慶宮內部裝修考究，後殿懸掛「繼德堂」「味余書室」等匾額，並設有藏書室「宛委別藏」及「知不足齋」，充分展現其文化氛圍與宮廷特色。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 979, 
                y: 482, 
                width: 37, 
                height: 18, 
                text: "惇本殿", 
                description: "祥旭門內為毓慶宮的第二進院落，正殿惇本殿，東西配殿各三間。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 1050, 
                y: 452, 
                width: 56, 
                height: 16, 
                text: "奉先殿", 
                description: "奉先殿，位於北京故宮內廷東側，是明清皇室祭祀祖先的家廟，2004年成為故宮博物院鐘錶館。奉先殿建於明洪武初年，由明太祖建造以表現孝思，永樂年間遷都北京後，明成祖沿用舊制在大內以東建設現址。清朝沿襲明制，於順治十四年重建並多次修繕，清代禮制規定大祭在奉先殿前殿舉行，小祭則於後殿進行。文化大革命期間，奉先殿曾被用作展覽場地，建築結構遭部分改動，1966年清朝祭祖所用焚帛爐被拆除。改革開放後，奉先殿重新作為展覽場所，2004年修復工字形結構後成為鐘錶館，展出故宮收藏的清宮鐘錶及其他珍品。奉先殿為「工」字形建築，建於須彌座上，四周圍以高牆，正殿（前殿）面闊九間，進深四間，頂為黃色琉璃瓦重檐廡殿頂，內設列聖列後神寶座、籩豆案等祭祀設施；寢殿（後殿）面闊九間，進深兩間，與正殿以穿堂相連，內部分為九室供奉神牌。正殿與寢殿均鋪金磚，檐下彩繪有金線旋子彩畫，前殿前的月台設有日晷和嘉量，四周設龍鳳紋欄板及望柱，殿前無配殿，僅有群房13間作為神庫、神廚使用。奉先殿東側的小院內原有崇先殿，為明世宗肅皇帝為其父興獻王所建，後祭祀功能被奉先殿取代。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 900, 
                y: 363, 
                width: 45, 
                height: 13, 
                text: "景仁宮", 
                description: "景仁宮，為紫禁城內廷東六宮之一，位於東六宮區的西南角。景仁宮於明朝永樂十八年（1420年）建成，初名「長安宮」，明嘉靖十四年（1535年）更名為「景仁宮」。清朝沿襲此名，並在順治十二年（1655年）重修，後歷經道光十五年（1835年）與光緒十六年（1890年）修繕。景仁宮自明朝以來為妃嬪居所，清朝時康熙帝生於此，乾隆帝的生母孝聖憲皇后、光緒帝珍妃等亦曾居住其中。珍妃於光緒二十六年（1900年）被慈禧太后下令投入井中溺斃，景仁宮遂被認為是不祥之地，並設置鎮邪之物。2005年，景仁宮經修繕後對外開放，成為故宮博物院捐獻館，展出捐贈文物，並設有刻有捐贈者名錄的「景仁榜」。2006年，畫家吳冠中的三幅作品被捐贈至故宮博物院，並登上景仁榜。景仁宮為二進院，正門為景仁門，宮內主要建築包括正殿、東西配殿、後殿及井亭，正殿設有乾隆帝御題「贊德宮闈」匾，殿內天花繪有二龍戲珠圖案。景仁宮在清朝時曾居住多位皇室成員與妃嬪，其中康熙帝生母孝康章皇后佟佳氏於此生下康熙帝，而康熙帝亦曾因兄長福全之喪期在此居住悼念。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 900, 
                y: 300, 
                width: 39, 
                height: 12, 
                text: "承乾宮", 
                description: "承乾宮，位於紫禁城內廷東六宮之一，是明清時期后妃的居所之一，建於明永樂十八年（1420年），原名「永寧宮」，崇禎五年（1632年）改為「承乾宮」。清朝順治十二年（1655年）重修，乾隆帝為承乾宮題寫匾額，並御撰《宮訓詩》，每年春節期間張掛於宮內。承乾宮內主要建築包括前殿、貞順齋、明德堂、後殿及井亭，整體保持明朝原始格局。歷史上，承乾宮多由寵妃及地位尊貴的妃嬪居住，如順治帝的皇貴妃董鄂氏、乾隆帝的舒妃和豫妃、道光帝的琳貴妃等。民國時期，承乾宮被改為故宮博物院青銅器館，1958年首次開展，展出多件商周青銅重器及戰國文物，成為博物館三大專館之一。2010年館內因改陳施工閉館，2013年重新開放後展出包括「青銅器與禮制」、「青銅器與軍事」、「青銅器與音樂」等主題，並新增介紹臺北故宮及海外青銅器藏品的專題。承乾宮的青銅器館展覽一直是故宮博物院的重要文物陳列支柱，吸引無數遊客參觀。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 904, 
                y: 253, 
                width: 34, 
                height: 15, 
                text: "鍾粹宮", 
                description: "鍾粹宮是故宮博物院的一部分，位於紫禁城東六宮的西北角，建於明朝永樂十八年（1402年），最初名為“咸陽宮”，後來於明朝嘉靖十四年（1535年）改為“鍾粹宮”。該宮殿是妃嬪居住的地方，也曾作為皇太子的宮殿。在清朝時期，鍾粹宮的歷史具有特殊意義，咸豐帝奕詝幼年時便在此宮與孝全成皇后共同生活，後來宣統帝的母親隆裕皇后也曾在此居住，直到她成為太后後才遷往其他宮殿。宮殿的正殿前檐掛有“鍾粹宮”匾額，該匾額由乾隆帝於乾隆六年（1741年）命人製作，並親自題寫，並要求匾額不得輕易移動，無論妃嬪是否更換宮殿，匾額都應保持不變。如今，鍾粹宮作為故宮博物院的重要展示場所，主要展示珍貴的玉器收藏。2013年，該宮曾舉辦“盛世琳琅——故宮博物院藏乾隆朝玉器精品展”，展示了清朝乾隆時期的玉器藝術，成為研究清宮歷史和藝術的重要場所之一。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 1001, 
                y: 363, 
                width: 33, 
                height: 15, 
                text: "延禧宮", 
                description: "延禧宮是紫禁城內廷東六宮之一，位於東六宮區的東南角，最初建於明朝永樂十八年（1420年），當時名為「長壽宮」，後於明朝嘉靖十四年更名為「延祺宮」，清朝時又更名為「延禧宮」，並於康熙二十五年進行重修。延禧宮作為妃嬪的居所，在明清兩代都有使用，並且經歷多次火災。道光帝在位期間，延禧宮多次發生火災，並在火災後進行過重建。道光十二年（1832年）發生的火災使得延禧宮幾乎被完全摧毀，後來又進行了修復。宣統時期，延禧宮的正殿原址興建了「水殿」，這是一座西洋式建築，外形獨特，但最終未完成，並於1911年停建。延禧宮的建築格局以東六宮的典型形式為主，包括正殿及東西配殿，並有過多次的修繕。隨著清朝滅亡，延禧宮的功能逐漸改變。1917年，延禧宮北部曾遭到炸彈襲擊。後來，在1920年代末，延禧宮改為文物庫房。2005年，延禧宮重新開放，成為故宮博物院的研究中心。此後，延禧宮作為古書畫、古陶瓷等文化遺產的展示場所，舉辦過多次展覽，吸引了大量遊客和研究者的關注，尤其是在2018年，隨著電視劇《延禧攻略》和《如懿傳》的熱播，延禧宮成為故宮的熱門景點。如今的延禧宮除了作為展示場所，還設有古書畫和古陶瓷的研究及檢測中心。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 993, 
                y: 313, 
                width: 45, 
                height: 17, 
                text: "永和宮", 
                description: "永和宮是位於北京紫禁城內廷東六宮之一，建於明朝永樂十八年（1420年），最初名為「永安宮」，後於明朝嘉靖十四年（1535年）更名為「永和宮」。清朝時期，永和宮成為后妃的居所，且在康熙、乾隆、光緒等時期多次進行修繕。這裡曾是孝恭仁皇后、靜貴妃、麗貴人、瑾妃等歷代妃嬪的住所。建築風格上，永和宮為二進院，保存了明朝的建築格局，主體建築包括正殿、東西配殿以及後院的同順齋。永和宮內的裝飾十分華麗，正殿懸掛有乾隆帝御題匾額，並且有許多精緻的雕刻和彩畫。作為故宮博物院的一部分，永和宮自2005年起開放，作為「清代妃嬪生活展」的展示場地，展出與清代后妃生活相關的文物。經過多次修整後，這一展覽成為故宮博物院的重要常設展覽之一。此外，永和宮還擁有青銅器館，展示著來自中國及海外的青銅器珍品，這些青銅器來自各個歷史時期，反映了當時的禮制、軍事、音樂和生活等方面。永和宮的建築、歷史和展覽內容，對於了解清朝宮廷生活和文化具有重要意義。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 998, 
                y: 251, 
                width: 38, 
                height: 22, 
                text: "景陽宮", 
                description: "景陽宮位於紫禁城內廷東六宮的東北角，建於明永樂十八年（1420年），最初名為長陽宮，後於嘉靖十四年（1535年）改為景陽宮。景陽宮原為明朝妃嬪的居所，清朝則將其改為圖書收藏地。康熙二十五年（1686年）進行了重修。景陽宮的名稱「景陽」象徵「景仰光明」，與周易中的東北艮位相應，意味著光明與智慧。景陽宮的建築保持著明初格局，擁有二進院的結構，主要建築包括景陽門、正殿、東西配殿等。正殿為黃琉璃瓦屋頂，內部裝飾精緻，掛有乾隆帝親書的匾額與對聯。1987年，景陽宮遭雷擊引發火災，部分建築受損，後來進行重修並安裝了避雷針。在歷史上，景陽宮也與明朝恭妃王氏有著密切的關聯。王氏本為明神宗母親慈聖皇太后的宮女，在某次偶然的機會中被神宗寵幸，懷孕後誕下明光宗朱常洛。然而，王氏並未受到太多寵愛，即因為「國本之爭」住進景陽宮，形同冷宮。王恭妃在景陽宮中度過孤寂的日子，最後因為過度悲傷與長期眼疾，雙眼漸漸失明。萬曆三十九年，當她病危時，皇太子朱常洛被允許前往探望她。母子相見的時刻，王恭妃只能拉著朱常洛的衣角，哭泣道「兒長大如此，我死何恨」，她不久後便去世。然而朱常洛登基僅一個月就因為「紅丸案」暴斃，後由明熹宗追封為「孝靖溫懿敬讓貞慈參天胤聖皇太后」。王恭妃的悲劇故事在景陽宮的歷史中留下了深刻的印記。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 884, 
                y: 118, 
                width: 240, 
                height: 83, 
                text: "北五所", 
                description: "乾東五所，又稱「北五所」，位於紫禁城內廷東路、千嬰門以北，西鄰御花園。此地始建於明朝初期，與西路的乾西五所對稱，形成紫禁城的布局特色，展現了陰陽五行的理論。乾東五所原為皇子居所，並在乾隆年間進行過多次修繕和調整，尤其在乾隆三十年後，部分建築如如意館、壽藥房等改為其他用途。乾東五所的五組建築自西向東依次為頭所、二所、三所、四所和五所，設有南北三進院落及配套建築，建築風格獨特，每所之間用矮牆隔開，形成相對獨立的空間。乾隆三十九年（1774年），乾東五所再次進行了重修，並對頭所、二所進行了裝修，以供皇十五子（後來的嘉慶帝）成婚後居住。雖然隨著時間推移，乾東五所逐漸轉變為儲物、辦公等用途，但仍保留了不少清代遺跡，如慈禧太后的御題匾額等。三所內的設施，包括珍貴的文物和古建修繕，也曾發生過文物遺失事件，後經修復得到保護。乾東五所作為清朝皇室的生活空間，見證了宮廷文化的變遷與發展，至今仍是研究紫禁城歷史與建築的重要場所。",
                color: "rgba(255, 165, 0, 0.5)"
            },{ 
                x: 1242, 
                y: 491, 
                width: 46, 
                height: 12, 
                text: "寧壽門", 
                description: "位於皇極門正北，為寧壽宮區的第二道宮門。清朝康熙二十八年（1689年），創建寧壽宮，興建此門，稱「寧壽門」。乾隆三十六年（1771年）至乾隆四十一年（1776年）改建寧壽宮時，將門制依照乾清門之制改建，門名仍沿襲舊稱「寧壽門」。寧壽門是屋宇式建築，黃琉璃瓦歇山頂，面闊五間，進深三間。前檐正中三間為敞廳，兩梢間下砌檻牆，上面設有三交六椀菱花檻窗各四扇，中間安有方格風窗。兩側的山牆連接八字影壁。後檐以金柱為界，明間以及左、右次間設門，兩梢間用牆封堵，牆是素面飾砂綠邊。寧壽門建在漢白玉台基上，中間設丹陛，三出階，左右各設有鎏金銅獅一隻。門內設高台甬路連接皇極殿，四周飾有欄板。寧壽門早期建築的彩畫為金龍和璽彩畫，光緒年間慈禧太后六十壽辰時，改為枋心蘇式彩畫，1979年重修時，將彩畫恢復成乾隆時期的風貌。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x:1237, 
                y: 416, 
                width: 57, 
                height: 12, 
                text: "皇極殿", 
                description: "皇極殿是紫禁城寧壽宮區的主體建築，位於中軸線前部，與後殿寧壽宮共同置於單層石台基上。建築坐北朝南，面闊九間、進深五間，象徵帝王九五之尊。殿頂為黃琉璃瓦重檐廡殿頂，前檐出廊並有渾金雕龍雀替，殿內四根瀝粉貼金蟠龍柱支撐，頂部設有八角渾金蟠龍藻井，中央設寶座，其品級僅次於太和殿。皇極殿原作為寧壽宮的前殿，始建於康熙二十八年（1689年），在乾隆三十六年至四十一年改建時，改名為皇極殿，成為乾隆帝歸政後臨朝受賀之地。殿內設有大自鳴鐘和銅壺滴漏，並懸掛多幅匾額與對聯，包含光緒帝與慈禧太后的題詞。皇極殿前有青白石須彌座月台，與甬道相連，左右設台階，御道兩側曾有石座與六角亭，現僅存石座。乾隆年間改建使寧壽宮區形成以皇極殿為中心的「工」字形布局，後殿則稱寧壽宮，成為乾隆帝安置祭祀神位之所。此後，皇極殿歷經多次修葺，嘉慶元年舉辦「千叟宴」，光緒年間則多次作為慈禧太后接見外國使臣與祝壽的場所。殿內原有的寶座已於二十世紀中期調至瀋陽故宮，如今見到的是後期重新製作的仿品。這座建築不僅是清代紫禁城內重要的滿族薩滿教建築之一，也見證了清代歷史上多個重大事件。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 1243, 
                y: 614, 
                width: 40, 
                height: 15, 
                text: "九龍壁", 
                description: "九龍壁位於紫禁城寧壽宮區的皇極門外，與山西大同九龍壁及北京北海公園九龍壁並稱「中國三大九龍壁」。此壁建於清乾隆三十七年（1772年），為單面琉璃影壁，長29.4米，高3.5米，厚0.45米。其上覆黃琉璃瓦廡殿頂，檐下有仿木結構的椽、檁與斗栱。壁面以雲水紋為底，運用藍色和綠色展現天水相接的氣勢，下部為漢白玉須彌座。九條龍以高浮雕方式雕刻，最凸處達20厘米。中央的黃色正龍居中，兩側對稱排列藍龍與白龍各兩條，左右兩端則有黃龍與紫龍，整體呈現動態之美。設計中融入「九五」數字象徵，寓意天子尊貴，正脊中央為坐龍，兩側各飾四條行龍，壁面由270塊塑塊拼接而成，體現高超的工藝技術。九龍壁不僅展現了清代建築裝飾藝術的精湛，更蘊含深厚的文化與象徵意義，成為紫禁城的重要特色之一。",
                color: "rgba(255, 165, 0, 0.5)"
            },{ 
                x: 1241, 
                y: 289, 
                width: 44, 
                height: 16, 
                text: "養性殿", 
                description: "養性殿位於養性門內，是寧壽宮後寢的主體建築之一，建於清乾隆三十七年（1772年），仿內廷養心殿而建，但規模略小。養性殿為黃琉璃瓦歇山頂建築，面闊三間，每間以方柱支撐，分隔為九間，前設卷棚抱廈四間。室內進深四間，空間被分隔為多間小室，明間設有寶座，屋頂為八角渾金蟠龍藻井，並配以片金升降龍天花。左右次間以板牆分隔，板牆上對稱設有門。東暖閣分為前後兩部分，前稱「明窗」，後稱「隨安室」，其中懸掛乾隆帝御筆「儼若思」匾額。西暖閣則分隔為數間小室，北室為佛堂，內有佛塔與佛像，南室稱為「長春書屋」。西端盡間仿養心殿三希堂，設「墨雲室」，因畢沅進古墨而得名。殿外西山牆有耳房，名為「香雪堂」，內用白石砌成山景，三面彩繪壁畫，北、西、東牆開有窗戶，可窺見寧壽宮花園。養性殿原作為太上皇寢宮，採用和璽彩畫，後在光緒年間改為蘇式彩畫，唯「墨雲室」仍保留原貌。慈禧太后曾在此東暖閣進膳，增添了此殿的歷史意義與人文價值。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 1238, 
                y: 231, 
                width: 50, 
                height: 13, 
                text: "樂壽堂", 
                description: "樂壽堂位於養性殿正北，建於清乾隆三十七年（1772年），嘉慶七年（1802年）及光緒十七年（1891年）先後進行修葺與重修，其設計仿自長春園的淳化軒。乾隆帝以此為退位後的寢宮，題匾「座右圖書娛畫景」，因此又稱「寧壽宮讀書堂」。光緒年間，慈禧太后曾居於此，以西暖閣為寢室。樂壽堂面闊七間（36.15米），進深三間（23.20米），建築面積839平方米，採用單檐歇山頂黃琉璃瓦覆頂，高度達18.7米，建築結構為減柱造，內部明間及次間以閣道分隔為南、北兩廳，東西稍間部分為單層，其他為兩層結構，二層面積341平方米。室內裝飾華麗，採用楠木、紫檀木與花梨木，並嵌有琺瑯及玉石等珍貴飾件，與天花木雕設計相得益彰。堂內仙樓為乾隆時期建築裝修的代表作之一，北部大廳陳設「大禹治水圖玉山」，匾額「樂壽堂」懸於大廳北檐；仙樓二層正面朝南懸掛「與和氣游」匾，對聯「座右圖書娛畫景，庭前松竹藹春風」，更添書香雅意。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 1245, 
                y: 154, 
                width: 38, 
                height: 17, 
                text: "景祺閣", 
                description: "景祺閣位於寧壽宮中路北端，是一座二層樓閣式建築，建於乾隆三十六年（1771年），後經嘉慶及光緒年間修繕。建築面闊七間，進深三間，黃琉璃瓦歇山頂。下層四面出廊，前檐明間開門通往頤和軒後檐，次間設檻窗。西次間內設有小戲台，東次間分隔為小室，東梢間設樓梯通往二層。二層有尋杖欄杆，前檐明間設步步錦槅扇門，裙板飾夔龍紋。檐下彩畫原為乾隆金龍和璽風格，後改為蘇式彩畫，現已復原。景祺閣東側有假山與雲竇洞，假山頂曾設「翠環亭」，與閣樓之間有漢白玉小橋相連。景祺閣後的小院曾幽禁光緒帝的珍妃，院西牆外即為珍妃井。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 1316, 
                y: 141, 
                width: 39, 
                height: 28, 
                text: "景福宮", 
                description: "景福宮位於紫禁城內廷外東路的寧壽宮區東北部，是康熙帝為其母仁憲皇太后所建。景福宮始建於清朝康熙二十八年（1689年），是仁憲皇太后的居所。乾隆三十七年（1772年），景福宮仿照建福宮後面的靜怡軒進行重建，用作乾隆帝歸政後的宴憩場所。嘉慶七年（1802年）和光緒十七年（1891年）進行過重修。景福宮坐北朝南，建築呈正方形，面闊五間、進深五間，四周有圍廊。建築位於漢白玉須彌座台基之上，檐柱的柱礎雕有覆蓮花紋，屋頂覆綠琉璃瓦黃剪邊，採用三卷勾連搭歇山卷棚頂，檐下繪有蘇式彩畫。外檐下方懸掛乾隆帝御筆的「景福宮」匾額，室內明間懸掛「五福五代堂」匾額。景福宮內曾設置西洋儀器，並在西窗外仿靜怡軒種植梅樹，設氈棚以保護梅樹。景福宮前方的東、西兩側有遊廊，圍合成為半開敞的小庭院，庭內種植松柏。西側遊廊中設有垂花門，即「景福門」，門外有一個小院，院中有著名的山石「文峰」，並且銘刻著乾隆帝御製《文峰詩》。經過文峰，穿過兩重月亮門即可到達佛日樓。景福宮是寧壽宮區的主體建築，北面為梵華樓，西面則與寧壽宮中路的景祺閣相對，建築之間設有遊廊及虎皮石牆，與周圍的園林環境協調融合。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 1165, 
                y: 293, 
                width: 50, 
                height: 13, 
                text: "古華軒", 
                description: "為第一進院落的主體建築。建於清朝乾隆三十七年（1772年）。古華軒是一座坐北朝南的敞軒，面闊三間帶迴廊，正面懸掛著乾隆帝御筆「古華軒」木匾。卷棚歇山頂，黃琉璃瓦綠剪邊。檐柱之間設有倒掛楣子和坐凳，金柱間有透空燈籠錦落地罩，以區分內外，內外空間形成了貫通之勢。古華軒明間內檐以及三間後檐懸掛著木雕龍匾四塊，明間北柱朝南掛對聯一副「明月清風無盡藏，長楸古栢是佳朋」，均為乾隆帝為古楸而題寫。古華軒前檐下種植有古楸樹一株，建古華軒時樹齡已逾百年，古華軒便因此古樹而得名。古華軒的裝修十分素雅，軒內的天花採用卷草花卉圖案的楠木貼雕。因為圖案凸起於天花板上，所以產生了強烈的立體感，獨具韻味。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 1165, 
                y: 308, 
                width: 33, 
                height: 22, 
                text: "禊賞亭", 
                description: "位於第一進院落西側，建於清朝乾隆三十七年（1772年）。坐西朝東，位於須彌座平台上，面闊三間，進深三間，前出抱廈，平面呈「凸」字形，三面出歇山頂，中間是四角攢尖琉璃寶頂，黃琉璃瓦綠剪邊，檐下繪有蘇式彩畫。明間後面設有黑漆雲龍屏門，以遮擋亭後的高牆，北側有遊廊通往旭輝庭。禊賞亭抱廈內的地面鑿石成曲折狀的渠，渠長27米，取「曲水流觴」之意，稱為「流杯渠」。渠水源自禊賞亭南側假山後面隱蔽的水井，汲水進缸，經過假山內的暗渠流到流杯渠中。禊賞亭內外均繪有竹紋，代表王羲之蘭亭修禊時的「茂林修竹」。禊賞亭前砌有山石踏步，亭檐下面用刻著竹紋的漢白玉欄板圍護。",
                color: "rgba(255, 165, 0, 0.5)"
            },{ 
                x: 1165, 
                y: 248, 
                width: 64, 
                height: 24, 
                text: "遂初堂", 
                description: "位於寧壽宮花園的南北中軸線上，古華軒後面，是第二進院落的正房。建於清朝乾隆三十七年（1772年），嘉慶、光緒年間重修。遂初堂面闊五間，進深三間，坐北朝南，卷棚歇山頂，黃琉璃瓦綠剪邊，前後出廊。前廊下懸掛著乾隆帝御筆滿文與漢文「遂初堂」匾額。中間開門，其他各間開支摘窗。明間是過廳，穿過過廳可來到寧壽宮花園的第三進院落。遂初堂左右有轉角遊廊，和東、西配房前廊相連。遂初堂內匾額為「養素陶情」，東室內對聯為「屏山靜水皆真宰，蘿月松風合靜觀」。",
                color: "rgba(255, 165, 0, 0.5)"
            },{ 
                x: 1188, 
                y: 159, 
                width: 36, 
                height: 25, 
                text: "符望閣", 
                description: "是第四進院落的主體建築。建於清朝乾隆三十七年（1772年），嘉慶七年（1802年）修，光緒十七年（1891年）重修。符望閣形制仿建福宮花園的延春閣。平面呈方形，外觀為兩層，內部實為三層，四角攢尖頂。藍色琉璃瓦件飾檐、脊，其餘鋪𡧗黃色琉璃瓦。符望閣室內用不同類型的裝修分隔空間，在穿越各門之際，容易令人迷失方向，故俗稱「迷樓」。室內以金、玉、琺瑯等等鑲嵌裝飾，非常精美。乾隆年間，每年農曆臘月二十一日，乾隆帝在此賞飯給王公大臣。嘉慶帝曾登該閣，並作《詠符望閣》詩。符望閣是寧壽宮花園中最為高大的建築，從閣上可俯瞰紫禁城內外景色。符望閣中對聯為「澄懷觀物真超矣，得意忘言亦快哉」。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 1175, 
                y: 122, 
                width: 37, 
                height: 13, 
                text: "倦勤齋", 
                description: "倦勤齋位於紫禁城寧壽宮花園的最北端，北倚宮牆，南臨符望閣，建於乾隆三十七年（1772年），仿建福宮花園的敬勝齋而建。倦勤齋坐北朝南，面闊九間，卷棚硬山頂，綠琉璃瓦黃剪邊，檐下繪有蘇式彩畫。東五間與符望閣相對，東西兩側遊廊相接，構成封閉院落，並形成東五間和西四間的格局。庭院內鋪設十字方磚甬路，並栽種古柏，西四間前有弧形院牆，牆中開八方門通向竹香館。東五間以明間開門，其餘各間為步步錦支摘窗，檐下懸掛「倦勤齋」匾額，內頂棚為團花紋天花，南側設有過道。東五間明間仙樓建於凹字形平面內，用紗櫥分隔成多間小室，裝飾精美，仙樓內的寶座後有「一貫惟誠主於敬，萬幾無曠本諸身」對聯。西四間頂棚繪有竹架藤蘿海漫天花，四周環繞竹籬，室內裱糊乾隆年間郎世寧和王幼學所繪的通景畫，畫作描繪了竹籬、樓閣、白鶴及花卉。西四間內建有竹亭，並設有仿竹籬笆，另建小戲台，供乾隆帝作為太上皇時觀看戲劇之用，戲台規模不大，面闊與進深不足4米，設有演出雜耍的平台，兩根柱子上懸掛對聯「著添南極應無算，喜在嘉生兆有年」。仙樓二層寶座後亦懸有對聯，為觀戲時專用，樓梯位於仙樓東側，自南向北而上，與西四間的門相對。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 1236, 
                y: 964, 
                width: 36, 
                height: 15, 
                text: "三座門", 
                description: "三座門位於紫禁城東華門內，內金水河北側，原為三座隨牆門的總稱。隨牆門是皇家建築中常見的設計，通常設有門樓並以琉璃裝飾，既精美又華貴，紫禁城內如皇極門、順貞門等均屬此類。明朝時三座門被稱為「前星門」，清朝時因毓慶宮南門啟用並命名為「前星門」，原「前星門」遂改稱「三座門」。三座門以南為東西流向的內金水河，其上並排建有三座石拱橋，俗稱前星門前三座橋，橋呈南北向，橋北正對三座門。",
                color: "rgba(255, 165, 0, 0.5)"
            },{ 
                x: 1290, 
                y: 890, 
                width: 100, 
                height: 80, 
                text: "清史館", 
                description: "國史館是清朝負責修纂國史和研究的專門機構，其主要任務包括修纂國史、整理史料及採集史料。最初為非常設機構，分別於康熙二十九年（1690年）、雍正元年（1723年）和乾隆元年（1736年）設立。康熙時，國史館首次開設，位於武英殿東、西廊房，主要纂修太祖至世祖的「三朝國史」，為清朝開國功臣作傳。雍正年間再次開設，但因機制問題成效不佳。乾隆初年則完成了太祖至世宗的「五朝本紀」及十四志等重要史書，並於乾隆三十年（1765年）起成為常設機構。此後，清高宗確立了修史原則，並進一步完善列傳體例，國史館的修史體制趨於成熟，並延續至清朝滅亡。道光以後，國史館的修史活動持續進行，並負責編修《大清一統志》等大型史書。至民國成立後，北京政府於1914年設立清史館，延續清史的纂修工作，並沿用國史館原址，其建築位於東華門內，旁設書庫，曾於乾隆年間被稱為黃琉璃瓦房。清朝國史館的設置與發展，對中國史學的編纂體例及檔案管理有深遠影響。",
                color: "rgba(255, 165, 0, 0.5)"
            },{ 
                x: 1155, 
                y: 897, 
                width: 60, 
                height: 72, 
                text: "清史西館", 
                description: "國史館是清朝負責修纂國史和研究的專門機構，其主要任務包括修纂國史、整理史料及採集史料。最初為非常設機構，分別於康熙二十九年（1690年）、雍正元年（1723年）和乾隆元年（1736年）設立。康熙時，國史館首次開設，位於武英殿東、西廊房，主要纂修太祖至世祖的「三朝國史」，為清朝開國功臣作傳。雍正年間再次開設，但因機制問題成效不佳。乾隆初年則完成了太祖至世宗的「五朝本紀」及十四志等重要史書，並於乾隆三十年（1765年）起成為常設機構。此後，清高宗確立了修史原則，並進一步完善列傳體例，國史館的修史體制趨於成熟，並延續至清朝滅亡。道光以後，國史館的修史活動持續進行，並負責編修《大清一統志》等大型史書。至民國成立後，北京政府於1914年設立清史館，延續清史的纂修工作，並沿用國史館原址，其建築位於東華門內，旁設書庫，曾於乾隆年間被稱為黃琉璃瓦房。清朝國史館的設置與發展，對中國史學的編纂體例及檔案管理有深遠影響。",
                color: "rgba(255, 165, 0, 0.5)"
            },{ 
                x: 1164, 
                y: 330, 
                width: 67, 
                height: 30, 
                text: "寧壽宮花園", 
                description: "寧壽宮花園，又稱「乾隆花園」，位於寧壽宮後區西路，始建於清乾隆三十七年至四十一年（1772-1776年），作為乾隆帝歸政後的游賞之地。花園位於東西寬約40米、南北長160米的狹長區域，自南向北分為四進院落。第一進院以古華軒為主體，周邊有假山、禊賞亭、擷芳亭等景觀；第二進院以遂初堂為核心，配房和垂花門形成三合院，庭院內布置太湖石和花木；第三進院以假山和萃賞樓、延趣樓、三友軒等建築構成複雜的山水景觀；第四進院的主體是符望閣，周圍分布碧螺亭、倦勤齋、竹香館等建築，廊道相連，布局錯落有致。整個花園融合了私家園林的精巧與皇宮建築的華麗，建築色彩豐富，並採用金線蘇式彩畫裝飾，南北中軸線略向東偏移，增添靈動之感。2001年起，故宮博物院與世界建築文物保護基金會合作，對倦勤齋及整個寧壽宮花園進行分階段修復，2008年倦勤齋修復完成，作為故宮大修的試點工程，其經驗對故宮的整體保護具有重要意義。",
                color: "rgba(255, 165, 0, 0.5)"
            },{ 
                x: 250, 
                y: 809, 
                width: 230, 
                height: 115, 
                text: "養心殿造辦處", 
                description: "養心殿造辦處，簡稱「造辦處」，位於紫禁城外廷西部，慈寧宮以南，是清朝內務府下屬的官辦作坊之一。其創建時間主要有康熙十九年（1680年）及康熙三十年（1691年）兩種說法，初設於養心殿四周的平房內，後因需求增加遷至慈寧宮茶飯房，仍稱為「養心殿造辦處」。該處專責製作、修繕及存儲宮廷所需的各項器物，內部分為多個「作」、「處」、「廠」、「館」，如玻璃廠、如意館等。其歷史檔案《造辦處各作成做活計清檔》記錄了該機構的詳細運作，涵蓋製作、修繕過程及交接細節，至雍正、乾隆年間達到鼎盛，製作了大量清式家具精品如紫檀寶座和嵌剔紅靠背寶座等。根據《乾隆京城全圖》，造辦處位於慈寧宮花園東南，呈曲尺形，與花園間隔一條甬道，設有迎禧門作為正門，其建築南側則鄰接內務府公署並有冰窖設施，形成一個功能多樣、布局精巧的宮廷作坊體系。",
                color: "rgba(255, 165, 0, 0.5)"
            },

        ];
        this.locations2 = [
            { 
                x: 703, 
                y: 755, 
                width: 114, 
                height: 40, 
                text: "太和殿", 
                description: "太和殿，俗稱金鑾殿或金鑾寶殿，為北京故宮外朝三大殿中最南面的宮殿，是紫禁城內規模最大、開間最多、進深最大和屋頂最高的殿宇，也是中國現存古建築中面積最大的一座，並是明清兩朝北京城內最高的建築，堪稱中華第一殿。皇帝登基、冊立皇后等大典都在此舉行。太和殿是皇權的象徵，因而在各種形式上都刻意追求與眾不同。其在紫禁城內等級最高、體量最大，建築規制之高，裝飾工藝之精，堪居中國古代建築之首。\n\n"+
"太和殿面闊11間（長63.96米），進深5間（寬37米），建築面積2377平方米，殿高26.92米，加上下面的須彌座和高達8.13米的三層台基，通高35.05米。台基上有大量的龍鳳石雕。京城的中軸子午線沿著龍鳳石雕御路升上三台，從天子寶座下穿過，是中國現存規制最高的古代宮殿建築，是皇帝舉行重大朝典之地。太和殿作為東方三大殿之一，是中國許多重要歷史事件的發生地，它見證了影響歷史走向的政治事件，也見證了中國的興衰與新生。\n\n"+
"太和殿位於紫禁城南北主軸線的顯要位置，明永樂十八年（1420年）建成，稱奉天殿。嘉靖四十一年（1562年）改稱皇極殿。清順治二年（1645年）改今名。自建成後屢遭焚毀，又多次重建，現所見為康熙三十四年（1695年）重建後的形制。太和殿、中和殿、保和殿建在一座三層漢白玉台基上，合稱「三大殿」。「三大殿」和東面的文華殿、西面的武英殿等建築合稱「外朝」。\n\n"+
"明清兩朝24個皇帝都在太和殿舉行盛大典禮，如皇帝登極即位、皇帝大婚、冊立皇后、命將出征，此外每年萬壽節、元旦、冬至三大節，皇帝在此接受文武官員的朝賀，並向王公大臣賜宴。\n\n"+
"每逢大典之日，從太和殿至天安門外，設有龐大的儀仗，太和殿前簷下設中和韶樂，太和門內設丹陛大樂，王公立於丹陛之上，一品至九品文武百官齊集於丹墀內陳設「品極山」的御道兩旁。皇帝出宮御太和殿，午門鐘鼓齊鳴，殿廷樂隊相繼演奏，殿內外香煙繚繞，氣氛莊嚴肅穆，以顯示封建帝王的專貴和威嚴。\n\n"+
"明崇禎十七年（1644年），李自成軍攻陷北京，明朝滅亡。李自成向陝西撤退前焚毀紫禁城，僅武英殿、建極殿、英華殿、南薰殿、四周角樓和皇極門未焚，其餘建築全部被毀。\n\n"+
"清初，曾在太和殿舉行新進士的殿試，清乾隆五十四年（1789年）始，改在保和殿舉行。\n\n"+
"每年元旦、冬至、萬壽節三大節午正時刻會在太和殿舉行盛大宴席，招待各少數民族王公及外國使節。\n\n"+
"明清兩朝一共有24個皇帝在太和殿登基，接受文武百官朝賀。清光緒三十四年（1908年）12月，清朝末代皇帝一3歲的溥儀在太和殿登基。可是當時溥儀卻哭喊著說：「我不在這兒，我要回家，我不在這兒，我要回家。」他的父親攝政王載灃只好說：「別哭了，別哭了，快完了。」典禮結束以後，文武百官竊竊私語，說在登基大典上講「快完了」實在不是個好兆頭。清宣統三年（1911年），國父領導的辛亥革命取得勝利，推翻了清王朝的統治，結束了中國的封建帝制。\n\n"+
"1912年2月12日，袁世凱逼清帝遜位後，溥儀搬到了乾清門以北的後宮區域，而包括故宮三大殿在內的前朝則由民國政府佔用。後來，袁世凱想當皇帝，恢復帝制。在登基前，準備了寶座、龍袍、玉璽等皇帝專用物品，並對三大殿的建築風格進行了更改，如把三大殿黃瓦改為紅瓦，把太和殿改為承運殿、把中和殿改為體元殿，把保和殿改為建極殿，對大殿內的柱子加赤金，並飾以盤龍雲彩等。他還下令把前朝所有宮殿匾額上的滿文去掉，改為漢文。\n\n"+
"民國三十四年（1945年）8月15日，侵華日軍向中國宣佈無條件投降，八年抗戰終於取得全面勝利。日本宣佈投降之後，華北戰區正式的受降儀式就是在太和殿廣場舉行的。同年10月10日，在太和殿廣場舉行華北區侵華日軍投降受降典禮， 20餘萬民眾親臨見證此次盛會。中國第十一區戰區司令長官孫連仲將軍、呂文貞參謀長為受降代表，接受日本投降代表華北戰區日軍司令官根本博中將、參謀長高橋坦等所上降書。\n\n"+
"2006年，太和殿歷經歲月的打磨，有些構件已經腐爛，梁上的彩畫也褪色嚴重，因此從開始「封閉式」的大修。經過2年的大修，直到2008年7月中旬，太和殿重新開放。\n\n"+
"白玉丹陛\n\n"+
"太和殿前有寬闊的平臺，稱為丹陛，俗稱月臺。月臺上陳設日晷、嘉量各一，銅龜、銅鶴各一對，銅鼎18座。龜、鶴為長壽的象徵。日晷是古代的計時器，嘉量是古代的體積量器，銅龜、銅鶴內部中空，大典時用來燃放檀香，四者都是皇權的象徵。殿下為高8.13米的三層漢白玉石雕基座，周圍環以欄杆。欄杆下安有排水用的石雕龍頭：每逢雨季，可呈現千龍吐水的奇觀。\n\n"+
"嘉量和日晷\n\n"+
"太和殿前廣闊的丹陛上，設有嘉量和日晷。嘉量在右，方形，銅鎏金，貯於漢白玉石亭屋之內。亭下漢白玉石底座，上部雕雲氣萬字和海水江崖紋飾，下部為須彌基座。日晷在丹陛的左側，以漢白玉石製成晷盤圓形，中央有金屬晷針。晷下有底座，下支四根方形柱，再下是柱礎，雕刻成托泥圭角，南有石階三級，可以登而觀晷影。\n\n"+
"鼎爐\n\n"+
"北京故宮太和殿前，其三層石質丹陛上，放置著很多銅鼎爐，共計達18座。每一座鼎爐，都是由下部的三足兩耳圓形鼎式爐身、中部的圓形爐腹和上部帶寶頂的爐頂等3部分組成，高約２m，大部分鼎爐的爐徑為１m，也有少量鼎爐的爐徑為0.9m，分別放置在雕刻精緻的圓形石座上，石座高0.6m，故鼎爐通高為2.6m，是清代乾隆年間（1736年－1795年）鑄造的。\n\n"+
"屋脊佈置\n\n"+
"在中國古建築的岔脊中，屋脊獸排列最多的是太和殿上的裝飾。太和殿的裝飾上共有10個屋脊獸，這些小獸依次排列在高高的簷角處，象徵著消災滅禍、逢凶化吉，並含有剪除邪惡、主持公道之意。\n\n"+
"太和殿殿頂正脊兩端的螭吻，每個由13塊琉璃構件組成，螭吻高3.40米、寬2.68米、厚0.32米、重約4.3噸，是紫禁城內最大的螭吻。殿頂垂脊簷角上有琉璃製成的仙人神獸像，除騎鳳仙人外還有10個神獸，數量之多為現存古建築中絕無僅有，分別是龍、鳳、獅子、天馬、海馬、狻猊、狎魚、獬豸、鬥牛、行什。它們既起到美觀的作用。又寄託著風調雨順、國泰民安的願望。這些仙人神獸像也有建築功能。屋脊的坡度會使脊瓦下滑，交梁上需要鐵釘固定，為了保護鐵釘免受雨雪侵蝕，這些仙人神獸像就用來當鐵釘的帽子，並起到裝飾作用。\n\n"+
"殿內裝飾\n\n"+
"太和殿的裝飾豪華。簷下施以密集的斗拱，室內外梁枋上飾以和璽彩畫。門窗上部嵌成菱花格紋，下部浮雕雲龍圖案，接榫處安有鐫刻龍紋的鎏金銅葉。殿內金磚鋪地，明間設寶座，寶座兩側排列6根直徑1米的蟠龍金柱，所貼金箔採用深淺兩種顏色。寶座前兩側有四對陳設：寶象、甪（音錄）端、仙鶴和香亭。寶象象徵國家的安定和政權的鞏固；甪端是傳說中的吉祥動物；仙鶴象徵長壽；香亭寓意江山穩固。寶座上方天花正中安置形若傘蓋向上隆起的蟠龍藻井。藻井正中雕有蟠臥的巨龍，龍頭下探，口銜寶珠，這寶珠是一顆大銅珠，名為「軒轅鏡」，旁邊還有6顆小珠。民間傳說如果不是受命於天的人坐上寶座，軒轅鏡就會落下來，致那個人於死地。據傳說，袁世凱準備登基之前，怕軒轅鏡掉下來砸死自己，於是下令將寶座向後（向北）移動2米。後來雖將袁世凱寶座替換為明朝嘉靖寶座，但位置並未移回，因此如今軒轅鏡正下方是方台的台階前沿，而非寶座。\n\n"+
"龍門寶匣\n\n"+
"紫禁城中的主要建築都有寶匣，它們被安放在屋頂正脊正中的脊筒內作為「鎮物」。傳統上，在安放寶匣時要舉行相應的儀式，反映出古人趨利避害的一種心理。太和殿寶匣為銅質抽屜式，表面鎏金，鐫雕龍紋。根據康熙年間的歷史文獻《太和殿記事》記載，匣內應有金錢、金銀銅鐵錫錁(金屬小錠)、金銀銅鐵錫牌、五色寶石、五經、五色緞、五色線、五香、五藥、五穀。由於年代久遠，部分匣內物件已經不存。隨著太和殿修繕工程的進行，2007年9月5日上午，太和殿正脊合隴，寶匣被鄭重放回正脊正中的「龍門」位置。此次寶匣物件包括金錁和五經、五色緞、五色線、五香、五藥、五穀等物的殘存部分。在安放儀式上，紀錄太和殿修繕經過的《太和殿修繕工程紀事》也被放入寶匣。隨著工程的進展，將逐步實施紫禁城內其餘建築現存寶匣的歸安。\n\n"+
"皇帝寶座\n\n"+
"太和殿的中央金柱之間，高臺之上安放著寶座──龍椅（髹金漆雲龍紋寶座）。是紫禁城裡唯一保存下來的明代皇帝寶座。它於明朝嘉靖年間打造而成，每一層都裝飾著祥龍紋樣，椅圈上盤繞著十三條金龍，椅背正中立著一條正龍。椅子看上是金色，但並不是黃金做的，而是通過髹（音同「休」）木為金的工藝打造而成。將黃金在特製的膠水中研磨之後去膠晾乾成為金粉，再用絲棉拂掃到上了膠的木制龍椅上，最後罩上一層透明的漆形成黃金打造的效果。寶座是專家在故宮博物院的庫房裡發現的。1963年，文物專家對寶座進行了修復。\n\n"+
"寶座通高172.5釐米，座高49釐米，座寬158.5釐米，座前腳踏高30釐米，椅背為「圈椅」式，由金絲楠木製成，雕有蟠龍，自中間向兩側扶手處逐漸走低，靠背背板平雕陽文雲龍。寶座下有一小底座，小底座下為一大底座，大底座設在一個高約2米的朱漆方臺上。方台為楠木製作，外髹金漆，四周採用宮殿基座形式，鑲有大量寶石，方台正面和左右有7級台階。寶座後面有雕龍金漆屏風，為清朝遺物，共七扇。寶座沒有椅腿，取而代之的是一個約寬1.67米、深0.67米的須彌座底座。寶座前兩側有四對陳設：寶象、甪端、仙鶴、香亭。寶座上方懸掛有「建極綏猷」匾額。兩側柱子上掛有對聯：「帝命式於九圍茲惟艱哉奈何弗敬，天心佑夫一德永言保之遹求厥寧。」\n\n"+
"如今太和殿內陳設的寶座和屏風中，只有屏風是清朝太和殿內的原物。清朝康熙時期重建太和殿，新制了寶座和屏風。1915年袁世凱稱帝時期，太和殿一度擺放當時新造的一張紫檀木寶座，為西洋風格的高背大椅，原來太和殿內的清朝寶座可能同時被毀。據說因袁世凱腿短身長，該寶座椅背高，座面短，椅背上有白緞繡成的一個袁世凱設想的「中華帝國」的國徽，寶座做工粗糙，白緞日久破裂後，可見其內裝的是乾草。這座袁世凱寶座從1915年到1958年一直放置在太和殿。1958年故宮博物院重新對外開放時，故宮博物院決定撤掉與太和殿整體風格不協調的袁世凱寶座，但找不到合適的寶座陳設。某一天，故宮博物院傢俱庫匯報庫內存有一隻破舊的椅子，懷疑是個寶座，專家考證後，推斷那是明朝嘉靖年間撤換下來的太和殿寶座，並就此確定以該寶座殘件為基礎進行恢復，在1964年9月將該寶座修復完成。因為寶座是明朝嘉靖年間遺物，所以恢復後的寶座是明朝風格，與寶座後面陳設的清朝屏風風格不同，這可從二者的龍紋和雲紋上分辨出來。1958年撤下的袁世凱寶座，後來被故宮博物院撥交河北省遵化縣清東陵，陳放在慈禧陵的祾恩殿內。\n\n"+
"金磚墁地\n\n"+
"太和殿中大部分的地面都是金磚墁地，每塊邊長約為0.67米，共有4718塊金磚。這裡的金磚並不是指黃金，而是用蘇州太湖的澄漿泥，也就是一種過濾後除了雜質，沉澱下來極為細膩的泥，作為原料，經過多道工序製作而成的地磚。這種地磚，從挑選原料到製作完成，再經過嚴格篩選，運到北京，最後鋪在宮殿裡，至少要花費兩年多時間，價格與黃金不相上下，故名為金磚墁地。還有一種說法是此磚原名「京磚」，由於發音相似，再加上叩擊有金石之聲，便被叫做金磚。\n\n"+
"「建極綏猷」匾\n\n"+
"太和殿匾額「建極綏猷」匾，為乾隆皇帝的御筆。宣統三年（1911年）清朝滅亡之後，袁世凱由民國大總統改稱「中華帝國洪憲皇帝」，曾想在太和殿登基，便將太和殿匾、聯撤掉，寶座移往它處。後經多人回憶、查找，匾、聯卻始終沒有發現。便依照清宮所存《清朝皇室寫真》中清光緒二十六年（1900年）太和殿舊照片，複製「建極綏猷」匾（2.8米×6.8米）及「帝命式於九圍茲惟艱哉奈何弗敬，天心佑夫一德永言保之遹求厥寧。」聯一對（7.5米×1米），並於2002年9月18日「回歸」到原來的位置上。\n\n"+
"蟠龍金柱\n\n"+
"龍椅兩側共有六根使用特殊工藝、雕刻著金色蟠龍的柱子，全名為「瀝粉貼金江山萬代升轉蟠龍柱」。\n\n"+
"太和殿共有立柱72根，最高的12.7米，最粗的直徑1.06米。原來都是楠木立柱，但早已毀於康熙十八年（1679年）火災，今太和殿的柱子是清朝康熙年間重建時用松木拼接而成，其中包括寶座兩側直徑1米的6根蟠龍金柱。這種蟠龍金柱是紫禁城其他建築物沒有的。所貼金箔使用深淺兩種顏色，以突出圖案。6根蟠龍金柱上的龍，龍頭全都望向寶座。",
                color: "rgba(255, 165, 0, 1)"
            },{
                x: 711,
                y: 1260,
                width: 90,
                height: 38,
                text: "午門",
                description:"午門是紫禁城的正門，其前有端門、天安門（明代稱承天門）、大清門（明代稱大明門），其後有太和門（明代稱奉天門、皇極門）。\n\n"+
"午門平面圖呈「凹」字形，沿襲隋唐洛陽城紫微宮應天門以及宋朝宮殿丹鳳門的形制。五門分為上下兩個部分，上部為門樓，下部為敦臺，敦臺正中開三門，兩側各有一座掖門，共五門，俗稱「明三暗五」。墩台兩側設上下城台的馬道。五個門洞各有用途：中門為皇帝專用，此外只有皇帝大婚時，皇后乘坐的喜轎可以從中門進宮，通過殿試選拔的狀元、榜眼、探花，在宣佈殿試結果後可從中門出宮。東側門供文武官員出入。西側門供宗室王公出入。兩掖門只在舉行大型活動時開啟。\n\n"+
"墩臺上方的門樓，正中建有廊廡13間，俗稱「雁翅樓」。廊廡的兩端均有重簷攢尖頂的方亭。正樓兩側分別建有鐘鼓亭各三間，每逢皇帝親赴天壇、地壇祭祀時，鐘鼓亭的鐘鼓齊鳴，皇帝赴太廟祭祀則擊鼓，大型活動則鐘鼓齊鳴。午門的建築左右對應，高低錯落，形似朱雀展翅，所以午門又稱「五鳳樓」。\n\n"+
"午門南面的東、西兩側，各建有一座門，東為闕左門，西為闕右門。\n\n"+
"闕左門：午門外向東出入之門，坐西朝東，出門是太廟（今為北京市勞動人民文化宮）。此門始建於明朝初年，面闊三間，單簷歇山頂，門外設有下馬碑石一座。「凡九卿會議，揀選人員，驗看月官」，均集於此門。闕左門北有朝房三間，為諸王朝房。\n\n"+
"闕右門：午門外向西出入之門，坐東朝西，出門是社稷壇（今為中山公園）。此門始建於明朝初年，面闊三間，單簷歇山頂，門外設有下馬碑石一座。「八旗都統會議」集於此門。闕右門北有朝房三間，為諸王朝房。\n\n"+
"端門至午門之間的院落，占地面積30680平方米。禦道兩側共有左、右朝房一百多間。明清時期，闕左門、闕右門以南的朝房是六科垣舍，又稱「六科廊」（吏部、戶部、禮部、兵部、刑部、工部這六部的辦事機構所在地）。東、西朝房均向南延伸至端門以北。\n\n"+
"《國朝宮史•卷十一•宮殿一•外朝》載：\n\n"+
"「又北東出者為闕左門，西出者為闕右門。門外各有下馬碑石。凡九卿會議，揀選人員，驗看月官，俱集左門下。八旗都統會議俱集右門下。門北為諸王朝房，左右各三楹，甬道左有嘉量亭，右有日景晷度。\n\n"+
"．．．\n\n"+
"端門之內，東朝房五楹，為禮科公署。西朝房五楹，為工科公署。禮科之北為太廟神廚門，工科之北為社左門。再北，左右朝房各四十二楹，內東二十三楹，西二十楹，為六部九卿朝房。余吏科公署七楹，戶科公署九楹，在東。中書科公署六楹，兵科公署七楹，刑科公署七楹，又六科公所二楹，在西。其吏科之北三楹，敬安石刻聖祖仁皇帝御製台省箴：「台省之設，言責斯專。寄以耳目，寧取具員。通明無滯，公正無偏。黨援宜化，畛域宜捐。洞達政體，斯曰能賢。古昔諍臣，風規凜然。訏謨讜論；垂光簡編。朕每覽繹，如鑒在懸。居是官者，表里方直。精白乃心，充廣其識。國計民生，臧否黜陟。凡所敷陳，敬將悃愊。風霜之任，以懲奸慝。搏擊之威，以儆貪墨。毋摭細務，苟塞言責。毋紛成憲，妄逞胸臆。書思入告，當寧對揚。沽名匪正，營私孔傷。或藏嫌怨，謬為雌黃。受人指囑，尤為不臧。形諸奏牘，有玷皂囊。職司獻替，亟宜審詳。敬爾在公，風紀岩廊。詞箴用勖，誕告聯常。康熙庚辰御製並書。」\n\n"+
"綜上所述，可見午門以南的廡房（朝房）及門分別為：\n\n"+
"東側：\n\n"+
"諸王朝房、闕左門、石刻聖祖仁皇帝《御製台省箴》所在廡房、吏科公署、戶科公署、六部九卿朝房、太廟神廚門、禮科公署\n\n"+
"西側：\n\n"+
"諸王朝房、闕右門、中書科公署、兵科公署、刑科公署、六科公所、六部九卿朝房、社左門、工科公署\n\n"+
"每年十月初一日，要在午門舉行頒佈次年曆書的「頒朔」典禮。遇有重大戰爭，大軍凱旋時，要在午門舉行向皇帝敬獻戰俘的「獻俘禮」。明代皇帝處罰大臣的「廷杖」也在午門舉行。民間傳說中所謂「推出午門斬首」亦指此地，但把如此重要的地方作為殺人刑場是不可能的，此說顯然不合史實。"
,
                color: "rgba(255, 165, 0, 1)"
            }
        ]
        
        this.locations3 = [
            { 
                x: 930, 
                y: 895, 
                width: 34, 
                height: 54, 
                text: "體仁閣", 
                description: "體仁閣位於太和殿前廣場內東側，坐東朝西，與弘義閣相對立。體仁閣始建於明朝永樂十八年（1420年），明初稱為「文樓」，明朝嘉靖四十一年（1562年）改稱「文昭閣」，清朝順治三年（1646年）改稱「體仁閣」。清朝乾隆四十八年六月（1783年），體仁閣毀於火災，同年依照弘義閣的形制重建。\n\n"+
"體仁閣高25m，上下兩層。面闊9間，進深3間，四面出廊。梢間與山牆及後簷牆用木板做封護牆，減少了下層的承重力。簷下為重昂五踩鬥栱。簷角安放脊獸7個。\n\n"+
"明朝體仁閣一直用來存放《永樂大典》，嘉靖三十六年火災後，體仁閣的使用情況不得而知。康熙十八年三月（1679年），詔舉博學鴻儒143人於體仁閣，試詩比賦，取上等20人，二等30人，共同纂修《明史》。乾隆年間重建之後，體仁閣兩廡作為內務府廣儲司六庫，內設收貯緞繡木架143座。清朝各朝皇帝的甲冑也曾收藏於體仁閣。\n\n"+
"體仁閣大學士，為清朝內閣大學士之一，正一品銜。掌管處理國家大政、贊詔命，釐憲典，議大禮大政等職責。乾隆十三年（1748年），清廷調整大學士設置，取消中和殿大學士，增設體仁閣大學士，以三殿、三閣（保和殿、文華殿、武英殿、文淵閣、東閣、體仁閣）為定制。體仁閣大學士排名最後，大學士的遷轉也大多按從體仁閣至文華殿這樣的順序遷轉。曾擔任體仁閣大學士的名臣有：楊廷璋、劉墉、葉名琛、曾國藩、徐桐、張之洞、徐世昌等。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 550, 
                y: 894, 
                width: 36, 
                height: 53, 
                text: "弘義閣", 
                description: "弘義閣，位於紫禁城太和殿廣場西廡，與東廡體仁閣遙遙相對。\n\n"+
"弘義閣始建於明朝永樂十八年（1420年），明初稱為「武樓」，明朝嘉靖四十一年（1562年）改稱「武成閣」，清朝順治三年（1646年）改稱「弘義閣」。弘義閣在明朝的用途無線索可尋。清朝時，弘義閣兩廡是內務府廣儲司六庫，貯存金、銀、制錢、珠寶、玉器、金銀器皿等。皇帝、皇后筵宴用的金銀器皿由該庫預備，用畢仍交還該庫收存。\n\n"+
"現存的弘義閣是明朝天啟七年再建，保留了明朝天啟七年的建築遺構。弘義閣與體仁閣作為太和殿的陪襯建築左右對稱，建築形式完全相同，乾隆時體仁閣被火燒毀，就是仿照弘義閣重建的。由於二閣是太和殿的兩廂，在形制上既要有主有從，又不能相差太大，影響和諧，因此建成樓閣形式，兩層之間設腰簷，出平座，屋頂為單簷廡殿頂，此種做法使其高度達到23.8m，相當於太和殿高度的7/10，又高於與其相鄰的廡房，既不逾越建築等級之制，也無兩廂渺小之感，同時又改變了建築空間的呆板。二閣與主體建築配合協調，使整組建築愈顯氣勢恢宏。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 400, 
                y: 1042, 
                width: 17, 
                height: 42, 
                text: "凝道殿", 
                description: "武英殿的東配殿，面闊五間，黃琉璃瓦單檐懸山頂，原為前出廊，後改為正間前出廊。凝道殿以北有值房（廊房），頂覆黃琉璃瓦。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 299, 
                y: 1042, 
                width: 16, 
                height: 42, 
                text: "煥章殿", 
                description: "武英殿的西配殿，面闊五間，黃琉璃瓦單檐懸山頂，原為前出廊，後改為正間前出廊。煥章殿以北有值房（廊房），頂覆黃琉璃瓦。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 930, 
                y: 551, 
                width: 33, 
                height: 46, 
                text: "景運門", 
                description: "景運門（滿語：ᡤᡳᠩᠶᡡᠨᠮᡝᠨ，穆麟德轉寫：ging yūn men）位於紫禁城乾清門前廣場的東側，是內廷與外朝東路的重要通路，始建於明朝永樂十八年（1420年），萬曆二十六年（1598年）重修，清朝順治十二年（1655年）再度修葺。景運門與隆宗門相對，皆為通往乾清門前廣場的重要入口，因此又稱「禁門」。清朝時，規定親王以下及大員僅可至門外台階20步以外停立，嚴禁擅入門內，以示森嚴。2014年，為消除安全隱患，故宮博物院拆除了景運門內的彩鋼房，恢復其歷史原貌。景運門坐西朝東，面闊五間，採用黃琉璃瓦單檐歇山頂，單昂三跴斗拱，整體為徹上明造，梁枋繪以墨線大點金旋子彩畫，門道內外設有礓磋慢道，便於車輿通行。門內北側有蒙古王公大臣值房及九卿值房，南側為奏事待漏值所；門外東側為奉先殿，北側則是毓慶宮，構成紫禁城東部的重要建築群。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 550, 
                y: 551, 
                width: 36, 
                height: 45, 
                text: "隆宗門", 
                description: "隆宗門位於紫禁城乾清門前廣場的西側，與東側的景運門相對，是內廷與外朝西路及西苑的重要通道。隆宗門始建於明朝永樂十八年（1420年），萬曆二十六年（1598年）重修，清朝順治十二年（1655年）再次修葺。隆宗門非奏事待旨或宣召，王公大臣亦不得私入。清朝皇帝如康熙帝、雍正帝及道光帝均在紫禁城外西郊皇家園林駕崩，其梓宮迎入紫禁城時，均經隆宗門內舉行齋集舉哀儀式。嘉慶十八年（1813年）發生的「癸酉之變」與隆宗門關係密切。天理教起義軍在太監引導下攻至隆宗門，門已被守軍封閉，起義軍試圖翻牆進入，卻被養心殿守衛擊退，其中兩名天理教徒被皇二子旻寧（後來的道光帝）用火槍射殺。激戰中，有兩支箭射中隆宗門，一支留在門內側椽頭上，另一支嵌於門外額匾的「宗」字左側，現今僅餘箭鏃存留。2014年，為消除安全隱患，故宮博物院拆除了隆宗門內的彩鋼房（原為快餐廳）。隆宗門建築形式與景運門相同，面闊五間，採黃琉璃瓦單檐歇山頂，單昂三踩斗拱，徹上明造，梁枋以墨線大點金旋子彩畫裝飾。門道內外設礓磋慢道，方便車輿通行。隆宗門內北側為軍機處值房，門外正西則是慈寧宮，整體構成紫禁城西部的關鍵建築群。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 1107, 
                y: 670, 
                width: 40, 
                height: 110, 
                text: "御茶膳房", 
                description: "御茶膳房位於紫禁城東路、南三所西側，是清朝負責宮內飲食及筵宴事務的重要機構，隸屬內務府。始於順治年間，初稱「茶房」與「膳房」，乾隆十三年（1748年）合併為「御茶膳房」，長官由皇帝特簡。其下設膳房、茶房、肉房與乾肉房，並在乾隆三十六年（1771年）設檔案房管理文書檔案，包括膳底檔等。御茶膳房的建築特色包括位於南三所西側的黃琉璃瓦房和多處分支機構，例如紫禁城內的膳房、養心殿御膳房、御茶房，以及各地御園與行宮的膳房。此外，清雍正年間曾下諭要求妥善處理飲食剩餘，體現清宮飲食管理的細緻與節儉。現代修繕工程亦對御茶膳房進行保護與修繕，成為故宮重要的歷史建築之一。",
                color: "rgba(255, 165, 0, 0.5)"
            },{ 
                x: 431, 
                y: 464, 
                width: 34, 
                height: 76, 
                text: "西三所", 
                description: "西三所位於慈寧宮東部。康熙二十六年，將慈寧宮東部的五間新建宮殿拆遷至孝陵附近，這是因為昭聖太皇太后生前非常喜歡這組宮殿。這組宮殿拆除後，在原址建設頭所殿、二所殿、三所殿。三座殿均各成一院，自南向北排列。其中頭所殿在慈寧宮的正東；二所殿在大佛堂的正東；三所殿在東宮殿的正東。院內建築均覆灰色筒瓦。頭所殿以南，有一座排房，南北長、東西窄，位於東側的宮牆內，後來拆除改建為故宮博物院的職工浴室，2014年為消除安全隱患，建設「平安故宮」，故宮博物院拆除磚混結構的職工浴室[17]；該排房南側另有一座排房，位於慈寧宮外圍宮牆內的東南角，東西長、南北窄，頂覆黃琉璃瓦，其南為慈寧宮南側外圍宮牆，其北有一東西走向的院牆，與上述北側的排房相隔。",
                color: "rgba(255, 165, 0, 0.5)"
            },{ 
                x: 1305,
                y: 194, 
                width: 60, 
                height: 95, 
                text: "慶壽堂", 
                description: "慶壽堂是紫禁城內寧壽宮後部東路的一組建築，位於閱是樓以北，建於乾隆三十七年（1772年）。該建築經歷了嘉慶七年（1802年）和光緒十七年（1891年）的重修，並於1949年5月和6月，人民政府出資對其進行了修繕，這是北平和平解放後對故宮的首項修繕工程。慶壽堂由前後四進院落組成，院落呈長方形，南北較長，東西較窄。建築的正殿通常面闊五間，進深一間，設有前後出廊，每一進院落的東西配殿則為三間，進深一間。主要建築的牆體使用水磨磚，室內以青磚為地面，外檐繪有蘇式彩畫。屋頂使用琉璃瓦，其中前院為綠琉璃瓦黃剪邊，後院則為黃琉璃瓦綠剪邊。慶壽堂的主入口是垂花門，並且內有尋沿書屋，該書屋為乾隆三十七年所建，命名源於乾隆帝的詩句。慈禧太后曾在樂壽堂（寧壽宮）居住時，將慶壽堂作為醇親王福晉、恭親王之女、慶親王之女等人的暫居之所。慶壽堂保存完好，是紫禁城中的重要建築之一。",
                color: "rgba(255, 165, 0, 0.5)"
            },{ 
                x: 1360, 
                y: 972, 
                width: 20, 
                height: 63, 
                text: "清史館書庫", 
                description: "清史館書庫，又稱清史館大庫，原為清朝國史館書庫，位於紫禁城東華門內。乾隆三十年（1765年），國史館重設後成為常設機構。1914年，北京政府於國史館舊址成立清史館，書庫隨之劃歸清史館。清史館在館長趙爾巽主持下，利用書庫收藏的檔案資料，組織近百人進行《清史稿》編纂，歷時14年（1914-1927年）完成。書稿完成後，清史館停辦。1928年6月，南京國民政府接收故宮，包括清史館大庫在內的檔案均被封存，後於1929年移交故宮博物院文獻館及圖書館管理，並在南三所進行分類整理。清史館大庫內保存的檔案涵蓋運河奏摺、考察憲政奏摺、八旗襲職檔、史書、奏議、起居注稿本等豐富內容，既包括國史館和清史館編纂的史料，也有清朝歷朝實錄稿本及官員履歷等資料。1933年，故宮博物院因局勢動盪南遷檔案，其中包括清史館大庫的83箱檔案，1949年後部分陸續運回。中華人民共和國成立後，清史館大庫繼續保存明清歷史檔案，1960年代經修繕後提升防潮與通風性能，1976年檔案遷至西華門新建庫房，大庫則轉作文物儲藏用途。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 385, 
                y: 619, 
                width: 89, 
                height: 170, 
                text: "養心殿造辦處", 
                description: "養心殿造辦處，簡稱「造辦處」，位於紫禁城外廷西部，慈寧宮以南，是清朝內務府下屬的官辦作坊之一。其創建時間主要有康熙十九年（1680年）及康熙三十年（1691年）兩種說法，初設於養心殿四周的平房內，後因需求增加遷至慈寧宮茶飯房，仍稱為「養心殿造辦處」。該處專責製作、修繕及存儲宮廷所需的各項器物，內部分為多個「作」、「處」、「廠」、「館」，如玻璃廠、如意館等。其歷史檔案《造辦處各作成做活計清檔》記錄了該機構的詳細運作，涵蓋製作、修繕過程及交接細節，至雍正、乾隆年間達到鼎盛，製作了大量清式家具精品如紫檀寶座和嵌剔紅靠背寶座等。根據《乾隆京城全圖》，造辦處位於慈寧宮花園東南，呈曲尺形，與花園間隔一條甬道，設有迎禧門作為正門，其建築南側則鄰接內務府公署並有冰窖設施，形成一個功能多樣、布局精巧的宮廷作坊體系。",
                color: "rgba(255, 165, 0, 0.5)"
            },{ 
                x: 478, 
                y: 630, 
                width: 34, 
                height: 158, 
                text: "冰窖", 
                description: "冰窖是清朝用來貯藏皇室用冰的重要設施，位於紫禁城西路，共有五座。《養吉齋叢錄》記載，紫禁城內的五座冰窖中，其中四座各可藏冰五千塊，另一座可藏冰九千二百二十六塊。《欽定大清會典》中提到，冰由工部備辦，並納入紫禁城內的冰窖。《欽定總管內務府現行則例》進一步補充，最初只有一座冰窖，存放通州冰，後來統一改為御河冰。冰窖的具體位置在養心殿造辦處以東，呈南北分布，形成一個南北長、東西窄的長條形院落。2013年，故宮博物院院長單霽翔宣布，故宮內的五座冰窖將逐步開放，用作「觀眾服務中心」。到了2017年初，部分冰窖已被改造為冰窖餐廳並對外營業。",
                color: "rgba(255, 165, 0, 0.5)"
            },{ 
                x: 1364, 
                y: 120, 
                width: 29, 
                height: 458, 
                text: "南、北十三排", 
                description: "南、北十三排位於紫禁城寧壽宮外東側，分為南北各13座排房，建於清朝乾隆年間，東鄰紫禁城東城牆。南十三排和北十三排每排房相向而設，共有12座排房，排房面闊三間，進深一間，前出廊，明間設有門，灰瓦硬山頂。每兩座排房形成一個院，南十三排和北十三排各分為六個院，每個院的西牆設有一座院門。北端一座排房擁有小南房兩間，南端的南牆中間設有垂花門，門外通向斂禧門。紫禁城出版社的主要辦公區設在南十三排。",
                color: "rgba(255, 165, 0, 0.5)"
            },{ 
                x: 134, 
                y: 80, 
                width: 45, 
                height: 60, 
                text: "城隍廟", 
                description: "城隍廟位於紫禁城西北角，建於清朝雍正四年（1726年），並在咸豐七年（1857年）進行修葺。每年萬壽節和季秋時，內務府總管會在此致祭，並定期供奉祭品。由於城隍廟位於紫禁城的入水口處，兼有龍王和鎮水觀音的功能，當天旱時，皇帝會派大臣來此燒香求雨。乾隆帝曾在乾隆二十四年（1759年）親自撰寫祭文，表達求雨的心情。清朝滅亡後，城隍廟逐漸冷落，並在文化大革命時期遭遇破壞，幸好殿宇和神壇得以保留。其後，該地區被用作印刷廠，並在後來由《紫禁城》雜誌社接管。城隍廟的建築群位於紫禁城西北角，與神武門之間的水道相接，並依此水道建設。整座廟宇的建築依軸線自南向北分為山門、廟門和正殿，形成三進院。正殿坐北朝南，面闊五間，黃琉璃瓦硬山頂，並曾供奉紫禁城城隍之神。城隍廟的建築至今保存完好，包括山門、廟門、東西配殿等。",
                color: "rgba(255, 165, 0, 0.5)"
            },
        ]
        this.locations4 = [
            
            { 
                x: 391, 
                y: 976, 
                width: 18, 
                height: 13, 
                text: "恆壽齋", 
                description: "位於武英殿建築群的東北角，頂覆黃琉璃瓦。清朝時，此處為繕校《四庫全書》諸臣值房。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 298, 
                y: 1008, 
                width: 18, 
                height: 13, 
                text: "浴德堂", 
                description: "浴德堂位於紫禁城武英殿院內西北平台上，緊鄰敬思殿西側，名稱取自《禮記·儒行》中「儒有澡身而浴德」之句，寓意修身養德，為清朝詞臣校書的值房，負責刊刻與裝潢圖書事宜。浴德堂坐北朝南，面闊三間，黃琉璃瓦卷棚歇山頂，後檐西側接抱廈兩間，堂後偏西有北房，面闊兩間，亦為黃琉璃瓦卷棚硬山頂。堂內東次間後檐設有門，通往一條磚砌拱券曲折通道，連接後室。後室平面呈方形，上覆穹頂，帶有阿拉伯式建築風格，內部以素白琉璃面磚裝飾，頂部設有圓窗，後牆建有鐵製壁爐用於燒水。後室外設有鍋台，旁有井亭，井水通過懸石槽引入鍋台，加熱產生蒸氣供應後室，具備浴室功能。據考證，該後室為元代宮城內遺存的土耳其浴室，相傳明朝時曾作為皇帝齋祓的場所，清朝時在武英殿設御書處後，改為蒸紙處，用於蒸熏印刷圖書所需的紙張。位於浴德堂西北、武英殿建築群西牆外最北端的井亭，頂覆黃琉璃瓦，是供應鍋台用水的重要設施。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 1146, 
                y: 1031, 
                width: 32, 
                height: 13, 
                text: "傳心殿", 
                description: "傳心殿位於紫禁城東南隅的文華殿東側，是清朝皇帝在御經筵前舉行「祭告禮」的場所。創建於康熙年間，「經筵」是為皇帝研習經史而設的講席，通常於每年春秋兩季舉行，遇酷暑或嚴寒則暫停。傳心殿為一組祭祀性建築，院落南北長100米，東西寬25米，占地2500平方米。院內自南向北依次設有治牲所、景行門、傳心殿等建築。治牲所位於最南端，坐南朝北，面闊五間，頂覆黃琉璃瓦。景行門居中，面闊三間，明間前後檐開門，旁有「大庖井」，井水清洌，與玉泉山水齊名。傳心殿為主建築，位於景行門北，面闊五間，殿內中央供奉伏羲、神農等歷代賢師塑像，東設周公位，西設孔子位。殿後建有祝版房、神廚及值房，分別面闊三至五間，為祭禮及日常管理所用。整座建築布局嚴謹，是清代皇帝祭祀及文化傳承的重要場所。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 535, 
                y: 130, 
                width: 28, 
                height: 12, 
                text: "重華宮", 
                description: "重華宮位於崇敬殿以北，是中院的正殿，建築面闊五間，進深一間，覆以黃琉璃瓦硬山頂，明間設門，其餘為檻窗，前接抱廈三間。宮內明間與東次間、西次間以紫檀雕花槅扇分隔，槅扇雕工精湛，堪稱紫禁城內檐裝修的典範。光緒十七年（1891年），東次間槅扇改為子孫萬代葫蘆落地罩。重華宮外檐上方懸掛「重華宮」匾額，增添皇家氣派。西次間為乾隆帝賜群臣茶宴、賦詩聯句及觀戲之地，內設紫檀雕花頂豎櫃和平頭案，並陳列乾隆御筆貼落等文物。東梢間稱為芝蘭室，是乾隆帝休憩之所，通炕配以十二月花卉雕屏，炕前有炕幾、炕案及香爐，北牆懸掛《鶴鹿同春圖》掛屏，文玩茶具點綴其間。重華宮東配殿為葆中殿，內額題「古香齋」，曾用於收藏《欽定古今圖書集成》；西配殿為浴德殿，額曰「抑齋」，作為乾隆帝書室使用。院內東西兩側各建有井亭，東亭有井，西亭為對稱設計，整體布局兼具實用與美觀，展現皇家生活的精緻與格調。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 420, 
                y: 227, 
                width: 20, 
                height: 12, 
                text: "撫辰殿", 
                description: "建福門內為第一進院落，撫辰殿位於院落中間。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 420, 
                y: 204, 
                width: 20, 
                height: 12, 
                text: "建福宮", 
                description: "建福宮位於紫禁城內廷西路，西六宮的西側，建於乾隆七年（1742年），由乾西五所中的西四所及其南側狹長地區改建而成，嘉慶七年（1802年）曾重修。建福宮最初設計是作為乾隆帝「備慈壽萬年之後居此守制」之地，但最終未被用作此用途。乾隆帝對建福宮非常喜愛，時常來此遊憩並賦詩，如《建福宮賦》和《建福宮紅梨花詩》。清宮定制每年臘月初一，皇帝會在此開筆書福，以慶賀新年。咸豐年間，咸豐帝曾奉皇貴太妃於建福宮進膳，孝德顯皇后和孝貞顯皇后的神位也曾設於此。即使在1923年建福宮花園大火中，建福宮建築仍得以完整保存。建福宮與撫辰殿由寬敞的甬道相連，撫辰殿的後檐廊與建福宮前廊及東西轉角遊廊構成廊院。建福宮建築面闊五間，進深三間，採用黃琉璃瓦綠剪邊卷棚歇山頂，檐下有斗拱裝飾，前後檐的明間安裝四扇三交六椀菱花槅扇門，次間和梢間設有檻窗與磚牆。內部採「一明兩暗」格局，明間後檐金柱之間設有寶座，寶座上方懸掛乾隆御書「不為物先」匾，槅扇與裙板皆為黑漆描金，並飾有五彩吉祥圖案。建福宮室內裝飾極為精緻，天花、銀花紙等均展示高超工藝，是紫禁城內裝修的代表之作。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 420, 
                y: 180, 
                width: 20, 
                height: 18, 
                text: "惠風亭", 
                description: "從建福宮兩側的遊廊可來到第三進庭院，庭院中央是惠風亭。惠風亭北側用紅牆隔出最後一進院落，院落中的靜怡軒、慧曜樓後來被劃入建福宮花園。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 388, 
                y: 117, 
                width: 22, 
                height: 14, 
                text: "吉雲樓", 
                description: "位於花園北端，敬勝齋東側的淨房和慧曜樓之間，坐北朝南。復原設計方案為：「三開間歇山樓，面闊三間，進深一間，前出廊，七檁卷棚頂，上檐重拱交麻葉斗拱，上下檐裝修為步步緊支摘窗，格扇門，瓦頂黃琉璃瓦綠卷邊，彩畫為金線方心式蘇畫。」",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 420, 
                y: 332, 
                width: 20, 
                height: 12, 
                text: "延慶殿", 
                description: "延慶殿，位於紫禁城內廷西路、中正殿雨花閣東側。清朝時，每逢立春，皇帝便在延慶殿九叩迎春，為民祈福。延慶殿位於延慶門內。延慶殿以北，是廣德門。延慶門以南還有一院，院內東、西兩側各有群房。廣德門以北到建福宮的建福門以南，是一個沒有建築的南北長、東西窄的院落。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 530, 
                y: 117, 
                width: 38, 
                height: 11, 
                text: "翠雲館", 
                description: "翠雲館位於重華宮以北，是後院的正殿，兩側附有耳房及東西配殿。建築面闊五間，進深一間，覆以黃琉璃瓦硬山頂，明間開門，其餘為檻窗。館內裝修以黑漆描金為主，精美絕倫，隔間以四扇金漆山水圖隔扇組成，隔扇上部為勾雲紋窗櫺，牆上陳設紫檀百寶嵌博古圖及漆地百寶嵌花鳥圖掛屏，相映成趣。西梢間北牆上下分層，上層為閣樓式設計，內置八扇花鳥圖屏風；下層為炕，配炕桌、炕案及紫檀框雙面繡隔扇，炕下西側置紫檀雕花大案，東側設書格式帘子隔塵。東次間匾額題「長春書屋」，為乾隆帝即位前的讀書處，東次間與東梢間之間設有祥雲門，門旁掛聯「四季風光無盡藏，百城古帙有餘香」，門上掛「養雲」匾，東梢間內設有黑漆描金插屏及紫檀長桌，均保持乾隆時期原狀。整體陳設與佈局充分體現皇家居所的奢華與文化內涵。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 366, 
                y: 337, 
                width: 30, 
                height: 19, 
                text: "雨花閣", 
                description: "雨花閣是一座融合藏式佛教建築風格的樓閣式建築，外觀三層，底層面闊三間、進深三間，四周設有出廊，乾隆三十二年（1767年）增建了前檐抱廈三間。建築的屋頂設有南北卷棚頂與東西歇山頂，覆蓋著綠琉璃瓦，屋脊及剪邊使用黃琉璃瓦，顯示出獨特的藏式風格。屋內天花繪有六字真言和法器圖案，富有宗教意涵。二層設計與底層類似，面闊三間、進深三間，南、東、西三面設有平座，並安裝檻窗。頂層面闊一間、進深一間，正面有四扇槅扇門，兩側是槅扇窗，四角攢尖頂，覆蓋鎏金銅瓦，屋脊上裝飾銅鎏金行龍，寶頂上安放鎏金銅塔，這些銅材重達近千斤，顯示出建築的華麗與尊貴。整體建築不僅具有宗教意義，還展現出清代宮廷對藏傳佛教的尊崇。該建築的設計與裝飾完美結合，凸顯了當時宮廷對佛教文化的推崇與藝術創造的高度。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 247, 
                y: 277, 
                width: 41, 
                height: 11, 
                text: "壽安宮", 
                description: "壽安宮位於紫禁城內廷外西路，壽康宮以北，英華殿以南，現為故宮博物院圖書館所在地。壽安宮始建於明朝，初名「咸熙宮」，嘉靖四年（1525年）改稱「咸安宮」，為皇太后、太妃、嬪等的居所。明朝仁聖皇太后及天啟年間乳媼客氏曾居於此。《天啟宮詞》記載，客氏每日清晨進乾清暖閣侍帝，夜晚返回咸安宮，居處奢侈僭越，例如夏季設大涼棚、賜冰無數，冬季取暖物資供應無量。清初沿用咸安宮舊制，康熙年間太子胤礽的宮人曾居擷芳殿，胤礽被廢黜後被禁錮於咸安宮，期間發現厭勝物，康熙帝因此懲處相關涉事人員。雍正六年（1728年），咸安宮被設為官學，供三旗子弟和景山官學優秀學生學習，《欽定內務府現行則例》記載內務府選拔學生約五六十名或百餘名入住學習，並派翰林等教習。乾隆十六年（1751年），咸安宮官學遷出，宮殿修葺後改稱「壽安宮」，作為皇太后、妃的居所。乾隆年間，壽安宮成為皇太后壽辰慶典的重要場所，乾隆二十五年（1760年）為慶祝皇太后七十壽辰，在宮院中建三層大戲台。乾隆四十一年，暢音閣建成後，壽安宮戲台逐漸廢棄，嘉慶四年（1799年）戲台拆除，改建春禧殿後卷殿，作為昇平署行頭、切末的收貯處。1925年故宮博物院成立後，壽安宮被改為故宮博物院圖書館，沿用至今。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 1088, 
                y: 210, 
                width: 39, 
                height: 15, 
                text: "天穹寶殿", 
                description: "天穹寶殿，位於紫禁城內廷東路，最初名為「玄穹寶殿」，始建於明朝，後來在清朝順治年間進行改建，並為避康熙帝名諱更名為「天穹寶殿」。它是宮廷道教活動的場所，專門祭祀昊天上帝，並與欽安殿、大高玄殿一同成為宮中道經的收藏地。每年，天穹寶殿會舉行多種道教活動，如天臘道場（正月初一）、天誕道場（正月初九）、萬壽平安道場（皇帝生辰）等，這些活動多由景陽宮的太監負責清掃與維護。歷代皇帝，特別是清朝的同治帝和光緒帝，曾到此拈香祈求天氣順利，並進行祈雪或祈晴等儀式。建築上，天穹寶殿的院落呈長方形，正殿坐北朝南，面闊五間，黃琉璃瓦歇山頂。正殿內懸掛著乾隆帝的御筆對聯「無言妙化資元始，不已神功運穆清」，顯示出其神聖與尊貴。東、西配殿各三間，並且南院有九間群房。作為紫禁城的重要建築之一，天穹寶殿至今仍保持良好狀態，成為了解宮廷道教文化與建築藝術的重要遺址。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 1246, 
                y: 344, 
                width: 37, 
                height: 11, 
                text: "養性門", 
                description: "位於寧壽宮後面，為寧壽宮後寢的正門。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 1245, 
                y: 192, 
                width: 47, 
                height: 9, 
                text: "頤和軒", 
                description: "頤和軒位於樂壽堂正北，與景祺閣通過穿廊相連，形成工字殿布局。建於乾隆三十七年（1772年），後經嘉慶七年（1802年）及光緒十七年（1891年）重修。頤和軒面闊七間，進深一間，單檐歇山頂，覆黃琉璃瓦，前檐出抱廈五間，後檐出抱廈三間，其他各間有廊環繞。內部結構講究，明間設五抹頭槅扇門，次間為檻窗，稍間則為步步錦支摘窗。北側穿廊連接景祺閣，並通往兩側小院。頤和軒前月台左側設日晷，甬路通向樂壽堂，兩側有琉璃花池。前檐下懸「頤和軒」匾（乾隆帝題），內部北側懸「太和充滿」匾，對聯為「景欣孚甲含胎際，春在人心物性間」。南側門上有乾隆御題《頤和軒詩》，展現乾隆年間的藝術風華與建築之美。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 1324, 
                y: 340, 
                width: 19, 
                height: 14, 
                text: "暢音閣", 
                description: "暢音閣位於寧壽宮後區東路南端，是清宮內廷的重要演戲場所，建於乾隆三十七年（1772年），並於乾隆四十一年完成。這座建築在嘉慶年間進行了多次修繕與改建，並成為清代三大戲樓之一。暢音閣與頤和園的德和園大戲樓、承德避暑山莊的清音閣並列，其中避暑山莊的清音閣在1945年被毀。暢音閣有三層戲台，其中壽台、祿台、福台分別位於不同層次，台面下設有地井與水井，可供升降演員和道具使用。暢音閣和閱是樓自1944年起成為故宮博物院的戲曲陳列場所，並於2017年重新開放，恢復了宮廷戲曲的演出。這座建築不僅是歷史文化的見證，也是現今展示清代宮廷文化的重要場所。暢音閣在2017年迎來了美國總統川普的到訪，當時他與夫人彭麗媛一同參觀了暢音閣，並欣賞了京劇《梨園春苗》、《美猴王》和《貴妃醉酒》等劇目。這次訪問不僅展示了中國傳統戲曲文化的魅力，也成為中美文化交流的象徵之一。在此行程中，川普與習近平一同欣賞了京劇表演，並對景泰藍工藝品和製作技藝進行了互動展示。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 1321, 
                y: 291, 
                width: 21, 
                height: 16, 
                text: "閱是樓", 
                description: "閱是樓位於暢音閣北側，單檐二層，卷棚歇山頂，覆黃琉璃瓦綠剪邊，金龍和璽彩畫。閱是樓面闊五間，進深三間，前出廊。下層的明間開有玻璃門三扇，次間、稍間是檻牆、支摘窗，上支窗是雙步步錦格心，下是玻璃窗。上層明間安有槅扇六扇，次間、稍間的裝修和下層相同。閱是樓下層的東、西次間靠南窗都設有寶座床。閱是樓東、西辟門連通兩側轉角廡房，再和東西廂廊相連接，經過南部的轉角廡房可到達暢音閣南側的扮戲樓。閱是樓正面（南面）上方懸掛「閱是樓」匾（乾隆帝題）。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 1330, 
                y: 119, 
                width: 29, 
                height: 11, 
                text: "梵華樓", 
                description: "梵華樓位於寧壽宮區東北端，是清朝紫禁城佛堂之一。梵華樓建於清朝乾隆三十七年（1772年），依照藏傳佛教顯宗與密宗四部供奉佛像、唐卡及供器，將顯宗、密宗集合於一體，體現了藏傳佛教格魯派顯密雙修的特點。梵華樓內的佛像塑造出藏傳佛教的諸佛菩薩及護法形象，是研究藏傳佛教造像的重要資料。梵華樓的建築及陳設形式成為清朝宮廷佛堂的重要模式，並在清宮檔案中稱之為「六品佛樓」。建築上，梵華樓位於寧壽宮區最東北端，北面倚靠寧壽宮區北宮牆，建築坐北朝南，二層樓，面闊七間，設有卷棚歇山頂。一層的明間供奉旃檀佛銅像，高210厘米，東西兩側各有三室，分別供奉乾隆三十九年（1774年）製作的掐絲琺瑯大佛塔6座，佛塔周圍牆面掛有通壁大幅唐卡，唐卡上繪有54尊護法神。各室中央有天井，並通向二層。二層圍繞天井設有紫檀木圍欄，琺瑯塔頂位於天井的中央。二層的明間供奉木雕金漆宗喀巴像，其餘六間分別為顯宗、密宗部的供奉室。每個室內供奉密宗、顯宗主尊的銅像，各有9尊，並設有紫檀木千佛龕，龕內供奉122尊小銅像。六個室共計供奉786尊佛像。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 1298, 
                y: 119, 
                width: 21, 
                height: 11, 
                text: "佛日樓", 
                description: "佛日樓位於紫禁城寧壽宮區東路北端、梵華樓西側，是清朝宮廷佛堂之一。佛日樓建於乾隆三十七年（1772年），仿照建福宮花園中的慧曜樓而興建，北依寧壽宮區的北宮牆，東側有石梯連接梵華樓。佛日樓為兩層，上下各三間，頂部覆有黃琉璃瓦綠剪邊卷棚歇山頂。一層分隔成數個室，供奉藏傳佛教五大密宗主尊（金剛密集、上樂金剛、大威德金剛、喜金剛、時輪金剛）、五方佛及釋迦牟尼佛。二層則供奉三世佛（釋迦牟尼佛、燃燈佛、彌勒佛）、十八羅漢、四大天王，北壁、東壁、西壁設有長條供案，案上供奉378尊無量壽佛小銅像。佛日樓前用虎皮石飾面牆圍繞形成小院，院中設有月亮門，門外是景祺閣東院，西行可到達景福宮。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 1191, 
                y: 217, 
                width: 30, 
                height: 13, 
                text: "萃賞樓", 
                description: "位於第三進院落北側。建於清朝乾隆三十七年（1772年），嘉慶年間、光緒年間先後進行修葺。萃賞樓坐北朝南，卷棚歇山頂，黃琉璃瓦綠剪邊。上下分為兩層，各面闊五間，前後出廊。萃賞樓正面下層是明廊，上層東四間是明廊，西梢間隔成暗廊，明間開有門，其他各間均為窗。萃賞樓的後檐下層兩次間分別開一門，上層中間開門，其他各間均為窗。隔扇門都是步步錦隔心，夔龍團紋裙板，窗是步步錦支摘窗。上下檐柱之間設有雕花彩繪木欄杆。外檐飾有博古紋蘇式彩畫，檐下安有倒掛楣子。萃賞樓上後檐明間的門外架有一座凌空的白石小橋，通至後山主峰上的碧螺亭。萃賞樓前的假山峰巒疊起，洞谷連通。萃賞樓西側有上下遊廊通往雲光樓。萃賞樓下西室匾曰「聚景」，兩旁楹聯為「金界樓台思訓畫，碧城鸞鶴義山詩」。樓上兩匾，一為「積芳」，一為「延綠」，楹聯為「素壁題詩還自檢，明窗披帙雅相親」。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 278, 
                y: 707, 
                width: 20, 
                height: 14, 
                text: "臨溪亭", 
                description: "慈寧宮花園的主要建築之一。始建於明朝萬曆六年（1578年），初名「臨溪館」，萬曆十一年五月（1583年）更名「臨溪亭」。慈寧宮花園中部偏南，有一座東西走向窄長的矩形水池，臨溪亭便位於該水池中央的單孔磚石券橋上，東西兩側均臨水，南北出階，和慈寧宮花園南入口、假山及花園北部的咸若館、慈蔭樓都位於花園的南北中軸線上。臨溪亭平面呈方形，面闊三間、進深三間，四面均中央開門，斜方格槅扇門各四扇，兩側都是斜方格檻窗，窗下檻牆貼飾黃綠色琉璃花磚，臨水兩側的門前加設有木護欄。臨溪亭屋頂為四角攢尖式，黃琉璃瓦綠剪邊，檐下施斗栱。室內有花卉圖案海墁天花，當心繪有蟠龍藻井。臨溪亭東西兩側的池畔環繞著漢白玉望柱欄板，池水清澈，池中有魚，並種植蓮花。臨溪亭是皇太后、太妃、太嬪休憩、賞花、觀魚的好場所。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 800, 
                y: 379, 
                width: 32, 
                height: 24, 
                text: "昭仁殿", 
                description: "昭仁殿位於北京故宮乾清宮東側，是一座具有深厚歷史背景的小殿，原名弘德殿，始建於明朝，萬曆十四年（1586年）更名為昭仁殿。明崇禎十七年，崇禎帝在昭仁殿砍殺昭仁公主後赴景山自縊，為明朝覆亡的重要歷史場景之一。清朝時，昭仁殿成為皇帝讀書與藏書之地，乾隆帝在此建立「天祿琳琅」藏書系統，精選善本並編撰書目。然而嘉慶二年（1797年）的火災燒毀大部分藏書，後於次年重建並完成《天祿琳琅續編》。建築上，昭仁殿為單檐歇山頂，黃琉璃瓦覆頂，設有抱廈及後室，是院落內的重要結構。其東側的龍光門為正宮通往東路的通道。昭仁殿見證了明清兩代的重大歷史事件及文化發展。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 688, 
                y: 379, 
                width: 32, 
                height: 24, 
                text: "弘德殿", 
                description: "弘德殿位於北京故宮乾清宮西側，是一座承載深厚歷史的小殿，始建於明朝，原名「雝肅殿」，萬曆十四年（1586年）更名為「弘德殿」，並曾作為皇帝的寢宮。明朝時，弘德殿是皇帝召見臣工之處，清朝則成為皇帝辦理政務及讀書的重要場所。康熙帝曾在此進講經典、探討吏治，乾隆帝則題匾表彰此地。順治年間，弘德殿還用於祭告孔子，並以「弘德殿書房」之名聞名於同治年間。建築風格上，弘德殿為單檐歇山頂，黃琉璃瓦覆頂，設有抱廈與後室，內懸多處乾隆帝御題匾額。其西側的鳳彩門為正宮通往西路的通道，與昭仁殿東側的龍光門對稱，是一座見證明清歷史的重要建築。",
                color: "rgba(255, 165, 0, 1)"
            },
        ]
        this.locations5 = [
            { 
                x: 38, 
                y: 1116, 
                width: 10, 
                height: 28, 
                text: "西華門", 
                description: "西華門是紫禁城西門，始建於明永樂十八年（1420年）。\n\n"+
"西華門西向，與東華門遙相對應，門外設有下馬碑石。西華門與東華門形制相同，平面矩形，紅色城台，漢白玉須彌座，城台當中辟3座券門，券洞外方內圓。城臺上建有城樓，黃琉璃瓦重簷廡殿頂，基座圍以漢白玉欄杆。城樓面闊5間，進深3間，四周出廊。門樓用於安放閱兵所用棉甲及錠釘盔甲。西面簷下「西華門」匾額原為滿、蒙、漢三種文字，後減為滿、漢兩種，辛亥革命後只餘銅質漢字。\n\n"+
"東、西華門的位置不在紫禁城西側城垣正中，而偏向南側，與宮城總體規劃有很大關係。紫禁城分外朝和內廷兩部分，武英殿、太和門、文華殿構成貫穿外朝的橫軸，東、西華門分處於軸線兩端。如此佈局既便於外朝使用，也可減少人員出入對內廷生活的干擾。將這一橫軸繼續向東、西兩方延伸至紫禁城外側的北京皇城，恰為東安門與西安門，顯然東、西華門乃連接皇城與宮城的重要樞紐。出西華門，正對著皇家園林西苑。清朝帝后遊幸西苑、西郊諸園，多經西華門出紫禁城。\n\n"+
"嘉慶十八年七月十八日（1813年8月13日），嘉慶帝一行啟程赴承德北部的木蘭圍場行獵。\n\n"+
"嘉慶十八年九月（1813年），發生林清、李文成、馮克善領導的天理教反清起義。林清派陳爽等人分成兩路，同時進攻東華門、西華門，史稱「癸酉之變」。東路以陳爽、祝現等人為首，太監劉金、劉得財帶路，準備進攻東華門，但天理教徒因在東華門前和車老闆發生衝突，露出武器，東華門守軍見狀迅即關閉了東華門，結果只有陳爽、劉得財領著數人沖入東華門，在太監劉得財的帶領下向北奔，衝進蒼震門(位於奉先殿東北)，最後失敗。\n\n"+
"西路則以陳文魁等人為首，太監楊進忠、高廣福帶路，將近六十名天理教徒沖入西華門，但由於帶路的太監想報私仇，故將他們先後引至內務府公署、尚衣監(位於養心殿造辦處，今均已無存)進行洗劫，從而對尚衣監實施了屠殺。天理教徒還順道洗劫了文穎館(已焚毀，詳見下文)，殺害了幾位在文穎館校書的編修。西路天理教徒趕至隆宗門時，隆宗門守軍早已聞訊關閉隆宗門。天理教徒企圖翻牆進入隆宗門內開門，遂爬到養心殿南側的膳房屋頂，被守衛在養心殿的皇二子旻寧（即日後的道光帝）用火槍打死二人。隨後掌管火器營的鎮國公奕灝調來駐在景運門外箭亭、正預備征剿李文成部的火器營官兵上千人趕到隆宗門，將天理教徒打散。\n\n"+
"九月十六日全天，清軍在紫禁城內搜捕。\n\n"+
"九月十七日天亮前，步軍統領衙門派番役赴捉拿了林清。嘉慶帝從熱河返京途中，得知事件已經平定，於九月十九日返抵皇宮。\n\n"+
"九月二十三日，嘉慶帝親自審問了林清以及太監劉金、劉得財等人，並下令處死林清等人。嘉慶帝在《遇變罪己詔》中稱此為「漢唐宋明未有之事」；禮親王昭槤說：「洪荒以來，有此事乎？」\n\n"+
"嘉慶二十四年十月十九日（1819年12月6日），西華門內的文穎館失火。宮外的王公大臣們聞訊趕來撲救，但在西華門偏吉柵欄處，被那裡的值班官兵以皇宮禁地不准隨意出入為由，攔在西華門外，不准通過。這時嘉慶帝已下旨，令開西華門，放人進宮救火，但這裡的官兵仍不放人。事後，嘉慶帝下旨，革去當日值班的護軍統領蘇沖阿的職務，「以示懲儆」。\n\n"+
"清朝末期，庚子年（1900年）八國聯軍攻打京城，慈禧太后、光緒皇帝一行即由西華門離宮，倉皇西逃。\n\n"+
"從西華門城樓上，可以俯瞰中南海全景。中華人民共和國成立後，中南海成為中國的政治中心，所以西華門的地理位置極為重要，不對外開放。"
,
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 1460, 
                y: 1118, 
                width: 10, 
                height: 32, 
                text: "東華門", 
                description: "東華門是紫禁城東門，位於紫禁城東城牆偏南。始建於明永樂十八年（1420年）。現為故宮博物院除神武門外的另一個遊客出口。\n\n"+
"東華門坐西朝東，與西華門遙相對應，門外設有下馬碑石，門內南、北兩側各有一座值房，內金水河南北流向，上架石橋1座，橋北為三座門。東華門以西是文華殿，迤南為鑾儀衛大庫。東華門與西華門形制相同，平面矩形，紅色城台，白玉須彌座，當中辟3座券門，券洞外方內圓。城臺上建有城樓，黃琉璃瓦重簷廡殿頂，基座圍以漢白玉欄杆。城樓面闊5間，進深3間，四周出廊。東面簷下「東華門」匾額原為滿、蒙、漢三種文字，後減為滿、漢兩種，辛亥革命後只餘銅質漢字。\n\n"+
"清初，東華門只准內閣官員出入，乾隆朝中期，特許年事已高的一、二品大員出入。清代大行皇帝、皇后、皇太后的梓宮皆由東華門出，民間俗稱「鬼門」。東華門門釘與其它三門的九路九顆不同，為八路九顆，內含陰數，相傳也與此有關。\n\n"+
"有人認為，因為東華門位於紫禁城東邊，有鑑於「東屬木、西屬金、南屬火、北屬水、中屬土」，以及「木剋土、土剋水、水剋火、火剋金、金剋木」的道理，東華門屬五行中的「木」，而在古代建築佈局中，如果出現「木剋土」，這座建築就會變成「凶宅」，不利於皇權穩定。\n\n"+
"也有人認為，當初建造紫禁城時，工人們利用陰陽五行相生相剋之道，將東華門上的門釘數量依照「橫九豎八」排列，鑲嵌72顆偶數門釘。加上偶數在古代被視為「陰數」，所以東華門所屬的「木」就成了五行中的「陰木」；而陰陽五行中，「陰木」不能剋土，以此解決紫禁城淪為「凶宅」方位的難題。滿清入關後，鑒於東華門特殊的地理位置，便將其定為皇家出喪的大門，這樣一來正好和東華門所屬的「陰木」暗合。\n\n"+
"嘉慶年間癸酉之變，農民軍由太監劉得才等人經東華門引入紫禁城，但因於門前與賣煤人爭道，情急之中露出所藏兵刃，從而為守門官兵察覺，驟然關閉東華門，故而僅十數人闖入，起義旋即失敗。\n\n"+
"2020年3月16日，東華門遭汽車撞擊，損壞了一顆門釘。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 934, 
                y: 1135, 
                width: 20, 
                height: 30, 
                text: "協和門", 
                description: "協和門，位於紫禁城外朝中路、太和門東側廊廡正中。\n\n"+
"協和門始建於明朝永樂十八年（1420年），初名「左順門」。明朝嘉靖三十六年四月（1557年），紫禁城三大殿因遭雷擊而起火，延燒至左順門、右順門，翌年重建。嘉靖四十一年九月（1562年），更名為「會極門」。萬曆二十五年六月（1597年），「三殿又災」，延燒至會極門，到天啟年間才又獲得重建。清朝順治初年，重修並更名為「協和門」。\n\n"+
"協和門是一座屋宇式大門，建築面積大約350平方米。坐西朝東，面闊五間，進深兩間，高11.43 米。清朝僅對該門重新修繕，所以該門的建築基本保存了明朝的構造，其鬥栱及彩畫均保留了明朝的特點。\n\n"+
"協和門南、北兩側各有11間廡房。明朝在此設實錄館、玉牒館、起居注館。清朝初年，在北側廡房設稽察欽奉上諭事件處公署，南側廡房設內閣誥敕房。\n\n"+
"協和門是聯繫紫禁城外朝中路與東路文華殿等區域的樞紐，乃前朝出入東華門的必經之路。明正統元年（1436年）二月始于文華殿開設經筵，講畢經書，在此門賜酒飯。明景泰初年，由於戰爭形勢的需要，還一度在此設午朝，御座南向而置，文武執事奏事官依次出班奏事。\n\n"+
"明朝正統十四年（1449年）土木堡之變的消息傳入北京後，爆發午門血案，王振的餘黨、錦衣衛指揮馬順在左順門附近被王竑等大臣打死，大臣們又將王振餘黨宦官毛貴、王長隨亂拳打死，懸屍於東安門外。監國的郕王(後來的景泰帝)驚慌失措，想要退走，被于謙攔住，請其宣佈馬順等人論罪當死，參與毆殺的眾大臣無罪。形勢由此穩定。從此左順門成為打擊宮廷小人的地方，在左順門打死人，刑部不予追究。\n\n"+
"嘉靖三年（1524年）七月十二日，明世宗朱厚熜通知禮部，十六日為父母上冊文、祭告天地，宗廟、社稷，群臣嘩然。七月十五日，包括九卿二十三人、翰林二十人、給事中二十一人、御史三十人等共二百二十多名朝廷官員聚哭於左順門，史稱「大禮議」。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 560, 
                y: 1134, 
                width: 20, 
                height: 30, 
                text: "熙和門", 
                description: "熙和門位於北京紫禁城外朝中路、太和門外西側廡房正中，是由西華門進入前朝的必經之路，與協和門西東相對。\n\n"+
"熙和門始建於明永樂十八年（1420年），初名右順門。明嘉靖三十六年（1557年）四月因三大殿火災被焚毀，次年重建。嘉靖四十一年（1562年）九月改名歸極門。萬曆二十五年（1597年）六月再度燒毀，天啟年間重建。順治二年（1645年）五月改名為雍和門，乾隆元年（1736年）為避雍正皇帝諱而改為熙和門。清乾隆二十三年（1758年）第三次毀於火災，同年十二月重建。\n\n"+
"熙和門為屋宇式大門，坐東朝西，面闊5間，進深2間。現存建築為清代重建，故與協和門形制相仿而略有差異，體現了清代中期官式建築的特點。明代熙和門梢間曾為百官奏事之所。熙和門南北兩側各有11間廡房，清代北側廡房為翻書房，南側為起居注館。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 348, 
                y: 312, 
                width: 18, 
                height: 24, 
                text: "梵宗樓", 
                description: "位於雨花閣西北，是一座依牆興建的三開間卷棚歇山頂二層小樓。該樓體量極小，偏居雨花閣所在院落的西北隅，但供奉的主神地位很高。一樓供奉文殊菩薩青銅坐像，高1.1米，底座寬0.7米。二層供奉文殊菩薩化身大威德金剛青銅像，高1.72米，底座寬1.35米。這兩尊像分別為清宮內最大的文殊菩薩造像與大威德金剛造像。二樓陳列狼皮、虎皮、黃狐狸皮、貂皮、猞猁皮等各種獸皮扁幡；銅鍍金龍紋紅漆箱兩隻，箱內分別供奉皇帝龍袍、衣飾、盔甲；兵器架兩個，供奉刀槍及弓箭。上述供器意在將大威德金剛奉祀為戰神。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 321, 
                y: 644, 
                width: 12, 
                height: 22, 
                text: "寶相樓", 
                description: "寶相樓位於咸若館東側，原為明朝時期的東配殿，乾隆三十年改建為二層樓，成為咸若館的東配樓，是清代皇太后及太妃禮佛之所。建築坐東朝西，面闊七間，採用綠琉璃瓦黃剪邊卷棚歇山式頂，前檐出廊，樓上下兩層分為既連通又獨立的七間佛堂。下層明間供奉釋迦牟尼佛立像，其餘六間分別放置乾隆年間製造的掐絲琺瑯大佛塔，每塔頂直通天井，三面牆懸掛有繪有護法神像的唐卡。樓上明間供奉木雕金漆宗喀巴像，牆上懸掛釋迦牟尼與宗喀巴畫傳唐卡，其餘六間則設供案供奉顯宗與密宗主尊像，每室9尊，共54尊，對應樓下六室的54尊護法神像。六室內的兩側嵌有千佛龕，內供小銅佛像122尊，總計732尊，龕下設紫檀木經櫃，收藏佛經。此外，六室分別以顯宗與密宗中的事部、行部、瑜伽部、無上瑜伽部父續與母續為主題，供奉相關佛像、唐卡與供器，展現了格魯派顯密兼修的特色。寶相樓集顯宗密宗於一體，是清宮佛堂的重要模式，亦被清宮檔案稱為「六品佛樓」。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 248, 
                y: 644, 
                width: 12, 
                height: 22, 
                text: "吉雲樓", 
                description: "位於咸若館西側。明朝時，原為咸若館西配殿，清朝乾隆三十年（1765年）改建為二層樓，成為咸若館的西配樓。乾隆三十六年（1771年）懸掛題有滿文及漢文「吉雲樓」的匾額。吉雲樓坐西朝東，面闊七間，與東面的寶相樓相對。吉雲樓上、下室內正中都供奉有大尊佛像。佛像兩側各有一座帶有長方形底座以及多層台階的金字塔式供台，供台頂部為一道長牆式的千佛龕。供台上層層放置有五彩描金擦擦佛母像。吉雲樓屋梁、四壁各處滿做千佛龕，龕內供奉相同的五彩描金擦擦佛母像，共計一萬多尊。這種專門供奉擦擦佛的寬敞殿堂可能是中國內地藏傳佛教佛殿中的僅存者，連西藏也未見留存至今的實例。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 1165, 
                y: 172, 
                width: 14, 
                height: 29, 
                text: "玉粹軒", 
                description: "位於第四進院落，西依宮牆，東為符望閣。清朝乾隆三十七年（1772年）仿建福宮花園凝暉堂而興建。玉粹軒面闊三間，前出廊，歇山卷棚頂，綠色琉璃瓦件飾檐、脊，其餘鋪𡧗黃色琉璃瓦。玉粹軒內分隔為三室，南為「得閒室」，北為佛堂。室內有通道向北通往竹香館。玉粹軒前東南側橫亙著一道用彩色石片貼面的短垣，北側通過遊廊向東和符望閣連接，將玉粹軒前隔出了一個小院。玉粹軒南和石山相連接，山上有蹬道通往山頂。得閑室對聯為「甄性神明鏡，陶情翰墨筵」。",
                color: "rgba(255, 165, 0, 1)"
            },{ 
                x: 1152, 
                y: 820, 
                width: 20, 
                height: 28, 
                text: "上駟院", 
                description: "上駟院是清朝內務府下屬的三個重要機構之一，負責管理皇室御用馬匹。清初沿用明朝的「御馬監」，順治十八年改稱「阿敦衙門」，滿語「阿敦」意為「馬群」。至康熙十六年始改為「上駟院」。該院掌管皇帝、后妃及皇子出行所用的馬匹，包括御馬（供皇帝使用）、內馬（備選御馬）等。上駟院分別在皇城內、南苑、安河設有十八個馬廄，並在口外及盛京等地設牧場，用於飼養馬匹與駱駝。根據《內務府冊》和《欽定大清會典》，上駟院不僅管理馬匹數量及分配，還負責提供所需草料及馬匹醫療服務。其內設有蒙古醫士三十名，專司骨傷治療，甚至挽救過跌傷致重的官員，如康熙年間的大臣齊召南。此外，乾隆年間大臣來保曾獻良馬予皇帝，顯示上駟院對馬匹品質的重視。上駟院衙門位於紫禁城東路，面向西側，並設有馬廄及車房。然而，隨著時間推移，該區域的建築多已倒塌。2013年開始，故宮博物院展開了對上駟院車房的修復工程，完成後作為管理用房使用，以便進一步改善區域環境。整體而言，上駟院在清朝皇室的日常運作中具有不可或缺的作用，不僅體現了皇室對馬匹的精細管理，也反映了清代宮廷生活的細節與制度化運行。",
                color: "rgba(255, 165, 0, 1)"
            },
        ]

        // 添加描述面板的引用
        this.descriptionPanel = document.getElementById('descriptionPanel');
        if (!this.descriptionPanel) {
            this.createDescriptionPanel();
        }
        
        this.bindEvents();
        this.loadMazeImage();

        function checkBoundaryAndCenter() {
            // 獲取畫布可視區域的尺寸
            const viewportWidth = this.canvas.width;
            const viewportHeight = this.canvas.height;
            
            // 計算目標相對於畫布邊緣的距離百分比
            const leftDistance = this.target.x;
            const rightDistance = viewportWidth - this.target.x;
            const topDistance = this.target.y;
            const bottomDistance = viewportHeight - this.target.y;
            
            // 設定邊界閾值（接近邊緣多少開始移動畫面）
            const boundaryThreshold = viewportWidth * 0.2; // 視窗寬度的20%
            
            // 檢查是否接近邊界並計算需要移動的距離
            let moveX = 0;
            let moveY = 0;
            
            if (leftDistance < boundaryThreshold) {
                // 計算需要向右移動的距離，越接近邊緣移動越多
                const ratio = 1 - (leftDistance / boundaryThreshold);
                moveX = boundaryThreshold * ratio * 0.1; // 緩慢移動
            } else if (rightDistance < boundaryThreshold) {
                // 計算需要向左移動的距離
                const ratio = 1 - (rightDistance / boundaryThreshold);
                moveX = -boundaryThreshold * ratio * 0.1;
            }
            
            if (topDistance < boundaryThreshold) {
                // 計算需要向下移動的距離
                const ratio = 1 - (topDistance / boundaryThreshold);
                moveY = boundaryThreshold * ratio * 0.1;
            } else if (bottomDistance < boundaryThreshold) {
                // 計算需要向上移動的距離
                const ratio = 1 - (bottomDistance / boundaryThreshold);
                moveY = -boundaryThreshold * ratio * 0.1;
            }
            
            // 如果需要移動，調整偏移量同時保持目標與畫面的相對位置
            if (moveX !== 0 || moveY !== 0) {
                // 移動畫面偏移
                this.offsetX += moveX;
                this.offsetY += moveY;
                
                // 同時移動目標位置保持相對位置不變
                this.target.x += moveX;
                this.target.y += moveY;
                
                // 更新目標軌跡
                this.target.trail = this.target.trail.map(point => ({
                    x: point.x + moveX,
                    y: point.y + moveY
                }));
                
                // 更新終點位置
                this.endpoint.x += moveX;
                this.endpoint.y += moveY;
                
                return true; // 返回true表示進行了邊界調整
            }
            
            return false; // 返回false表示沒有進行邊界調整
        }
        
        // 2. 新增WASD鍵盤控制畫面移動功能
        function initKeyboardControls() {
            
            // 移動速度
            const moveSpeed = 20;
            
            // 按鍵狀態
            const keyState = {
                w: false,
                a: false,
                s: false,
                d: false
            };
            
            // 監聽按鍵按下事件
            window.addEventListener('keydown', (event) => {
                const key = event.key.toLowerCase();
                if (key === 'w' || key === 'a' || key === 's' || key === 'd') {
                    keyState[key] = true;
                }
            });
            
            // 監聽按鍵釋放事件
            window.addEventListener('keyup', (event) => {
                const key = event.key.toLowerCase();
                if (key === 'w' || key === 'a' || key === 's' || key === 'd') {
                    keyState[key] = false;
                }
            });
            
            // 設定定時移動功能
            const moveInterval = setInterval(() => {
                // 檢查目標是否正在跟隨狀態
                if (this.target.following) {
                  return; // 如果目標正在跟隨狀態，直接返回
                }
              
                let moveX = 0;
                let moveY = 0;
              
                // 根據按鍵狀態計算移動方向
                if (keyState.w) moveY += moveSpeed;
                if (keyState.s) moveY -= moveSpeed;
                if (keyState.a) moveX += moveSpeed;
                if (keyState.d) moveX -= moveSpeed;
              
                // 如果有移動，進行畫面調整
                if (moveX !== 0 || moveY !== 0) {
                  // 更新偏移量
                  this.offsetX += moveX;
                  this.offsetY += moveY;
              
                  // 同時移動目標和相關元素以保持相對位置
                  this.target.x += moveX;
                  this.target.y += moveY;
              
                  // 更新目標軌跡
                  this.target.trail = this.target.trail.map(point => ({
                    x: point.x + moveX,
                    y: point.y + moveY
                  }));
              
                  // 更新終點位置
                  this.endpoint.x += moveX;
                  this.endpoint.y += moveY;
                }
              }, 30); // 約30fps的更新頻率
            
            // 將清除功能添加到遊戲實例中，以便在需要時清除
            this.clearKeyboardControls = () => {
                clearInterval(moveInterval);
            };
        }
        
        // 3. 整合到MazeGame類的constructor中
        // 在你的constructor函式結尾前加入：
        this.checkBoundaryAndCenter = checkBoundaryAndCenter.bind(this);
        this.initKeyboardControls = initKeyboardControls.bind(this);
        this.initKeyboardControls(); // 初始化鍵盤控制
        
        // 4. 在update或游戲循環中調用邊界檢查（假設你有一個update方法）
        // 如果沒有update方法，則需要加入一個：
        function update() {
            // 只在移動端或觸控設備上檢查邊界
            if ('ontouchstart' in window && this.target.following) {
                this.checkBoundaryAndCenter();
            }
            
            // 在此處添加其他更新邏輯...
            
            // 重繪遊戲界面
            this.render();
            
            // 請求下一幀更新
            requestAnimationFrame(this.update.bind(this));
        }
        
        // 5. 在constructor中初始化update循環
        this.update = update.bind(this);
        requestAnimationFrame(this.update.bind(this));
    }

    showRulesModal() {
        const modal = document.getElementById('rules-modal');
        const closeButton = document.getElementById('close-rules-modal');
        
        modal.style.display = 'flex';
        
        closeButton.onclick = () => {
            modal.style.display = 'none';
        };
    }

    initMobileView() {
        // 設置viewport
        const viewport = document.querySelector('meta[name=viewport]');
        if (!viewport) {
            const meta = document.createElement('meta');
            meta.name = 'viewport';
            meta.content = 'width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no';
            document.head.appendChild(meta);
        }

        // 調整畫布大小以適應螢幕
        const updateCanvasSize = () => {
            const screenWidth = window.innerWidth;
            const screenHeight = window.innerHeight;
            const screenRatio = screenWidth / screenHeight;
            
            // 保持畫布的原始比例
            const originalRatio = 1500 / 1321; // 原始寬高比
            
            let canvasWidth, canvasHeight;
            if (screenRatio > originalRatio) {
                // 螢幕較寬，以高度為準
                canvasHeight = screenHeight;
                canvasWidth = screenHeight * originalRatio;
            } else {
                // 螢幕較窄，以寬度為準
                canvasWidth = screenWidth;
                canvasHeight = screenWidth / originalRatio;
            }
            
            this.canvas.style.width = `${canvasWidth}px`;
            this.canvas.style.height = `${canvasHeight}px`;
            
            // 保持畫布的實際像素大小
            this.canvas.width = 1500;
            this.canvas.height = 1321;
        };

        // 初始調整大小
        updateCanvasSize();
        
        // 監聽螢幕方向變化
        window.addEventListener('resize', updateCanvasSize);
        window.addEventListener('orientationchange', updateCanvasSize);
    }

    bindTouchEvents() {
        
        // 觸控開始
        this.canvas.addEventListener('touchstart', (e) => {
            e.preventDefault();
            // 處理點擊建築物
            const touch = e.touches[0];
            const rect = this.canvas.getBoundingClientRect();
            const canvasScaleX = this.canvas.width / rect.width;
            const canvasScaleY = this.canvas.height / rect.height;
            
            const touchX = (touch.clientX - rect.left) * canvasScaleX;
            const touchY = (touch.clientY - rect.top) * canvasScaleY;

            // 檢查所有位置組
            [this.locations1, this.locations2, this.locations3, this.locations4, this.locations5].forEach(locations => {
                locations.forEach(loc => {
                    const scaledX = loc.x * this.zoomFactor + this.offsetX;
                    const scaledY = loc.y * this.zoomFactor + this.offsetY;
                    const scaledWidth = loc.width * this.zoomFactor;
                    const scaledHeight = loc.height * this.zoomFactor;

                    if (
                        touchX >= scaledX &&
                        touchX <= scaledX + scaledWidth &&
                        touchY >= scaledY &&
                        touchY <= scaledY + scaledHeight
                    ) {
                        this.showDescription(loc.text, loc.description);
                    }
                });
            });
            this.isTouching = true;
            
            if (e.touches.length === 2) {
                // 兩指觸控，準備縮放
                this.isMultiTouch = true;
                this.lastTouchDistance = this.getTouchDistance(e.touches);
            } else if (e.touches.length === 1) {
                // 單指觸控
                const touch = e.touches[0];
                this.touchStartX = touch.clientX;
                this.touchStartY = touch.clientY;
                
                // 檢查是否點擊到目標
                this.handleTouchStart(touch);
            }
        });

        // 觸控移動
        this.canvas.addEventListener('touchmove', (e) => {
            e.preventDefault();
            
            if (!this.isTouching) return;

            if (this.isMultiTouch && e.touches.length === 2) {
                // 處理縮放
                this.handlePinchZoom(e.touches);
            } else if (e.touches.length === 1) {
                // 處理拖曳
                this.handleTouchMove(e.touches[0]);
            }
        });

        // 觸控結束
        this.canvas.addEventListener('touchend', (e) => {
            e.preventDefault();
            
            if (e.touches.length === 0) {
                this.isTouching = false;
                this.isMultiTouch = false;
                // 處理觸控結束
                this.handleTouchEnd(e);
            } else if (e.touches.length === 1) {
                this.isMultiTouch = false;
                // 更新單指觸控的起始位置
                this.touchStartX = e.touches[0].clientX;
                this.touchStartY = e.touches[0].clientY;
            }
        });
    }

    // 計算兩指間距離
    getTouchDistance(touches) {
        const dx = touches[0].clientX - touches[1].clientX;
        const dy = touches[0].clientY - touches[1].clientY;
        return Math.sqrt(dx * dx + dy * dy);
    }

    handleTouchStart(touch) {
        const rect = this.canvas.getBoundingClientRect();
        const canvasScaleX = this.canvas.width / rect.width;
        const canvasScaleY = this.canvas.height / rect.height;
        
        const touchX = (touch.clientX - rect.left) * canvasScaleX;
        const touchY = (touch.clientY - rect.top) * canvasScaleY;
    
        // 檢查建築物點擊
        [this.locations1, this.locations2, this.locations3, this.locations4, this.locations5].forEach(locations => {
            locations.forEach(loc => {
                const scaledX = loc.x * this.zoomFactor + this.offsetX;
                const scaledY = loc.y * this.zoomFactor + this.offsetY;
                const scaledWidth = loc.width * this.zoomFactor;
                const scaledHeight = loc.height * this.zoomFactor;
    
                if (
                    touchX >= scaledX &&
                    touchX <= scaledX + scaledWidth &&
                    touchY >= scaledY &&
                    touchY <= scaledY + scaledHeight
                ) {
                    this.showDescription(loc.text, loc.description);
                }
            });
        });
    }

    handleTouchMove(touch) { 
        const rect = this.canvas.getBoundingClientRect();
        const canvasScaleX = this.canvas.width / rect.width;
        const canvasScaleY = this.canvas.height / rect.height;
    
        const touchX = (touch.clientX - rect.left) * canvasScaleX;
        const touchY = (touch.clientY - rect.top) * canvasScaleY;
    
        // 計算移動距離
        const prevX = (this.touchStartX - rect.left) * canvasScaleX;
        const prevY = (this.touchStartY - rect.top) * canvasScaleY;
        const dx = touchX - prevX;
        const dy = touchY - prevY;
    
        // 更新偏移
        this.offsetX += dx;
        this.offsetY += dy;
    
        // 更新目標位置
        this.target.x += dx;
        this.target.y += dy;
    
        // 更新目標軌跡
        this.target.trail = this.target.trail.map(point => ({
            x: point.x + dx,
            y: point.y + dy
        }));
    
        // 更新終點位置
        this.endpoint.x += dx;
        this.endpoint.y += dy;
    
        // 更新觸控起始位置
        this.touchStartX = touch.clientX;
        this.touchStartY = touch.clientY;
    }

    // 修改處理雙指縮放的方法
handlePinchZoom(touches) {
    const currentDistance = this.getTouchDistance(touches);
    const scale = currentDistance / this.lastTouchDistance;
    
    // 計算縮放中心點
    const rect = this.canvas.getBoundingClientRect();
    const canvasScaleX = this.canvas.width / rect.width;
    const canvasScaleY = this.canvas.height / rect.height;
    
    const touch1X = (touches[0].clientX - rect.left) * canvasScaleX;
    const touch1Y = (touches[0].clientY - rect.top) * canvasScaleY;
    const touch2X = (touches[1].clientX - rect.left) * canvasScaleX;
    const touch2Y = (touches[1].clientY - rect.top) * canvasScaleY;
    
    const centerX = (touch1X + touch2X) / 2;
    const centerY = (touch1Y + touch2Y) / 2;
    
    // 檢查新的縮放是否在允許範圍內
    const newZoom = this.zoomFactor * scale;
    if (newZoom >= config.minZoom && newZoom <= config.maxZoom) {
        // 保存當前目標相對於縮放中心的位置
        const targetRelX = this.target.x - centerX;
        const targetRelY = this.target.y - centerY;
        
        this.zoomFactor = newZoom;
        
        // 更新偏移以保持縮放中心點
        this.offsetX = centerX - (centerX - this.offsetX) * scale;
        this.offsetY = centerY - (centerY - this.offsetY) * scale;
        
        // 更新目標位置
        this.target.x = centerX + targetRelX * scale;
        this.target.y = centerY + targetRelY * scale;
        
        // 更新目標軌跡
        this.target.trail = this.target.trail.map(point => ({
            x: centerX + (point.x - centerX) * scale,
            y: centerY + (point.y - centerY) * scale
        }));
        
        // 更新終點位置
        this.updateEndpointPosition();
    }
    
    this.lastTouchDistance = currentDistance;
}

    

    initializeCanvas() {
        // 設定固定的畫布大小
        const CANVAS_WIDTH = 1500;  // 或其他你想要的固定寬度
        const CANVAS_HEIGHT = 1321; // 或其他你想要的固定高度
        
        this.canvas.width = CANVAS_WIDTH;
        this.canvas.height = CANVAS_HEIGHT;
        
        // 使用 CSS 來控制顯示大小，保持長寬比
        this.canvas.style.width = '100%';
        this.canvas.style.height = 'auto';
        this.canvas.style.maxWidth = '100%';
        this.canvas.style.objectFit = 'contain';
        
        // 防止畫布被壓縮
        this.canvas.style.imageRendering = 'pixelated';
        this.canvas.style.imageRendering = '-moz-crisp-edges';
        this.canvas.style.imageRendering = 'crisp-edges';
    }

    // 判斷特定座標是否為障礙物
    isPointObstacle(x, y) {
        if (!this.collisionMap) {
            console.error("碰撞地圖未生成！");
            return false;
        }

        // 將螢幕座標轉換為原始圖像座標
        const adjustedX = Math.round((x - this.offsetX) / this.zoomFactor);
        const adjustedY = Math.round((y - this.offsetY) / this.zoomFactor);

        // 確保不超出地圖邊界
        if (
            adjustedX >= 0 && adjustedX < this.collisionMap[0].length &&
            adjustedY >= 0 && adjustedY < this.collisionMap.length
        ) {
            return this.collisionMap[adjustedY][adjustedX] === 1;
        }

        // 如果超出邊界，視為障礙物
        return true;
    }

    // 尋找可行的滑動方向
    findSlidingPosition(currentX, currentY, targetX, targetY) {
        // 如果可以直接移動，則返回目標位置
        if (!this.isLineCollidingWithObstacle(currentX, currentY, targetX, targetY)) {
            return { x: targetX, y: targetY };
        }

        // 嘗試水平移動
        if (!this.isLineCollidingWithObstacle(currentX, currentY, targetX, currentY)) {
            return { x: targetX, y: currentY };
        }

        // 嘗試垂直移動
        if (!this.isLineCollidingWithObstacle(currentX, currentY, currentX, targetY)) {
            return { x: currentX, y: targetY };
        }

        // 如果水平和垂直都不行，嘗試斜向移動
        const dx = targetX - currentX;
        const dy = targetY - currentY;
        const distance = Math.sqrt(dx * dx + dy * dy);
        
        if (distance < this.joystickSpeed / 2) {
            return { x: currentX, y: currentY }; // 如果太近，保持原位
        }

        // 嘗試不同角度的移動
        const angles = [45, 30, 60, 15, 75]; // 優先嘗試接近原方向的角度
        for (const angle of angles) {
            // 順時針嘗試
            const cwRadians = (Math.atan2(dy, dx) + angle * Math.PI / 180) % (2 * Math.PI);
            const cwX = currentX + Math.cos(cwRadians) * this.joystickSpeed;
            const cwY = currentY + Math.sin(cwRadians) * this.joystickSpeed;
            if (!this.isLineCollidingWithObstacle(currentX, currentY, cwX, cwY)) {
                return { x: cwX, y: cwY };
            }

            // 逆時針嘗試
            const ccwRadians = (Math.atan2(dy, dx) - angle * Math.PI / 180) % (2 * Math.PI);
            const ccwX = currentX + Math.cos(ccwRadians) * this.joystickSpeed;
            const ccwY = currentY + Math.sin(ccwRadians) * this.joystickSpeed;
            if (!this.isLineCollidingWithObstacle(currentX, currentY, ccwX, ccwY)) {
                return { x: ccwX, y: ccwY };
            }
        }

        // 如果所有方向都無法移動，則保持原位
        return { x: currentX, y: currentY };
    }

    bindJoystickEvents() {
        let isMoving = false;
        let moveDirection = { x: 0, y: 0 };
        let animationFrameId = null; // 追蹤動畫幀ID
    
        const moveTarget = () => {
            if (!isMoving) {
                // 如果不再移動，取消動畫循環
                if (animationFrameId) {
                    cancelAnimationFrame(animationFrameId);
                    animationFrameId = null;
                }
                return;
            }
    
            // 計算目標位置 - 確保速度一致
            const speedFactor = this.joystickSpeed;
            const targetX = this.target.x + moveDirection.x * speedFactor;
            const targetY = this.target.y + moveDirection.y * speedFactor;
    
            // 使用滑動邏輯找出最佳移動位置
            const newPosition = this.findSlidingPosition(
                this.target.x,
                this.target.y,
                targetX,
                targetY
            );
    
            // 更新位置
            this.target.x = newPosition.x;
            this.target.y = newPosition.y;
    
            // 添加軌跡點
            this.target.trail.push({
                x: this.target.x,
                y: this.target.y
            });
    
            // 限制軌跡長度
            if (this.target.trail.length > 1000) {
                this.target.trail.shift();
            }
    
            // 檢查終點
            this.checkEndpoint();
    
            // 繼續動畫循環，確保只有一個循環在運行
            animationFrameId = requestAnimationFrame(moveTarget);
        };
    
        // 監聽 joystickMove 事件
        window.addEventListener('joystickMove', (e) => {
            if (this.hasReachedEnd) return;
    
            // 修改目標顏色和跟隨狀態
            this.target.color = 'blue';
            this.target.following = true;
    
            // 更新移動方向 - 確保方向向量的長度始終為1或更小
            const { x, y } = e.detail;
            const magnitude = Math.sqrt(x * x + y * y);
            
            // 規範化向量，確保magnitude不超過1
            if (magnitude > 1) {
                moveDirection.x = x / magnitude;
                moveDirection.y = y / magnitude;
            } else {
                moveDirection.x = x;
                moveDirection.y = y;
            }
    
            // 啟動動畫循環，確保只有一個循環在運行
            if (!isMoving) {
                isMoving = true;
                // 取消之前的動畫循環（如果有）
                if (animationFrameId) {
                    cancelAnimationFrame(animationFrameId);
                }
                animationFrameId = requestAnimationFrame(moveTarget);
            }
        });
    
        // 監聽 joystickEnd 事件
        window.addEventListener('joystickEnd', () => {
            // 停止移動
            isMoving = false;
            
            // 重置移動方向
            moveDirection.x = 0;
            moveDirection.y = 0;
            
            // 取消動畫循環
            if (animationFrameId) {
                cancelAnimationFrame(animationFrameId);
                animationFrameId = null;
            }
            
            this.target.following = false;
            this.target.color = 'red';
        });
    }
    
    loadMazeImage() {
        this.mazeImage = new Image();
        this.mazeImage.onload = () => {
            // 初始化遊戲狀態
            gameState.isLoading = false;
            gameState.isInitialized = true;
    
            // 繪製迷宮圖像
            this.ctx.drawImage(this.mazeImage, 0, 0, this.canvas.width, this.canvas.height);
    
            // 生成碰撞地圖 (假設已有 generateCollisionMap 方法)
            this.generateCollisionMap();
    
            // 可視化碰撞地圖
            //this.visualizeCollisionMap();
    
            // 開始遊戲循環
            this.startGameLoop();
        };
        this.mazeImage.onerror = (error) => {
            gameState.error = '迷宮圖片載入失敗';
            console.error('圖片載入錯誤:', error);
        };
        this.mazeImage.src = './images/紫禁城平面圖.png';
    }

    generateCollisionMap() {
        const canvasWidth = this.canvas.width;
        const canvasHeight = this.canvas.height;
    
        // 建立空的二維陣列
        const collisionMap = Array.from({ length: canvasHeight }, () => 
            Array(canvasWidth).fill(0)
        );
    
        // 讀取整個畫布的像素資料
        const imageData = this.ctx.getImageData(0, 0, canvasWidth, canvasHeight);
        const data = imageData.data;
    
        for (let y = 0; y < canvasHeight; y++) {
            for (let x = 0; x < canvasWidth; x++) {
                const index = (y * canvasWidth + x) * 4;
                const r = data[index];
                const g = data[index + 1];
                const b = data[index + 2];
                const a = data[index + 3];
    
                // 如果是黑色像素（或近似黑色）
                if (r <= 20 && g <= 20 && b <= 20 && a > 0) {
                    collisionMap[y][x] = 1; // 直接標記為障礙物
                }
            }
        }
    
        this.collisionMap = collisionMap;
        console.log("碰撞地圖生成完成！");
    }

    // 修改建立描述面板的方法
createDescriptionPanel() {
    this.descriptionPanel = document.createElement('div');
    this.descriptionPanel.id = 'descriptionPanel';
    this.descriptionPanel.style.cssText = `
        position: fixed;
        right: 20px;
        top: 20px;
        width: 300px;
        max-height: 80vh;
        padding: 20px;
        background: white;
        border: 1px solid #ccc;
        border-radius: 5px;
        box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        overflow-y: auto;
        -webkit-overflow-scrolling: touch;
        visibility: hidden; /* 使用 visibility 代替 display */
        opacity: 0;
        transition: visibility 0s, opacity 0.3s linear; /* 添加過渡效果 */
    `;

    // 創建關閉按鈕
    const closeButton = document.createElement('div');
    closeButton.style.cssText = `
        position: absolute;
        right: 10px;
        top: 10px;
        width: 20px;
        height: 20px;
        cursor: pointer;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 20px;
        line-height: 20px;
        color: #666;
    `;
    closeButton.innerHTML = '×';
    closeButton.addEventListener('click', (e) => {
        e.stopPropagation();
        this.hideDescription();
    });

    // 創建內容容器
    this.descriptionContent = document.createElement('div');
    this.descriptionContent.style.cssText = `
        padding-right: 20px;
    `;

    this.descriptionPanel.appendChild(closeButton);
    this.descriptionPanel.appendChild(this.descriptionContent);
    document.body.appendChild(this.descriptionPanel);
}

// 修改顯示描述文字的方法
showDescription(title, description) {
    // 更新內容，將換行符替換為 HTML 的段落標籤
    this.descriptionContent.innerHTML = `
        <h3 style="margin: 0 0 10px 0;">${title}</h3>
        <p style="margin: 0; white-space: pre-line;">${description}</p>
    `;
    
    // 顯示面板
    this.descriptionPanel.style.visibility = 'visible';
    this.descriptionPanel.style.opacity = '1';
}

// 修改隱藏描述面板的方法
hideDescription() {
    this.descriptionPanel.style.opacity = '0';
    setTimeout(() => {
        this.descriptionPanel.style.visibility = 'hidden';
    }, 300); // 等待淡出動畫完成
}

    // 更新終點座標的方法
    updateEndpointPosition() {
        this.endpoint.x = this.endpoint.originalX * this.zoomFactor + this.offsetX;
        this.endpoint.y = this.endpoint.originalY * this.zoomFactor + this.offsetY;
    }

    bindEvents() {
        this.canvas.addEventListener('mousemove', this.handleMouseMove.bind(this));
        this.canvas.addEventListener('mousedown', this.handleMouseDown.bind(this));
        this.canvas.addEventListener('mouseup', this.handleMouseUp.bind(this));
        this.canvas.addEventListener('click', this.handleMouseClick.bind(this));
        this.canvas.addEventListener('wheel', this.handleWheel.bind(this));
    }

    // 檢查滑鼠是否在有效範圍內
    isMouseInBounds(mouseX, mouseY) {
        const rect = this.canvas.getBoundingClientRect();
        
        // 添加邊距檢查
        return (
            mouseX >= rect.left + this.boundaryMargin &&
            mouseX <= rect.right - this.boundaryMargin &&
            mouseY >= rect.top + this.boundaryMargin &&
            mouseY <= rect.bottom - this.boundaryMargin
        );
    }

    handleMouseMove(event) {
        const rect = this.canvas.getBoundingClientRect();
        const canvasScaleX = this.canvas.width / rect.width;
        const canvasScaleY = this.canvas.height / rect.height;

        // 將初始的 lastValidMouse 座標轉換為畫布內部座標
        this.lastValidMouseX = (event.clientX - rect.left) * canvasScaleX;
        this.lastValidMouseY = (event.clientY - rect.top) * canvasScaleY;
        
        // 計算當前滑鼠在畫布上的位置
        const currentMouseX = (event.clientX - rect.left) * canvasScaleX;
        const currentMouseY = (event.clientY - rect.top) * canvasScaleY;

        console.log(`目標座標: x=${this.target.x}, y=${this.target.y}`);

        

        // 檢查滑鼠是否碰到目標
        const dist = Math.sqrt(
            (currentMouseX - this.target.x) ** 2 + 
            (currentMouseY - this.target.y) ** 2
        );

            // 如果滑鼠碰到目標，檢查冷卻時間後再自動開始跟隨
            if (dist < (this.target.radius * this.zoomFactor * 2)) {
                const currentTime = Date.now();
                if (!this.target.following && 
                    currentTime - this.lastFollowingStopTime >= this.followingCooldown) {
                        this.target.following = true;
                        this.target.color = 'blue';
                        this.target.trail = [{ x: this.target.x, y: this.target.y }];
        }
    }

        // 初始化或更新上一個有效的滑鼠位置
        if (this.lastValidMouseX === null) {
            this.lastValidMouseX = currentMouseX;
            this.lastValidMouseY = currentMouseY;
        }

        if (this.isDragging) {
            if (!this.target.following) {
                const dx = ((event.clientX - this.lastMouseX) * canvasScaleX);
                const dy = ((event.clientY - this.lastMouseY) * canvasScaleY);
    
                this.offsetX += dx;
                this.offsetY += dy;
    
                this.target.x += dx;
                this.target.y += dy;
                this.target.trail = this.target.trail.map(point => ({
                    x: point.x + dx,
                    y: point.y + dy
                }));
                // 更新終點位置
                this.endpoint.x += dx;
                this.endpoint.y += dy;
            }
            this.lastMouseX = event.clientX;
            this.lastMouseY = event.clientY;
        } 
        
        if (this.target.following) {
            console.log("檢測碰撞:", {
                lastX: this.lastValidMouseX,
                lastY: this.lastValidMouseY,
                currentX: currentMouseX,
                currentY: currentMouseY
            });

            // 檢查碰撞
            if (this.isLineCollidingWithObstacle(
                this.lastValidMouseX,
                this.lastValidMouseY,
                currentMouseX,
                currentMouseY
            )) {
                console.log("檢測到碰撞!");
            
                if (this.target.trail.length >= 5) {
                    const trailPoints = [];
                    for (let i = 0; i < 5; i++) {
                        trailPoints.push(this.target.trail.pop()); // 移除並保存最後五個點
                    }
                
                    const lastTrailPoint = trailPoints[trailPoints.length - 1];
                    this.target.x = lastTrailPoint.x;
                    this.target.y = lastTrailPoint.y;
                
                    console.log("退回到最近的五個點:", trailPoints);
                }
            
                // 停止跟隨並更改目標顏色
                this.target.following = false;
                this.target.color = 'red';
                return;
            }

            // 更新目標位置
            this.target.x = currentMouseX;
            this.target.y = currentMouseY;
            
            // 添加新的軌跡點
            this.target.trail.push({
                x: this.target.x,
                y: this.target.y
            });

            // 限制軌跡長度
            if (this.target.trail.length > 1000) {
                this.target.trail.shift();
            }

            // 更新上一個有效的滑鼠位置
            this.lastValidMouseX = currentMouseX;
            this.lastValidMouseY = currentMouseY;
        }
    }

    handleMouseDown(event) {
        const { clientX: mouseX, clientY: mouseY } = event;

        if (event.button === 0) { // 左鍵
            this.isDragging = true;
            this.lastMouseX = mouseX;
            this.lastMouseY = mouseY;
        }
    }

    handleMouseUp() {
        this.isDragging = false;
    }

    // 更新處理點擊事件
    handleMouseClick(event) {
        const rect = this.canvas.getBoundingClientRect();
        const canvasScaleX = this.canvas.width / rect.width;
        const canvasScaleY = this.canvas.height / rect.height;
        
        const adjustedMouseX = (event.clientX - rect.left) * canvasScaleX;
        const adjustedMouseY = (event.clientY - rect.top) * canvasScaleY;
    
        // 檢查是否點擊了目標
        if (this.isMouseOnTarget(event.clientX, event.clientY)) {
            const currentTime = Date.now();
            if (this.target.following) {
                // 如果正在跟隨，則停止並記錄時間
                this.target.following = false;
                this.target.color = 'red';
                this.lastFollowingStopTime = currentTime;
            } else {
                // 檢查是否已經過了冷卻時間
                if (currentTime - this.lastFollowingStopTime >= this.followingCooldown) {
                    this.target.following = true;
                    this.target.trail = [{ x: this.target.x, y: this.target.y }];
                    this.target.color = 'blue';
                }
            }
            return;
        }

        // 檢查是否點擊了地點物件
        const clickedLocation1 = this.locations1.find(loc => {
            const scaledX = loc.x * this.zoomFactor + this.offsetX;
            const scaledY = loc.y * this.zoomFactor + this.offsetY;
            const scaledWidth = loc.width * this.zoomFactor;
            const scaledHeight = loc.height * this.zoomFactor;

            return (
                adjustedMouseX >= scaledX &&
                adjustedMouseX <= scaledX + scaledWidth &&
                adjustedMouseY >= scaledY &&
                adjustedMouseY <= scaledY + scaledHeight
            );
        });
        const clickedLocation2 = this.locations2.find(loc => {
            const scaledX = loc.x * this.zoomFactor + this.offsetX;
            const scaledY = loc.y * this.zoomFactor + this.offsetY;
            const scaledWidth = loc.width * this.zoomFactor;
            const scaledHeight = loc.height * this.zoomFactor;

            return (
                adjustedMouseX >= scaledX &&
                adjustedMouseX <= scaledX + scaledWidth &&
                adjustedMouseY >= scaledY &&
                adjustedMouseY <= scaledY + scaledHeight
            );
        });
        const clickedLocation3 = this.locations3.find(loc => {
            const scaledX = loc.x * this.zoomFactor + this.offsetX;
            const scaledY = loc.y * this.zoomFactor + this.offsetY;
            const scaledWidth = loc.width * this.zoomFactor;
            const scaledHeight = loc.height * this.zoomFactor;

            return (
                adjustedMouseX >= scaledX &&
                adjustedMouseX <= scaledX + scaledWidth &&
                adjustedMouseY >= scaledY &&
                adjustedMouseY <= scaledY + scaledHeight
            );
        });
        const clickedLocation4 = this.locations4.find(loc => {
            const scaledX = loc.x * this.zoomFactor + this.offsetX;
            const scaledY = loc.y * this.zoomFactor + this.offsetY;
            const scaledWidth = loc.width * this.zoomFactor;
            const scaledHeight = loc.height * this.zoomFactor;

            return (
                adjustedMouseX >= scaledX &&
                adjustedMouseX <= scaledX + scaledWidth &&
                adjustedMouseY >= scaledY &&
                adjustedMouseY <= scaledY + scaledHeight
            );
        });
        const clickedLocation5 = this.locations5.find(loc => {
            const scaledX = loc.x * this.zoomFactor + this.offsetX;
            const scaledY = loc.y * this.zoomFactor + this.offsetY;
            const scaledWidth = loc.width * this.zoomFactor;
            const scaledHeight = loc.height * this.zoomFactor;

            return (
                adjustedMouseX >= scaledX &&
                adjustedMouseX <= scaledX + scaledWidth &&
                adjustedMouseY >= scaledY &&
                adjustedMouseY <= scaledY + scaledHeight
            );
        });


        if (clickedLocation1) {
            this.showDescription(clickedLocation1.text, clickedLocation1.description);
        }
        if (clickedLocation2) {
            this.showDescription(clickedLocation2.text, clickedLocation2.description);
        }
        if (clickedLocation3) {
            this.showDescription(clickedLocation3.text, clickedLocation3.description);
        }
        if (clickedLocation4) {
            this.showDescription(clickedLocation4.text, clickedLocation4.description);
        }
        if (clickedLocation5) {
            this.showDescription(clickedLocation5.text, clickedLocation5.description);
        }
    }

    

    // 更新縮放處理
    handleWheel(event) {
        event.preventDefault();
        
        if (this.target.following) return;

        const { clientX: mouseX, clientY: mouseY, deltaY } = event;
        const zoomDirection = deltaY < 0 ? 1 : -1;
        const zoomFactor = 1 + zoomDirection * config.zoomSpeed;
        const newZoom = this.zoomFactor * zoomFactor;

        if (newZoom >= config.minZoom && newZoom <= config.maxZoom) {
            const rect = this.canvas.getBoundingClientRect();
            const mousePos = {
                x: mouseX - this.offsetX,
                y: mouseY - this.offsetY
            };

            this.zoomFactor = newZoom;
            this.offsetX = mouseX - mousePos.x * zoomFactor;
            this.offsetY = mouseY - mousePos.y * zoomFactor;

            // 更新目標位置
            const targetRelativeX = (this.target.x - mouseX) * zoomFactor;
            const targetRelativeY = (this.target.y - mouseY) * zoomFactor;
            this.target.x = mouseX + targetRelativeX;
            this.target.y = mouseY + targetRelativeY;

            // 更新終點位置
            this.updateEndpointPosition();

            // 更新軌跡點
            this.target.trail = this.target.trail.map(point => ({
                x: mouseX + (point.x - mouseX) * zoomFactor,
                y: mouseY + (point.y - mouseY) * zoomFactor
            }));
        }
    }

    isMouseOnTarget(mouseX, mouseY) {
        const rect = this.canvas.getBoundingClientRect();
        const canvasScaleX = this.canvas.width / rect.width;
        const canvasScaleY = this.canvas.height / rect.height;
        
        // 轉換滑鼠座標到畫布座標系統
        const adjustedMouseX = (mouseX - rect.left) * canvasScaleX;
        const adjustedMouseY = (mouseY - rect.top) * canvasScaleY;
        
        // 計算距離，考慮縮放和偏移
        const dist = Math.sqrt(
            (adjustedMouseX - this.target.x) ** 2 + 
            (adjustedMouseY - this.target.y) ** 2
        );
        
        return dist < (this.target.radius * this.zoomFactor * 2);
    }

    isLineCollidingWithObstacle(x1, y1, x2, y2) {
        if (!this.collisionMap) {
            console.error("碰撞地圖未生成！");
            return false;
        }
    
        // 將螢幕座標轉換為原始圖像座標
        const adjustedX1 = Math.round((x1 - this.offsetX) / this.zoomFactor);
        const adjustedY1 = Math.round((y1 - this.offsetY) / this.zoomFactor);
        const adjustedX2 = Math.round((x2 - this.offsetX) / this.zoomFactor);
        const adjustedY2 = Math.round((y2 - this.offsetY) / this.zoomFactor);
    
        const distance = Math.sqrt((adjustedX2 - adjustedX1) ** 2 + (adjustedY2 - adjustedY1) ** 2);
        const steps = Math.max(Math.ceil(distance), 10);
    
        for (let i = 0; i <= steps; i++) {
            const t = i / steps;
            const x = Math.round(adjustedX1 + (adjustedX2 - adjustedX1) * t);
            const y = Math.round(adjustedY1 + (adjustedY2 - adjustedY1) * t);
    
            // 確保不超出地圖邊界
            if (
                x >= 0 && x < this.collisionMap[0].length &&
                y >= 0 && y < this.collisionMap.length
            ) {
                if (this.collisionMap[y][x] === 1) {
                    console.log("碰撞發生於點:", { x, y });
                    return true;
                }
            }
        }
    
        return false;
    }

    // 添加圖片轉換動畫
    startTransition() {
        this.isTransitioning = true;
        this.fadeAlpha = 0;
        this.congratsAlpha = 0;
        
        // 開始轉換動畫
        const animate = () => {
            if (this.fadeAlpha < 1) {
                this.fadeAlpha += 0.02; // 控制漸變速度
                requestAnimationFrame(animate);
            } else {
                // 當圖片完全切換後，開始顯示文字
                this.showCongratulation();
            }
        };
        
        animate();
    }

    // 顯示祝賀文字
    showCongratulation() {
        const animateText = () => {
            if (this.congratsAlpha < 1) {
                this.congratsAlpha += 0.02; // 控制文字顯示速度
                requestAnimationFrame(animateText);
            }
        };
        
        animateText();

        // 3秒後隱藏祝賀文字
        if (this.congratsTimeout) {
            clearTimeout(this.congratsTimeout);
        }
        this.congratsTimeout = setTimeout(() => {
            const fadeOutText = () => {
                if (this.congratsAlpha > 0) {
                    this.congratsAlpha -= 0.02; // 控制文字消失速度
                    requestAnimationFrame(fadeOutText);
                }
            };
            fadeOutText();
        }, 10000);
    }

    // 添加新的方法檢查是否到達終點
    checkEndpoint() {
        if (this.hasReachedEnd) return;

        const distance = Math.sqrt(
            (this.target.x - this.endpoint.x) ** 2 + 
            (this.target.y - this.endpoint.y) ** 2
        );

         // 考慮縮放後的半徑
         const scaledRadius = this.endpoint.radius * this.zoomFactor;

        if (distance < this.endpoint.radius + this.target.radius) {
            this.hasReachedEnd = true;
            this.startTransition();
        }
    }

    // 更新繪製函數
    draw() {
        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);

        // 繪製迷宮背景
        if (gameState.isInitialized) {
            this.ctx.save();
            this.ctx.translate(this.offsetX, this.offsetY);
            this.ctx.scale(this.zoomFactor, this.zoomFactor);

            // 繪製原始圖片
            this.ctx.drawImage(
                this.mazeImage,
                0,
                0,
                this.canvas.width,
                this.canvas.height
            );

            // 如果正在轉換，疊加彩色圖片
            if (this.isTransitioning) {
                this.ctx.globalAlpha = this.fadeAlpha;
                this.ctx.drawImage(
                    this.coloredImage,
                    0,
                    0,
                    this.canvas.width,
                    this.canvas.height
                );
                this.ctx.globalAlpha = 1;
            }

            this.ctx.restore();
        }

        // 繪製地點物件
        this.drawLocations();

        // 繪製目標和軌跡
        this.drawTarget();

        // 檢查是否到達終點
        this.checkEndpoint();

        // 如果正在顯示祝賀文字
        if (this.congratsAlpha > 0) {
            this.ctx.save();
            this.ctx.globalAlpha = this.congratsAlpha;
            this.ctx.fillStyle = 'rgba(0, 0, 0, 0.5)';
            this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);
            
            this.ctx.fillStyle = 'gold';
            this.ctx.font = 'bold 72px Arial';
            this.ctx.textAlign = 'center';
            this.ctx.textBaseline = 'middle';
            
            // 添加文字陰影效果
            this.ctx.shadowColor = 'rgba(0, 0, 0, 0.5)';
            this.ctx.shadowBlur = 10;
            this.ctx.shadowOffsetX = 5;
            this.ctx.shadowOffsetY = 5;
            
            // 繪製文字並添加簡單的動畫效果
            const baseY = this.canvas.height / 2;
            const amplitude = 10; // 上下浮動的幅度
            const frequency = 0.002; // 浮動的頻率
            const y = baseY + Math.sin(Date.now() * frequency) * amplitude;
            
            this.ctx.fillText('恭喜通關！', this.canvas.width / 2, y);
            this.ctx.restore();
        }

        // 其他載入中或錯誤訊息的繪製保持不變
        if (gameState.isLoading) {
            this.drawMessage('載入中...');
        } else if (gameState.error) {
            this.drawMessage(gameState.error, 'red');
        }
    }

    // 繪製地點物件
    drawLocations() {
        this.locations1.forEach(loc => {
            const scaledX = loc.x * this.zoomFactor + this.offsetX;
            const scaledY = loc.y * this.zoomFactor + this.offsetY;
            const scaledWidth = loc.width * this.zoomFactor;
            const scaledHeight = loc.height * this.zoomFactor;

            // 繪製半透明背景
            this.ctx.fillStyle = loc.color;
            this.ctx.fillRect(scaledX, scaledY, scaledWidth, scaledHeight);

            // 繪製文字
            this.ctx.fillStyle = 'black';
            const fontSize = 12 * this.zoomFactor; // 增加基礎字體大小
            this.ctx.font = `bold ${fontSize}px Arial`; // 添加粗體
            this.ctx.textAlign = 'center';
            this.ctx.textBaseline = 'middle'; // 確保垂直置中
            this.ctx.fillText(
                loc.text,
                scaledX + scaledWidth / 2,
                scaledY + scaledHeight / 2
            );
        });
        this.locations2.forEach(loc => {
            const scaledX = loc.x * this.zoomFactor + this.offsetX;
            const scaledY = loc.y * this.zoomFactor + this.offsetY;
            const scaledWidth = loc.width * this.zoomFactor;
            const scaledHeight = loc.height * this.zoomFactor;

            // 繪製半透明背景
            this.ctx.fillStyle = loc.color;
            this.ctx.fillRect(scaledX, scaledY, scaledWidth, scaledHeight);

            // 繪製文字
            this.ctx.fillStyle = 'black';
            const fontSize = 24 * this.zoomFactor; // 增加基礎字體大小
            this.ctx.font = `bold ${fontSize}px Arial`; // 添加粗體
            this.ctx.textAlign = 'center';
            this.ctx.textBaseline = 'middle'; // 確保垂直置中
            this.ctx.fillText(
                loc.text,
                scaledX + scaledWidth / 2,
                scaledY + scaledHeight / 2
            );
        });
        this.locations3.forEach(loc => {
            const scaledX = loc.x * this.zoomFactor + this.offsetX;
            const scaledY = loc.y * this.zoomFactor + this.offsetY;
            const scaledWidth = loc.width * this.zoomFactor;
            const scaledHeight = loc.height * this.zoomFactor;

            // 繪製半透明背景
            this.ctx.fillStyle = loc.color;
            this.ctx.fillRect(scaledX, scaledY, scaledWidth, scaledHeight);

            // 設置文字樣式
            this.ctx.fillStyle =  'black';
            const fontSize = 12 * this.zoomFactor;
            this.ctx.font = `bold ${fontSize}px Arial`;
            this.ctx.textAlign = 'center';
            this.ctx.textBaseline = 'middle';

            // 計算每個字符的位置
            const chars = loc.text.split('');
            const totalHeight = chars.length * fontSize;
            const startY = scaledY + (scaledHeight - totalHeight) / 2;
            const centerX = scaledX + scaledWidth / 2;

            // 逐個繪製字符
            chars.forEach((char, index) => {
                const charY = startY + (index + 0.5) * fontSize;
                this.ctx.fillText(char, centerX, charY);
            });
        });
        this.locations4.forEach(loc => {
            const scaledX = loc.x * this.zoomFactor + this.offsetX;
            const scaledY = loc.y * this.zoomFactor + this.offsetY;
            const scaledWidth = loc.width * this.zoomFactor;
            const scaledHeight = loc.height * this.zoomFactor;

            // 繪製半透明背景
            this.ctx.fillStyle = loc.color;
            this.ctx.fillRect(scaledX, scaledY, scaledWidth, scaledHeight);

            // 繪製文字
            this.ctx.fillStyle = 'black';
            const fontSize = 6 * this.zoomFactor; // 增加基礎字體大小
            this.ctx.font = `bold ${fontSize}px Arial`; // 添加粗體
            this.ctx.textAlign = 'center';
            this.ctx.textBaseline = 'middle'; // 確保垂直置中
            this.ctx.fillText(
                loc.text,
                scaledX + scaledWidth / 2,
                scaledY + scaledHeight / 2
            );
        });
        this.locations5.forEach(loc => {
            const scaledX = loc.x * this.zoomFactor + this.offsetX;
            const scaledY = loc.y * this.zoomFactor + this.offsetY;
            const scaledWidth = loc.width * this.zoomFactor;
            const scaledHeight = loc.height * this.zoomFactor;

            // 繪製半透明背景
            this.ctx.fillStyle = loc.color;
            this.ctx.fillRect(scaledX, scaledY, scaledWidth, scaledHeight);

            // 設置文字樣式
            this.ctx.fillStyle =  'black';
            const fontSize = 6 * this.zoomFactor;
            this.ctx.font = `bold ${fontSize}px Arial`;
            this.ctx.textAlign = 'center';
            this.ctx.textBaseline = 'middle';

            // 計算每個字符的位置
            const chars = loc.text.split('');
            const totalHeight = chars.length * fontSize;
            const startY = scaledY + (scaledHeight - totalHeight) / 2;
            const centerX = scaledX + scaledWidth / 2;

            // 逐個繪製字符
            chars.forEach((char, index) => {
                const charY = startY + (index + 0.5) * fontSize;
                this.ctx.fillText(char, centerX, charY);
            });
        });
    }
    
    visualizeCollisionMap() {
        if (!this.collisionMap) {
            console.error("碰撞地圖未生成！");
            return;
        }
    
        this.ctx.save();
    
        // 考慮偏移與縮放
        this.ctx.translate(this.offsetX, this.offsetY);
        this.ctx.scale(this.zoomFactor, this.zoomFactor);
    
        // 遍歷碰撞地圖
        for (let y = 0; y < this.collisionMap.length; y++) {
            for (let x = 0; x < this.collisionMap[0].length; x++) {
                if (this.collisionMap[y][x] === 1) {
                    // 使用半透明紅色繪製障礙物
                    this.ctx.fillStyle = "rgba(255, 0, 0, 0.3)";
                    this.ctx.fillRect(x, y, 1, 1);
                }
            }
        }
    
        this.ctx.restore();
    }

    drawTarget() {
        const scaledRadius = this.target.radius * this.zoomFactor;

        // 繪製軌跡
        if (this.target.trail.length > 1) {
            this.ctx.strokeStyle = `rgba(255, 0, 0, ${config.trailOpacity})`;
            this.ctx.beginPath();
            this.ctx.moveTo(this.target.trail[0].x, this.target.trail[0].y);
            this.target.trail.forEach(point => {
                this.ctx.lineTo(point.x, point.y);
            });
            this.ctx.stroke();
        }

        // 繪製目標外框
        this.ctx.strokeStyle = this.target.borderColor;
        this.ctx.lineWidth = 2;
        this.ctx.beginPath();
        this.ctx.arc(this.target.x, this.target.y, scaledRadius + 2, 0, Math.PI * 2);
        this.ctx.stroke();

        // 繪製目標填充
        this.ctx.fillStyle = this.target.color;
        this.ctx.beginPath();
        this.ctx.arc(this.target.x, this.target.y, scaledRadius, 0, Math.PI * 2);
        this.ctx.fill();
    }

    drawMessage(message, color = 'black') {
        this.ctx.fillStyle = color;
        this.ctx.font = '20px Arial';
        this.ctx.textAlign = 'center';
        this.ctx.fillText(
            message,
            this.canvas.width / 2,
            this.canvas.height / 2
        );
    }

    startGameLoop() {
        const gameLoop = () => {
            this.draw();
            requestAnimationFrame(gameLoop);
        };
        gameLoop();
    }
}

// 初始化遊戲
const game = new MazeGame('gameCanvas');
